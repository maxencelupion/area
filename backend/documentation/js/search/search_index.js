var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Action.html",[0,0.081,1,1.558]],["body/classes/Action.html",[0,0.133,1,3.037,2,1.156,3,0.065,4,0.058,5,0.058,6,4.415,7,1.812,8,0.117,9,0.997,10,2.484,11,1.34,12,0.776,13,1.579,14,0.331,15,3.312,16,0.01,17,1.234,18,2.156,19,3.185,20,4.045,21,3.3,22,4.672,23,3.866,24,0.349,25,2.917,26,1.003,27,2.623,28,2.917,29,3.047,30,2.917,31,4.532,32,0.98,33,2.917,34,2.311,35,3.188,36,2.917,37,3.047,38,2.917,39,0.11,40,3.984,41,1.121,42,0.159,43,1.581,44,3.83,45,3.528,46,2.994,47,3.047,48,4.144,49,1.306,50,3.705,51,3.528,52,1.61,53,1.726,54,1.726,55,0.545,56,3.132,57,3.188,58,3.188,59,2.514,60,3.266,61,2.912,62,2.912,63,2.912,64,2.41,65,1.65,66,1.91,67,1.91,68,1.91,69,3.137,70,2.912,71,2.912,72,2.912,73,1.726,74,2.011,75,0.005,76,0.005]],["title/classes/ActionDto.html",[0,0.081,73,2.543]],["body/classes/ActionDto.html",[0,0.134,1,3.008,2,1.176,3,0.066,4,0.059,5,0.059,6,4.274,7,1.843,8,0.119,9,1.01,10,2.485,11,1.308,12,0.779,13,1.592,14,0.329,15,3.332,16,0.01,17,1.237,18,2.061,19,3.046,20,4.071,21,3.322,22,4.69,23,3.891,24,0.334,26,0.998,27,2.584,29,3.079,31,4.552,32,0.99,34,2.323,35,3.221,37,3.079,39,0.112,40,3.989,41,1.141,42,0.16,43,1.608,44,3.836,45,3.565,46,3.006,47,3.079,48,4.166,49,1.319,50,3.729,51,3.565,52,1.627,53,1.755,54,1.755,55,0.554,56,3.155,57,3.221,58,3.221,59,2.547,60,3.294,61,2.949,62,2.949,63,2.949,64,2.441,65,1.678,66,1.943,67,1.943,68,1.943,69,3.164,70,2.949,71,2.949,72,2.949,73,2.665,74,2.032,75,0.005,76,0.005,77,2.966,78,2.966,79,2.966,80,2.966,81,2.966]],["title/injectables/ActionRegistry.html",[82,0.023,83,1.703]],["body/injectables/ActionRegistry.html",[0,0.092,3,0.11,4,0.098,5,0.098,8,0.198,9,1.445,11,1.051,12,0.741,14,0.307,16,0.01,24,0.405,26,0.992,34,2.032,39,0.27,42,0.11,49,1.191,75,0.007,76,0.007,82,0.035,83,2.553,84,0.759,85,3.427,86,4.23,87,3.412,88,1.612,89,4.707,90,0.94,91,4.777,92,1.205,93,2.553,94,4.777,95,0.847,96,4.325,97,2.563,98,3.935,99,1.081,100,1.081,101,4.777,102,3.935,103,1.048,104,3.923,105,3.354,106,5.668,107,3.935,108,1.131,109,4.777,110,3.935,111,2.462,112,2.909,113,3.412,114,1.483,115,4.777,116,3.935,117,0.477,118,1.732,119,2.559,120,2.78,121,2.909,122,0.78,123,5.158,124,0.968,125,4.325,126,1.272,127,1.89,128,4.325,129,4.325,130,4.325]],["title/modules/ActionRegistryModule.html",[131,1.604,132,2.814]],["body/modules/ActionRegistryModule.html",[0,0.11,1,2.122,3,0.131,4,0.116,5,0.116,16,0.01,39,0.293,42,0.131,75,0.008,76,0.008,83,3.528,85,2.468,86,3.046,117,0.568,131,2.91,132,5.74,133,2.826,134,3.046,135,3.31,136,3.31,137,3.046,138,4.408,139,4.408,140,5.149,141,5.149,142,5.149,143,5.149,144,4.807,145,4.071,146,3.31,147,3.172,148,5.149,149,3.901,150,1.897,151,5.149]],["title/controllers/AppController.html",[152,2.237,153,3.186]],["body/controllers/AppController.html",[0,0.105,3,0.125,4,0.111,5,0.111,8,0.225,12,0.544,14,0.225,16,0.01,18,1.766,20,3.314,24,0.286,39,0.301,42,0.125,75,0.008,76,0.008,90,1.022,92,1.282,99,0.794,100,0.794,103,0.817,108,1.289,114,1.289,117,0.544,121,3.314,124,1.102,126,0.991,152,3.646,153,5.193,154,2.916,155,4.928,156,7.005,157,5.601,158,6.6,159,3.173,160,5.601,161,5.601,162,5.005,163,5.005,164,4.928,165,4.484,166,3.382,167,4.484,168,2.704,169,5.601,170,5.601,171,5.601,172,5.601,173,4.928,174,6.162,175,5.601,176,4.928,177,5.601,178,5.601,179,3.036,180,5.601]],["title/modules/AppModule.html",[131,1.604,181,3.186]],["body/modules/AppModule.html",[0,0.086,3,0.103,4,0.091,5,0.091,16,0.01,39,0.329,42,0.103,49,1.685,75,0.007,76,0.007,117,0.446,127,2.369,131,2.595,133,2.219,134,2.392,135,2.599,136,2.599,137,2.392,138,3.931,139,2.599,144,4.509,145,3.485,146,2.599,147,2.491,149,3.339,153,5.154,154,3.207,163,5.221,164,4.043,181,6.553,182,4.043,183,4.043,184,4.043,185,5.535,186,5.535,187,5.535,188,5.535,189,4.953,190,4.595,191,4.825,192,4.595,193,4.595,194,4.595,195,4.595,196,4.595,197,4.933,198,3.19,199,4.043,200,4.595,201,4.595,202,4.043,203,4.043,204,4.595,205,4.595,206,3.679,207,4.595,208,4.043,209,4.043,210,3.407,211,4.595,212,4.595,213,4.595,214,4.595,215,4.595,216,4.595,217,4.595,218,4.043,219,4.595,220,4.595,221,4.595,222,4.595,223,4.595,224,4.595,225,3.679,226,4.595,227,4.595]],["title/injectables/AppService.html",[82,0.023,163,2.814]],["body/injectables/AppService.html",[0,0.086,1,1.655,3,0.102,4,0.091,5,0.091,8,0.184,10,1.912,12,0.773,13,1.607,14,0.279,16,0.01,24,0.379,26,0.972,32,0.83,39,0.278,42,0.102,69,3.606,74,1.703,75,0.009,76,0.007,82,0.033,84,0.704,88,1.553,89,4.536,90,0.895,92,1.404,95,1.057,97,2.564,99,0.982,100,0.982,103,1.01,108,1.594,117,0.443,122,1.329,124,1.521,126,1.226,163,4.016,168,2.203,179,3.324,228,4.015,229,6.133,230,6.133,231,7.406,232,2.7,233,3.466,234,3.661,235,4.563,236,6.133,237,4.563,238,6.133,239,4.563,240,4.563,241,1.865,242,4.015,243,2.988,244,4.015,245,4.563,246,6.927,247,3.383,248,3.653,249,2.473,250,3.653,251,4.563,252,4.563,253,4.563,254,4.563,255,4.563,256,4.563,257,4.563,258,4.563]],["title/entities/Area.html",[46,1.652,259,1.703]],["body/entities/Area.html",[0,0.082,1,2.455,3,0.097,4,0.087,5,0.087,8,0.176,9,1.334,10,1.869,11,1.105,12,0.658,14,0.348,16,0.01,17,1.145,18,2.692,24,0.436,26,0.959,34,2.476,39,0.273,42,0.097,46,2.288,47,3.829,48,3.829,50,3.67,52,1.778,53,4.006,54,3.521,55,1.264,56,3.269,75,0.007,76,0.007,112,2.583,259,2.358,260,2.272,261,3.84,262,4.496,263,1.812,264,4.412,265,5.235,266,4.365,267,4.887,268,4.365,269,4.365,270,3.236,271,5.951,272,4.365,273,4.365,274,5.951,275,4.365,276,4.365,277,3.829,278,4.365,279,5.235,280,5.951,281,4.365,282,4.365,283,5.951,284,4.365,285,4.764,286,4.365,287,4.365,288,5.02,289,4.412,290,1.678,291,2.858,292,2.583,293,3.494]],["title/controllers/AreaController.html",[152,2.237,294,3.186]],["body/controllers/AreaController.html",[0,0.042,3,0.05,4,0.045,5,0.045,8,0.091,10,2.383,11,1.228,12,0.652,14,0.279,16,0.01,18,1.934,20,2.149,23,2.054,24,0.313,26,0.904,39,0.252,41,0.867,42,0.05,43,2.473,46,3.003,47,2.054,48,2.054,50,1.969,53,2.149,54,2.149,55,1.293,56,1.754,59,2.054,60,1.969,64,1.969,65,4.11,74,1.356,75,0.004,76,0.004,88,1.023,90,0.53,92,1.334,95,0.388,99,0.869,100,0.869,103,0.894,105,1.174,108,1.05,114,1.411,117,0.219,122,1.263,124,1.502,126,0.808,150,0.731,152,1.174,154,1.174,162,3.757,168,2.203,263,0.493,294,2.693,295,1.983,296,1.805,297,5.673,298,2.908,299,3.633,300,3.633,301,3.633,302,3.633,303,4.562,304,1.983,305,2.254,306,4.779,307,2.254,308,5.271,309,6.709,310,4.603,311,4.546,312,5.49,313,5.49,314,5.49,315,4.603,316,4.974,317,5.371,318,3.468,319,2.254,320,2.254,321,4.499,322,2.254,323,1.891,324,5.232,325,3.196,326,3.632,327,4.603,328,4.603,329,3.633,330,3.633,331,1.983,332,2.254,333,4.476,334,2.254,335,1.983,336,2.7,337,2.379,338,2.254,339,2.254,340,2.254,341,4.188,342,3.879,343,1.805,344,2.254,345,2.254,346,2.254,347,1.671,348,2.908,349,1.671,350,2.254,351,2.254,352,2.254,353,3.096,354,1.983,355,2.254,356,1.983,357,1.805,358,4.593,359,1.805,360,2.206,361,1.671,362,1.051,363,1.983,364,2.834,365,1.805,366,1.334,367,1.805,368,2.7,369,1.983,370,3.167,371,2.254,372,1.983,373,1.805,374,4.014,375,4.781,376,6.027,377,1.671,378,2.988,379,1.671,380,1.671,381,2.254,382,1.805,383,0.951,384,2.254,385,4.546,386,4.546,387,4.546,388,2.254,389,5.394,390,2.254,391,2.254,392,2.254,393,2.254,394,2.08,395,3.633,396,1.983,397,3.196,398,2.254,399,4.014,400,3.633,401,3.633,402,3.633,403,3.633,404,3.633,405,3.633,406,2.254,407,2.254,408,2.254,409,3.633,410,3.633,411,3.633,412,3.633,413,3.633,414,2.908,415,2.254,416,3.633,417,2.254,418,1.983,419,4.562,420,4.562,421,3.633,422,2.254,423,2.254,424,3.633,425,2.254,426,2.254,427,2.254,428,2.254,429,1.983,430,2.254,431,2.254,432,2.254,433,2.254,434,2.254,435,2.254,436,2.254,437,2.254,438,2.254]],["title/classes/AreaDto.html",[0,0.081,65,2.431]],["body/classes/AreaDto.html",[0,0.133,1,2.945,2,1.136,3,0.064,4,0.057,5,0.057,6,4.526,7,1.78,8,0.115,9,0.984,10,2.483,11,1.299,12,0.773,13,1.149,14,0.324,15,2.782,16,0.01,17,1.225,18,2.228,19,3.163,20,4.016,21,3.277,22,4.653,23,3.839,24,0.361,26,0.992,27,2.496,29,2.481,31,4.587,32,0.797,34,2.141,35,2.595,37,2.481,39,0.108,40,3.978,41,1.102,42,0.158,43,1.553,44,3.824,45,3.91,46,3.094,47,3.64,48,4.384,49,1.447,50,4.048,51,3.91,52,1.784,53,1.696,54,1.696,55,0.535,56,3.518,57,3.533,58,3.153,59,2.481,60,3.236,61,2.872,62,2.872,63,2.872,64,2.377,65,2.481,66,2.872,67,2.872,68,2.872,69,3.677,70,3.49,71,3.49,72,3.49,73,1.696,74,1.989,75,0.005,76,0.005,105,2.283,439,2.866,440,2.866,441,2.866,442,2.866,443,2.866,444,2.866,445,2.866,446,2.866]],["title/modules/AreaModule.html",[131,1.604,185,2.983]],["body/modules/AreaModule.html",[0,0.085,3,0.101,4,0.09,5,0.09,16,0.01,32,1.11,34,1.925,39,0.328,42,0.101,46,2.347,75,0.007,76,0.007,86,2.359,117,0.44,131,2.576,132,5.2,133,2.188,134,2.359,135,2.563,136,2.563,137,2.359,138,3.903,139,3.903,144,4.491,145,3.452,146,2.563,147,2.456,149,3.308,150,1.469,154,3.177,185,6.176,189,4.932,262,3.308,263,1.334,291,2.968,292,2.681,293,3.628,294,5.117,364,5.334,365,3.628,368,5.081,369,3.987,378,5.623,379,3.36,447,3.987,448,3.987,449,3.987,450,3.987,451,5.2,452,4.532,453,2.968,454,1.974,455,4.532,456,3.628,457,2.968,458,4.532,459,3.987,460,3.36,461,5.37,462,3.987,463,2.456,464,4.532]],["title/entities/AreaReaction.html",[259,1.703,262,2.329]],["body/entities/AreaReaction.html",[0,0.099,3,0.118,4,0.105,5,0.105,8,0.213,9,1.514,11,1.214,14,0.333,16,0.01,18,2.613,24,0.424,26,1.012,34,2.715,39,0.28,42,0.118,46,3.311,59,4.207,60,4.032,64,4.032,75,0.008,76,0.008,259,2.675,260,2.751,262,3.659,264,5.005,265,5.939,267,4.581,277,4.207,288,5.516,290,2.032,292,3.126,465,4.648,466,6.751,467,5.284,468,5.284,469,5.284,470,5.284,471,5.284,472,6.751,473,5.284,474,3.917]],["title/injectables/AreaReactionService.html",[82,0.023,368,2.543]],["body/injectables/AreaReactionService.html",[0,0.076,3,0.09,4,0.081,5,0.081,8,0.163,11,1.363,12,0.72,14,0.298,16,0.01,24,0.379,26,0.997,34,2.337,39,0.296,42,0.09,46,3.089,58,2.398,60,3.819,75,0.006,76,0.006,82,0.031,84,0.626,88,1.46,90,0.825,92,1.413,95,0.974,99,1.05,100,1.05,103,1.028,108,1.301,114,1.301,117,0.394,120,2.292,122,1.034,124,1.459,126,1.153,168,3.144,262,3.065,290,1.558,292,2.398,318,2.292,323,3.39,362,1.889,368,3.346,370,5.328,372,3.566,394,1.47,454,1.766,474,3.005,475,3.566,476,5.654,477,5.654,478,5.654,479,4.053,480,3.992,481,5.729,482,6.512,483,4.053,484,5.654,485,4.053,486,4.053,487,2.311,488,5.654,489,4.053,490,5.654,491,4.053,492,5.654,493,4.053,494,2.292,495,4.053,496,4.053,497,3.245,498,3.566,499,3.566,500,4.053,501,4.053,502,4.053,503,3.245,504,4.053,505,4.053,506,4.053,507,4.053,508,4.053,509,4.053,510,4.053,511,5.654,512,4.975,513,3.245,514,4.053]],["title/injectables/AreaRegistry.html",[82,0.023,378,2.814]],["body/injectables/AreaRegistry.html",[0,0.069,3,0.082,4,0.073,5,0.073,8,0.149,9,1.187,11,0.864,12,0.656,14,0.272,16,0.01,18,1.164,24,0.392,26,0.909,39,0.3,42,0.082,46,3.071,49,0.895,69,1.922,75,0.006,76,0.006,82,0.029,83,3.039,84,0.57,85,1.557,86,1.922,87,2.563,88,1.759,90,0.772,91,3.925,92,1.39,93,2.098,94,3.925,95,0.912,99,0.958,100,0.958,101,3.925,103,1.044,105,2.756,108,0.85,109,3.925,112,2.185,113,2.563,114,1.424,115,3.925,117,0.359,118,1.301,122,1.136,124,1.408,126,0.937,150,2.005,158,5.411,168,3.455,206,2.956,297,5.444,364,4.625,365,4.238,368,4.538,378,3.466,379,5.816,383,1.557,396,3.248,456,2.956,463,2.001,515,6.28,516,6.759,517,4.876,518,3.692,519,3.34,520,3.842,521,3.692,522,5.293,523,3.692,524,3.692,525,5.011,526,3.692,527,5.293,528,3.692,529,3.692,530,3.692,531,3.248,532,1.608,533,3.692,534,3.692,535,1.922,536,2.563,537,2.418,538,5.293,539,3.692,540,3.692,541,5.293,542,3.248,543,3.248,544,3.248,545,3.248,546,3.692,547,3.692,548,2.956,549,3.692,550,2.737,551,3.692,552,3.692,553,3.692,554,3.692,555,3.692,556,3.692,557,3.692,558,3.692,559,3.692,560,3.248,561,2.418,562,3.692,563,3.692,564,3.692,565,3.248,566,3.692,567,5.293,568,3.692,569,3.692,570,3.692,571,3.692]],["title/injectables/AreaService.html",[82,0.023,364,2.67]],["body/injectables/AreaService.html",[0,0.063,1,1.799,3,0.075,4,0.067,5,0.067,8,0.136,11,1.342,12,0.759,14,0.314,16,0.01,24,0.399,26,1.039,34,2.044,39,0.281,42,0.075,43,4.149,46,2.261,50,1.83,55,1.098,75,0.006,76,0.006,82,0.027,84,0.521,88,1.319,90,0.724,92,1.46,95,0.855,99,1.107,100,1.107,103,1.117,108,1.142,114,1.142,117,0.328,119,2.583,122,1.029,124,1.563,126,1.222,168,2.84,262,2.689,263,1.509,290,1.298,291,2.211,292,1.998,298,3.972,304,4.365,318,1.91,323,2.583,353,2.936,362,1.574,363,2.971,364,3.082,394,1.224,399,5.703,454,1.471,456,2.704,480,3.835,481,5.174,487,3.128,494,1.91,497,2.704,498,2.971,499,2.971,503,2.704,513,3.972,542,2.971,543,2.971,544,2.971,545,2.971,572,2.971,573,3.082,574,4.961,575,2.936,576,4.961,577,3.082,578,3.377,579,4.708,580,3.377,581,4.961,582,3.377,583,4.961,584,3.377,585,4.961,586,6.482,587,3.377,588,3.377,589,3.377,590,4.961,591,3.377,592,3.082,593,3.377,594,4.961,595,3.377,596,3.082,597,3.377,598,3.972,599,3.377,600,2.704,601,3.377,602,2.971,603,3.377,604,3.377,605,3.377,606,3.377,607,3.377,608,3.377,609,3.377,610,2.971,611,2.971,612,3.377,613,3.377,614,3.377,615,3.377,616,4.365,617,4.961,618,3.377,619,4.961,620,3.377,621,4.961,622,3.377,623,3.377,624,3.377]],["title/controllers/AuthController.html",[152,2.237,191,2.983]],["body/controllers/AuthController.html",[0,0.039,3,0.046,4,0.041,5,0.041,8,0.083,10,2.157,12,0.671,14,0.312,16,0.01,17,0.493,18,2.179,21,2.843,23,1.168,24,0.353,39,0.288,41,0.794,42,0.046,75,0.004,76,0.004,88,0.964,90,0.493,92,1.386,95,0.356,99,0.979,100,0.979,103,1.008,108,1.545,114,0.779,117,0.201,122,1.201,124,1.322,126,1.34,152,1.075,154,1.075,158,6.407,159,3.035,162,4.635,165,1.653,166,3.132,167,1.653,191,2.348,197,3.44,198,1.434,233,1.872,241,0.844,263,1.654,296,1.653,306,3.974,308,4.365,310,2.976,311,3.186,312,4.365,313,4.365,314,3.683,316,2.508,318,1.168,321,2.81,325,2.976,326,2.348,327,2.976,328,2.976,331,1.817,333,3.805,342,2.508,347,2.508,349,1.531,353,2.002,354,1.817,359,1.653,361,1.531,366,1.222,373,1.653,374,4.371,375,4.064,376,5.451,377,1.531,380,2.508,382,2.708,383,3.265,385,3.683,386,4.064,387,2.508,397,1.817,625,1.817,626,1.817,627,3.383,628,3.383,629,3.383,630,2.976,631,3.383,632,5.908,633,3.383,634,4.371,635,2.976,636,2.976,637,2.065,638,2.065,639,2.065,640,2.065,641,2.065,642,2.065,643,2.065,644,2.065,645,2.065,646,2.065,647,2.065,648,3.383,649,3.383,650,2.065,651,2.065,652,2.065,653,2.065,654,2.065,655,3.59,656,2.065,657,3.383,658,2.065,659,3.383,660,2.065,661,2.065,662,2.065,663,3.383,664,2.065,665,2.065,666,2.065,667,2.065,668,4.071,669,2.065,670,3.383,671,2.065,672,2.065,673,2.065,674,3.383,675,2.065,676,2.708,677,2.065,678,2.065,679,2.065,680,3.253,681,2.065,682,2.065,683,2.065,684,2.065,685,2.669,686,1.653,687,1.817,688,1.531,689,2.065,690,5.482,691,5.469,692,2.065,693,2.065,694,1.531,695,2.065,696,2.065,697,1.531,698,2.065,699,1.531,700,2.065,701,1.531,702,2.065,703,1.531,704,1.653,705,2.065,706,2.065,707,2.065,708,2.065,709,2.065,710,2.065,711,1.913,712,2.065,713,2.065,714,2.065,715,2.065,716,2.065,717,2.065,718,2.065,719,2.065,720,3.405,721,4.823,722,6.658,723,5.482,724,5.482,725,5.482,726,5.482,727,6.91,728,7.946,729,5.482,730,6.91,731,2.065,732,2.172,733,5.482,734,5.482,735,2.065,736,2.065,737,2.065,738,2.065,739,2.065,740,2.065,741,2.065,742,2.065,743,2.065,744,2.065,745,2.065,746,3.383,747,2.065,748,2.065,749,2.065,750,2.065,751,2.065,752,2.065,753,2.065,754,2.065,755,2.065,756,2.065,757,2.065,758,2.065]],["title/modules/AuthModule.html",[131,1.604,186,2.983]],["body/modules/AuthModule.html",[0,0.073,3,0.087,4,0.077,5,0.077,16,0.01,32,1,34,1.734,39,0.332,42,0.087,49,0.944,75,0.006,76,0.006,92,0.653,97,2.39,117,0.378,131,2.379,133,1.881,134,2.028,135,2.203,136,2.203,137,2.028,138,3.605,139,3.605,145,3.11,146,2.203,147,2.112,149,3.455,154,2.863,186,6.19,189,4.708,191,4.425,198,2.705,199,3.428,233,3.016,241,1.592,244,3.428,263,1.202,366,3.254,453,2.551,454,1.697,685,5.2,686,3.119,687,3.428,759,3.428,760,3.428,761,3.428,762,3.428,763,4.963,764,5.261,765,5.261,766,5.261,767,5.261,768,5.261,769,2.39,770,5.261,771,5.261,772,3.896,773,3.896,774,3.896,775,3.896,776,4.838,777,5.5,778,3.119,779,5.5,780,1.697,781,3.896,782,3.896,783,3.896,784,3.896,785,3.428,786,2.112,787,3.428,788,3.428,789,3.119,790,3.896,791,3.428,792,3.896,793,3.896,794,3.896,795,3.896,796,3.428,797,3.896,798,3.428,799,3.896,800,3.896,801,3.896,802,3.896,803,3.428,804,3.896,805,3.896]],["title/injectables/AuthService.html",[82,0.023,685,2.67]],["body/injectables/AuthService.html",[0,0.05,3,0.06,4,0.053,5,0.053,8,0.108,11,0.68,12,0.727,13,0.702,14,0.307,16,0.01,17,1.068,24,0.383,32,0.487,39,0.268,42,0.06,49,0.65,52,0.801,55,0.778,75,0.005,76,0.005,82,0.023,84,0.414,88,1.292,90,0.608,92,1.401,95,0.718,99,1.061,100,1.061,103,1.068,108,1.436,114,1.641,117,0.26,122,1.294,124,1.616,126,1.349,127,1.031,173,2.358,197,5.521,198,1.861,234,3.105,242,2.358,243,1.755,263,1.806,285,2.146,318,3.259,356,2.358,383,1.13,394,2.585,487,1.702,561,1.755,626,3.665,630,3.665,632,4.496,634,3.665,635,3.665,636,3.665,676,3.335,680,3.774,685,2.588,703,1.987,704,2.146,711,4.311,722,5.07,732,1.651,769,2.175,785,2.358,789,2.146,806,2.358,807,4.166,808,4.166,809,4.166,810,4.166,811,2.68,812,3,813,2.68,814,4.166,815,4.166,816,2.68,817,4.166,818,2.68,819,4.166,820,2.68,821,4.166,822,2.68,823,4.166,824,2.68,825,4.166,826,2.68,827,4.166,828,2.68,829,4.166,830,4.166,831,2.68,832,4.166,833,2.68,834,1.865,835,2.358,836,3.665,837,2.68,838,5.11,839,4.166,840,2.68,841,2.68,842,2.68,843,2.358,844,3.089,845,2.68,846,2.68,847,2.68,848,4.166,849,6.242,850,5.763,851,2.68,852,2.68,853,2.68,854,2.68,855,2.68,856,2.68,857,6.608,858,2.68,859,2.68,860,2.68,861,5.11,862,3.665,863,2.465,864,2.68,865,5.763,866,4.166,867,2.258,868,3.665,869,2.258,870,3.665,871,3.335,872,2.68,873,2.68,874,2.68,875,2.68,876,2.68,877,2.68,878,2.68,879,4.166,880,4.166,881,2.68,882,2.68,883,2.68,884,4.166,885,2.68,886,2.68,887,4.166,888,1.987,889,4.166,890,4.166,891,1.987,892,1.987,893,4.166,894,1.987,895,4.166,896,1.207,897,2.68,898,2.68,899,2.68,900,2.68,901,4.166,902,2.68,903,2.68,904,4.166,905,5.11,906,4.166,907,2.68,908,2.68,909,2.68,910,2.68,911,2.68]],["title/injectables/BaseAction.html",[82,0.023,104,2.075]],["body/injectables/BaseAction.html",[0,0.081,3,0.096,4,0.086,5,0.086,8,0.174,10,1.859,12,0.76,13,1.765,14,0.323,15,3.139,16,0.01,17,1.243,24,0.41,26,1.011,34,1.363,39,0.253,42,0.096,52,2.164,55,1.104,75,0.007,76,0.007,82,0.032,84,0.667,85,3.442,90,0.862,92,1.129,93,2.87,95,1.018,97,2.391,99,1.136,100,1.026,103,1.142,104,2.854,108,0.994,114,0.994,117,0.42,120,2.444,122,0.938,124,1.163,126,1.192,362,2.014,565,5.926,912,5.665,913,3.802,914,6.868,915,3.343,916,3.203,917,3.154,918,2.143,919,3.925,920,3.204,921,4.322,922,3.343,923,4.322,924,3.343,925,4.322,926,4.322,927,2.575,928,4.322,929,4.322,930,4.322,931,3.871,932,3.46,933,4.633,934,5.926,935,3.802,936,3.46,937,2.25,938,3.46,939,3.46,940,3.46,941,3.802,942,3.802,943,1.613,944,3.46,945,2.83,946,3.802,947,4.322]],["title/injectables/BaseArea.html",[82,0.023,525,3.186]],["body/injectables/BaseArea.html",[0,0.07,1,2.465,3,0.083,4,0.074,5,0.074,8,0.15,9,1.198,10,1.72,12,0.726,14,0.251,16,0.01,17,1.123,24,0.41,26,0.978,32,1.133,39,0.27,42,0.083,47,3.524,48,3.524,50,3.378,52,2.032,55,1.164,74,1.396,75,0.006,76,0.006,82,0.029,83,3.05,84,0.577,85,1.577,86,1.947,88,1.797,90,0.779,92,1.393,95,0.92,99,0.757,100,0.757,103,1.123,108,0.861,111,1.873,117,0.363,122,1.29,124,1.472,126,1.103,150,2.02,166,3.009,168,3.282,247,2.773,262,2.027,298,5.443,368,4.555,383,1.577,414,2.994,463,2.027,515,6.507,519,3.353,520,3.856,525,3.961,531,3.29,532,1.629,535,1.947,536,2.596,560,3.29,561,2.449,912,5.642,916,3.685,919,3.685,920,2.773,948,3.29,949,6.799,950,5.342,951,6.799,952,4.223,953,3.74,954,3.74,955,3.74,956,3.74,957,5.342,958,7.191,959,3.74,960,3.74,961,3.74,962,3.74,963,3.74,964,6.799,965,3.74,966,6.232,967,3.74,968,3.74,969,5.342,970,3.74,971,3.74,972,5.342,973,3.74,974,3.74,975,3.74,976,5.342,977,3.74,978,3.74]],["title/injectables/BaseReaction.html",[82,0.023,979,2.237]],["body/injectables/BaseReaction.html",[0,0.087,3,0.104,4,0.093,5,0.093,8,0.188,10,1.932,12,0.756,13,1.834,14,0.322,15,3.262,16,0.01,17,1.258,24,0.398,26,0.978,34,1.47,39,0.263,42,0.104,55,0.87,75,0.007,76,0.007,82,0.034,84,0.719,90,0.907,92,1.174,93,2.96,95,1.072,97,2.454,99,1.135,100,0.992,103,1.09,108,1.073,114,1.073,117,0.453,120,2.636,122,0.987,124,1.224,126,1.101,362,2.172,532,3.487,912,5.557,914,6.799,917,3.254,918,2.255,920,3.456,927,2.709,931,4.073,932,3.732,933,4.605,934,6.159,935,4.101,936,3.732,937,2.426,938,3.732,939,3.732,940,3.732,941,4.101,942,4.101,943,1.74,944,3.732,945,3.052,946,4.101,979,3.238,980,4.101,981,3.864,982,4.661,983,3.864,984,4.661,985,4.661,986,4.661,987,4.661]],["title/injectables/BaseService.html",[82,0.023,988,2.431]],["body/injectables/BaseService.html",[0,0.078,3,0.093,4,0.083,5,0.083,8,0.168,9,1.292,10,2.066,12,0.771,13,1.73,14,0.325,16,0.01,17,1.235,24,0.414,26,0.914,32,1.047,39,0.281,42,0.093,52,2.13,55,0.777,69,3.438,75,0.006,76,0.006,82,0.031,84,0.643,89,4.326,90,0.84,92,1.108,95,0.992,99,0.936,100,0.936,103,0.84,104,3.442,108,0.958,114,0.958,117,0.404,119,2.167,122,1.048,124,1.134,126,1.02,166,4.089,179,2.256,234,3.21,243,2.726,247,3.087,248,3.333,249,4.056,250,3.333,362,1.94,460,3.087,532,1.813,535,4.274,912,5.829,914,5.706,918,2.089,920,3.087,933,4.695,937,2.167,939,3.333,943,2.15,952,3.578,979,3.711,988,3.258,989,3.087,990,4.232,991,5.068,992,3.772,993,4.163,994,3.772,995,4.163,996,4.163,997,3.663,998,4.163,999,4.163,1000,3.578,1001,3.333,1002,2.463,1003,6.605,1004,4.163,1005,3.663,1006,4.163,1007,3.663,1008,2.89,1009,4.163,1010,5.761,1011,4.163,1012,4.163,1013,4.163]],["title/modules/ConfigsModule.html",[131,1.604,187,2.983]],["body/modules/ConfigsModule.html",[0,0.114,3,0.136,4,0.121,5,0.121,16,0.01,39,0.332,42,0.136,49,1.474,75,0.008,76,0.008,117,0.591,131,2.751,133,2.937,149,3.297,187,5.116,241,2.486,776,5.352,1014,6.084,1015,7.37,1016,6.084,1017,7.37,1018,6.084,1019,7.37,1020,6.084,1021,7.929,1022,7.37,1023,6.084,1024,7.37,1025,6.084,1026,7.37,1027,6.084,1028,6.084,1029,6.084,1030,6.084]],["title/injectables/ConfigsService.html",[82,0.023,1031,3.441]],["body/injectables/ConfigsService.html",[0,0.116,3,0.138,4,0.123,5,0.123,8,0.249,12,0.602,14,0.249,16,0.01,17,0.904,24,0.381,39,0.28,42,0.138,75,0.008,76,0.008,82,0.04,84,0.957,95,1.068,99,0.879,100,0.879,117,0.602,121,3.668,126,1.097,232,3.668,233,3.754,241,2.534,1031,5.968,1032,5.454,1033,7.455,1034,7.033,1035,6.2,1036,6.2,1037,6.2,1038,6.2]],["title/classes/CreateAreaDto.html",[0,0.081,43,2.329]],["body/classes/CreateAreaDto.html",[0,0.133,1,2.973,2,1.144,3,0.064,4,0.057,5,0.057,6,4.65,7,1.794,8,0.116,9,0.989,10,2.481,11,1.301,12,0.775,13,1.156,14,0.327,15,2.794,16,0.01,17,1.226,18,2.036,19,3.009,20,4.029,21,3.287,22,4.662,23,3.85,24,0.373,26,1.001,27,2.564,29,2.495,31,4.52,32,0.802,34,2.234,35,2.611,37,2.495,39,0.109,40,3.981,41,1.11,42,0.158,43,2.391,44,3.827,45,3.926,46,3.099,47,3.652,48,4.393,49,1.453,50,4.057,51,3.926,52,1.791,53,3.168,54,2.611,55,1,56,3.42,57,3.168,58,3.168,59,2.495,60,3.249,61,2.889,62,2.889,63,2.889,64,2.391,65,1.633,66,1.891,67,1.891,68,1.891,69,3.121,70,2.889,71,2.889,72,2.889,73,1.709,74,1.999,75,0.005,76,0.005,105,1.503,1039,2.888,1040,2.888,1041,2.888,1042,2.888,1043,2.888,1044,2.888,1045,2.888,1046,2.888]],["title/classes/CreateAreaReactionDto.html",[0,0.081,370,2.983]],["body/classes/CreateAreaReactionDto.html",[0,0.116,2,2.451,3,0.138,4,0.123,5,0.123,8,0.249,9,1.669,14,0.333,16,0.01,24,0.424,26,1.052,42,0.138,59,4.516,60,4.328,64,4.328,75,0.008,76,0.008,370,5.167,414,6.393,1047,7.46,1048,5.441,1049,6.185,1050,6.185,1051,6.185,1052,6.185]],["title/classes/CreateDictDataGithubDto.html",[0,0.081,1053,3.186]],["body/classes/CreateDictDataGithubDto.html",[0,0.118,2,2.498,3,0.141,4,0.125,5,0.125,8,0.254,9,1.688,14,0.324,16,0.01,17,1.217,24,0.412,26,0.919,42,0.141,55,1.503,75,0.008,76,0.008,1053,5.583,1054,7.338,1055,5.546,1056,3.396,1057,5.589,1058,6.304,1059,6.304,1060,6.304]],["title/classes/CreateDictEmailsGmailDto.html",[0,0.081,1061,3.186]],["body/classes/CreateDictEmailsGmailDto.html",[0,0.118,2,2.498,3,0.141,4,0.125,5,0.125,8,0.254,9,1.688,14,0.324,16,0.01,17,1.217,24,0.412,26,0.919,42,0.141,55,1.503,75,0.008,76,0.008,1056,3.396,1061,5.583,1062,7.338,1063,5.546,1064,3.507,1065,6.304,1066,6.304,1067,6.304]],["title/classes/CreateDictEmailsOutlookDto.html",[0,0.081,1068,3.186]],["body/classes/CreateDictEmailsOutlookDto.html",[0,0.118,2,2.498,3,0.141,4,0.125,5,0.125,8,0.254,9,1.688,14,0.324,16,0.01,17,1.217,24,0.412,26,0.919,42,0.141,55,1.503,75,0.008,76,0.008,1056,3.396,1064,3.507,1068,5.583,1069,7.338,1070,5.546,1071,6.304,1072,6.304,1073,6.304]],["title/classes/CreateElementDto.html",[0,0.081,931,2.814]],["body/classes/CreateElementDto.html",[0,0.09,2,1.891,3,0.107,4,0.095,5,0.095,8,0.192,9,1.417,10,2.442,11,1.23,12,0.762,13,1.856,14,0.346,15,3.655,16,0.01,17,1.217,18,2.541,19,3.756,24,0.412,26,0.921,27,2.583,31,3.739,32,1.149,34,2.69,35,3.739,39,0.179,40,3.702,41,1.835,42,0.107,44,3.51,64,3.839,74,2.358,75,0.007,76,0.007,834,2.253,931,4.137,1074,7.232,1075,4.198,1076,4.683,1077,3.165,1078,4.772,1079,4.772,1080,4.772,1081,4.772,1082,4.772,1083,5.558,1084,5.558,1085,5.058,1086,4.772]],["title/classes/CreateServiceDto.html",[0,0.081,1000,2.67]],["body/classes/CreateServiceDto.html",[0,0.121,2,1.955,3,0.11,4,0.098,5,0.098,8,0.199,9,1.448,10,2.443,12,0.77,14,0.319,16,0.01,17,1.226,18,2.5,19,3.695,24,0.405,32,1.389,39,0.186,40,3.732,41,1.897,42,0.144,44,3.543,49,1.196,52,2.152,75,0.007,76,0.007,249,3.902,306,3.822,990,4.072,1000,4.012,1008,4.998,1077,3.235,1087,6.512,1088,3.95,1089,5.171,1090,5.171,1091,4.934,1092,6.73,1093,4.934,1094,6.115,1095,6.115,1096,6.115,1097,4.934,1098,4.23,1099,4.934,1100,4.934,1101,4.341,1102,4.341]],["title/classes/CreateServiceTokenDto.html",[0,0.081,1103,3.186]],["body/classes/CreateServiceTokenDto.html",[0,0.11,2,2.329,3,0.131,4,0.117,5,0.117,8,0.237,9,1.618,13,2.046,14,0.342,16,0.01,17,1.188,24,0.435,26,1.063,42,0.131,55,1.458,75,0.008,76,0.008,888,5.791,891,5.791,892,5.791,894,5.791,1103,5.351,1104,7.584,1105,5.172,1106,5.879,1107,5.879,1108,5.879,1109,5.879,1110,5.879,1111,5.879]],["title/classes/CreateUserDto.html",[0,0.081,680,2.814]],["body/classes/CreateUserDto.html",[0,0.113,2,2.383,3,0.134,4,0.119,5,0.119,8,0.242,9,1.641,14,0.339,16,0.01,17,1.275,24,0.43,42,0.134,52,2.187,75,0.008,76,0.008,680,4.793,703,6.344,711,4.462,834,2.358,867,4.276,869,4.276,871,6.316,1112,5.291,1113,6.014,1114,6.014,1115,6.014,1116,6.014,1117,6.014]],["title/entities/DictDataGithub.html",[259,1.703,1118,2.814]],["body/entities/DictDataGithub.html",[0,0.111,3,0.132,4,0.117,5,0.117,8,0.237,9,1.621,11,1.276,14,0.328,16,0.01,17,1.189,18,2.571,24,0.417,26,0.995,39,0.222,42,0.132,55,1.46,75,0.008,76,0.008,259,2.864,260,3.067,267,4.877,277,4.422,290,2.265,1056,3.297,1057,5.427,1118,4.733,1119,5.183,1120,5.892,1121,5.892,1122,5.892,1123,5.892]],["title/injectables/DictDataGithubService.html",[82,0.023,1124,2.543]],["body/injectables/DictDataGithubService.html",[0,0.075,3,0.089,4,0.08,5,0.08,8,0.161,11,1.143,12,0.762,14,0.316,16,0.01,17,1.187,24,0.41,26,1.027,39,0.277,42,0.089,55,1.52,75,0.006,76,0.006,82,0.03,84,0.618,88,0.898,90,0.818,92,1.474,95,0.966,99,1.113,100,1.113,103,1.145,114,0.921,117,0.389,122,0.635,124,1.505,126,1.306,290,1.539,323,3.367,353,3.317,362,1.866,454,1.744,480,3.384,487,3.487,494,2.264,573,4.353,575,3.317,577,3.482,592,3.482,596,3.482,1053,5.196,1056,3.111,1057,4.865,1118,3.671,1124,3.317,1125,3.522,1126,4.488,1127,5.179,1128,4.004,1129,4.004,1130,5.606,1131,4.004,1132,4.004,1133,5.606,1134,4.004,1135,4.488,1136,4.004,1137,3.205,1138,4.004,1139,4.004,1140,4.004,1141,4.488,1142,4.004,1143,4.004,1144,4.004,1145,4.004,1146,4.004,1147,4.004,1148,4.004,1149,4.004,1150,4.004,1151,4.004,1152,4.004,1153,4.004,1154,4.004,1155,6.469,1156,4.004,1157,4.004]],["title/entities/DictEmailsGmail.html",[259,1.703,1158,2.814]],["body/entities/DictEmailsGmail.html",[0,0.111,3,0.132,4,0.117,5,0.117,8,0.237,9,1.621,11,1.276,14,0.328,16,0.01,17,1.189,18,2.571,24,0.417,26,0.995,39,0.222,42,0.132,55,1.46,75,0.008,76,0.008,259,2.864,260,3.067,267,4.877,277,4.422,290,2.265,1056,3.297,1064,3.406,1158,4.733,1159,5.183,1160,5.892,1161,5.892,1162,5.892,1163,5.892]],["title/injectables/DictEmailsGmailService.html",[82,0.023,1164,2.431]],["body/injectables/DictEmailsGmailService.html",[0,0.075,3,0.089,4,0.08,5,0.08,8,0.161,11,1.143,12,0.762,14,0.316,16,0.01,17,1.187,24,0.41,26,1.027,39,0.277,42,0.089,55,1.52,75,0.006,76,0.006,82,0.03,84,0.618,88,0.898,90,0.818,92,1.474,95,0.966,99,1.113,100,1.113,103,1.145,114,0.921,117,0.389,122,0.635,124,1.505,126,1.306,290,1.539,323,3.367,353,3.317,362,1.866,454,1.744,480,3.384,487,3.487,494,2.264,573,4.353,575,3.317,577,3.482,592,3.482,596,3.482,1056,3.111,1061,5.669,1064,3.053,1126,4.488,1127,5.179,1135,4.488,1137,3.205,1141,4.488,1158,4.236,1164,3.17,1165,3.522,1166,4.004,1167,4.004,1168,5.606,1169,4.004,1170,4.004,1171,4.004,1172,4.004,1173,4.004,1174,4.004,1175,4.004,1176,4.004,1177,4.004,1178,4.004,1179,4.004,1180,4.004,1181,4.004,1182,4.004,1183,4.004,1184,4.004,1185,4.004,1186,4.004,1187,4.004,1188,6.469,1189,4.004,1190,4.004]],["title/entities/DictEmailsOutlook.html",[259,1.703,1191,2.814]],["body/entities/DictEmailsOutlook.html",[0,0.111,3,0.132,4,0.117,5,0.117,8,0.237,9,1.621,11,1.276,14,0.328,16,0.01,17,1.189,18,2.571,24,0.417,26,0.995,39,0.222,42,0.132,55,1.46,75,0.008,76,0.008,259,2.864,260,3.067,267,4.877,277,4.422,290,2.265,1056,3.297,1064,3.406,1191,4.733,1192,5.183,1193,5.892,1194,5.892,1195,5.892,1196,5.892]],["title/injectables/DictEmailsOutlookService.html",[82,0.023,1197,2.431]],["body/injectables/DictEmailsOutlookService.html",[0,0.075,3,0.089,4,0.08,5,0.08,8,0.161,11,1.143,12,0.762,14,0.316,16,0.01,17,1.187,24,0.41,26,1.027,39,0.277,42,0.089,55,1.52,75,0.006,76,0.006,82,0.03,84,0.618,88,0.898,90,0.818,92,1.474,95,0.966,99,1.113,100,1.113,103,1.145,114,0.921,117,0.389,122,0.635,124,1.505,126,1.306,290,1.539,323,3.367,353,3.317,362,1.866,454,1.744,480,3.384,487,3.487,494,2.264,573,4.353,575,3.317,577,3.482,592,3.482,596,3.482,1056,3.111,1064,3.053,1068,5.669,1126,4.488,1127,5.179,1135,4.488,1137,3.205,1141,4.488,1191,4.236,1197,3.17,1198,3.522,1199,4.004,1200,4.004,1201,5.606,1202,4.004,1203,4.004,1204,4.004,1205,4.004,1206,4.004,1207,4.004,1208,4.004,1209,4.004,1210,4.004,1211,4.004,1212,4.004,1213,4.004,1214,4.004,1215,4.004,1216,4.004,1217,4.004,1218,4.004,1219,4.004,1220,4.004,1221,6.469,1222,4.004,1223,4.004]],["title/entities/Element.html",[34,1.355,259,1.703]],["body/entities/Element.html",[0,0.077,3,0.091,4,0.081,5,0.081,8,0.165,9,1.276,10,2.399,11,1.288,12,0.722,13,1.715,14,0.344,15,3.465,16,0.01,17,1.175,18,2.579,19,3.588,24,0.418,26,0.864,27,2.423,31,3.368,32,1.506,34,2.54,35,2.421,39,0.28,40,3.556,41,1.573,42,0.091,44,3.353,46,3.145,49,1.379,58,3.873,74,2.125,75,0.006,76,0.006,259,2.255,260,2.13,262,4.172,264,3.033,267,4.354,270,4.22,277,3.219,288,4.22,289,4.852,290,1.573,293,3.275,457,2.679,474,3.033,611,5.007,616,5.007,834,2.114,1076,4.395,1077,2.851,1083,5.007,1084,5.007,1085,4.556,1224,3.599,1225,4.091,1226,4.091,1227,5.691,1228,4.091,1229,4.091,1230,4.091,1231,4.091,1232,4.091,1233,4.556,1234,4.091,1235,3.275,1236,4.091,1237,4.091,1238,4.091,1239,4.091,1240,3.275]],["title/controllers/ElementController.html",[152,2.237,1241,3.186]],["body/controllers/ElementController.html",[0,0.063,3,0.075,4,0.067,5,0.067,8,0.135,10,2.348,11,0.807,12,0.57,14,0.3,16,0.01,18,2.274,24,0.369,26,0.717,34,2.461,39,0.271,41,1.293,42,0.075,69,3.88,75,0.006,76,0.006,89,4.881,90,0.722,92,1.426,97,1.85,99,0.832,100,0.832,103,1.052,105,3.589,108,1.587,117,0.327,120,1.902,121,1.99,124,1.419,126,1.276,152,2.575,154,1.751,162,2.203,166,3.329,168,1.624,263,1.081,306,4.618,308,6.035,311,4.351,312,4.797,313,4.797,314,4.797,316,3.668,317,3.961,318,1.902,321,3.659,341,3.961,342,6.035,343,2.693,347,3.668,348,6.353,349,3.668,357,2.693,358,3.961,361,2.494,366,1.99,367,2.693,375,5.526,376,6.237,377,2.494,380,2.494,385,5.345,386,5.345,387,3.668,487,2.022,575,2.927,592,2.09,1241,3.668,1242,2.959,1243,6.47,1244,6.47,1245,6.47,1246,4.947,1247,4.947,1248,3.364,1249,3.364,1250,4.947,1251,3.364,1252,3.364,1253,3.364,1254,4.698,1255,5.162,1256,3.364,1257,3.364,1258,3.364,1259,3.364,1260,3.364,1261,3.364,1262,3.364,1263,3.364,1264,3.364,1265,5.692,1266,3.364,1267,3.364,1268,3.364,1269,3.364,1270,2.693,1271,2.959,1272,3.364,1273,3.364,1274,3.364,1275,3.364,1276,3.364,1277,3.364,1278,3.364,1279,3.364,1280,3.364,1281,3.364,1282,3.364,1283,3.364,1284,3.364,1285,3.364,1286,3.364,1287,3.364]],["title/modules/ElementModule.html",[131,1.604,144,2.431]],["body/modules/ElementModule.html",[0,0.107,3,0.128,4,0.114,5,0.114,16,0.01,32,1.291,34,1.805,39,0.318,42,0.128,75,0.008,76,0.008,97,2.8,117,0.556,120,3.237,131,2.881,133,2.764,134,2.98,135,3.237,136,3.237,137,2.98,138,4.365,139,4.365,144,4.848,145,4.015,146,3.237,147,3.102,149,3.102,154,3.696,453,3.748,454,2.493,457,3.748,1241,5.722,1270,4.582,1288,5.036,1289,5.724,1290,5.036,1291,5.724,1292,5.724,1293,5.724,1294,5.724]],["title/injectables/ElementService.html",[82,0.023,97,1.355]],["body/injectables/ElementService.html",[0,0.057,1,2.002,3,0.068,4,0.06,5,0.06,8,0.122,11,1.283,12,0.803,14,0.327,16,0.01,17,1.108,24,0.412,26,1.002,32,1.407,34,1.741,39,0.261,42,0.068,55,1.296,74,2.061,75,0.005,76,0.005,82,0.025,84,0.469,88,1.028,90,0.668,92,1.482,95,0.79,97,1.445,99,1.097,100,1.097,103,1.162,108,1.415,114,1.27,117,0.295,120,1.717,122,1.048,124,1.568,126,1.391,168,2.213,290,1.167,318,2.592,323,2.386,362,1.415,394,1.662,454,1.322,457,1.988,480,3.479,487,3.38,494,1.717,497,2.43,573,3.82,575,2.712,577,2.847,592,2.847,596,2.847,786,2.484,931,4.323,932,2.43,936,2.43,938,2.43,940,2.43,944,2.43,1233,2.43,1270,2.43,1295,2.67,1296,6.15,1297,4.583,1298,4.032,1299,6.15,1300,4.583,1301,4.583,1302,4.583,1303,4.583,1304,3.035,1305,5.521,1306,3.035,1307,4.583,1308,4.583,1309,3.035,1310,3.035,1311,4.583,1312,3.035,1313,3.035,1314,4.032,1315,3.035,1316,3.035,1317,3.035,1318,4.583,1319,3.035,1320,4.583,1321,3.035,1322,4.583,1323,3.035,1324,4.583,1325,3.035,1326,3.035,1327,2.43,1328,4.583,1329,3.035,1330,4.583,1331,3.035,1332,3.035,1333,3.035,1334,3.035,1335,3.035,1336,3.035,1337,4.583,1338,3.035,1339,6.15,1340,6.941,1341,4.583,1342,4.583,1343,4.583,1344,4.583,1345,4.583,1346,4.583,1347,4.583]],["title/injectables/GithubActionIssueAssigned.html",[82,0.023,1348,3.186]],["body/injectables/GithubActionIssueAssigned.html",[0,0.066,1,1.861,3,0.079,4,0.07,5,0.07,8,0.142,11,0.837,12,0.644,13,1.582,14,0.283,16,0.01,17,0.516,24,0.387,26,0.965,27,1.212,32,0.643,39,0.285,42,0.079,49,0.857,52,1.057,55,1.448,75,0.006,76,0.006,82,0.028,83,3,84,0.546,85,2.164,88,1.486,90,0.749,92,1.3,93,2.626,95,0.884,97,1.905,99,1.073,100,0.939,103,1.07,104,3.816,108,1.181,111,1.772,114,1.181,117,0.344,118,1.246,119,1.841,122,1.201,124,1.49,126,1.245,127,1.973,150,1.146,159,1.402,263,0.773,326,2.455,360,2.164,383,1.492,394,1.283,512,3.112,732,2.034,769,2.387,896,1.593,915,2.902,916,2.781,917,2.886,918,1.861,919,3.273,922,2.902,924,2.902,927,1.541,937,3.144,943,1.916,1056,2.164,1057,3.563,1124,4.48,1348,3.805,1349,3.563,1350,5.632,1351,3.112,1352,1.38,1353,1.648,1354,3,1355,3.537,1356,2.908,1357,2.622,1358,2.093,1359,2.093,1360,2.093,1361,2.093,1362,2.093,1363,1.32,1364,2.097,1365,1.402,1366,1.492,1367,2.622,1368,1.115,1369,3.563,1370,5.314,1371,3.537,1372,2.093,1373,2.097,1374,1.648,1375,1.648,1376,1.445,1377,3.112,1378,2.832,1379,3.112,1380,2.832,1381,3.112,1382,3.112,1383,3.112,1384,2.478,1385,3.112,1386,3.112,1387,3.112,1388,1.917,1389,5.132,1390,3.112,1391,6.04,1392,3.112,1393,3.537,1394,1.593,1395,7.036,1396,3.537,1397,3.537,1398,3.112,1399,3.537,1400,4.515]],["title/injectables/GithubAuthGuard.html",[82,0.023,699,3.186]],["body/injectables/GithubAuthGuard.html",[0,0.113,3,0.135,4,0.12,5,0.12,8,0.243,12,0.587,14,0.243,16,0.01,24,0.309,39,0.276,42,0.135,75,0.008,76,0.008,82,0.04,84,0.933,90,1.071,99,0.856,100,0.856,103,0.881,117,0.587,122,0.959,126,1.069,321,3.417,699,5.441,780,2.632,1352,1.974,1401,6.457,1402,3.753,1403,7.339,1404,5.095,1405,5.095,1406,5.384,1407,4.194,1408,3.956,1409,5.095,1410,3.753,1411,4.194,1412,4.194]],["title/injectables/GithubRepositoryStarred.html",[82,0.023,1413,3.186]],["body/injectables/GithubRepositoryStarred.html",[0,0.066,1,1.859,3,0.079,4,0.07,5,0.07,8,0.142,11,0.836,12,0.643,13,1.581,14,0.283,16,0.01,17,0.515,24,0.387,26,0.965,27,1.21,32,0.642,39,0.284,42,0.079,49,0.856,52,1.056,55,1.447,75,0.006,76,0.006,82,0.028,83,2.999,84,0.545,85,2.162,88,1.485,90,0.748,92,1.3,93,2.624,95,0.883,97,1.903,99,1.073,100,0.939,103,1.07,104,3.815,108,1.18,111,1.769,114,1.18,117,0.343,118,1.245,119,1.839,122,1.201,124,1.489,126,1.245,127,1.971,150,1.145,159,1.4,263,0.772,326,2.452,360,2.162,383,1.49,394,1.281,480,3.395,732,2.032,769,2.386,896,1.591,915,2.9,916,2.779,917,2.884,918,1.859,919,3.271,922,2.9,924,2.9,927,1.539,937,3.142,943,1.914,1056,2.162,1057,3.559,1124,4.478,1349,3.559,1352,1.379,1353,1.646,1354,2.999,1356,2.906,1357,2.619,1358,2.09,1359,2.09,1360,2.09,1361,2.09,1362,2.09,1363,1.319,1364,2.095,1365,1.4,1366,1.49,1367,2.619,1368,1.114,1369,3.559,1372,2.09,1373,2.095,1374,1.646,1375,1.646,1376,1.444,1377,3.108,1378,2.828,1379,3.108,1380,2.828,1381,3.108,1382,3.108,1383,3.108,1384,2.475,1385,3.108,1386,3.108,1387,3.108,1388,1.914,1390,3.108,1392,3.108,1394,1.591,1398,3.108,1400,4.511,1413,3.801,1414,3.108,1415,3.532,1416,5.31,1417,3.532,1418,2.313,1419,5.127,1420,6.035,1421,3.532,1422,7.032,1423,3.532,1424,3.532,1425,3.532,1426,1.998]],["title/injectables/GithubService.html",[82,0.023,1427,2.983]],["body/injectables/GithubService.html",[0,0.068,3,0.081,4,0.072,5,0.072,8,0.146,9,1.17,10,1.441,12,0.69,13,1.367,14,0.32,15,1.687,16,0.01,17,0.893,24,0.406,26,0.818,29,2.048,32,0.658,39,0.307,42,0.081,49,0.877,52,1.082,55,1.251,56,1.748,75,0.006,76,0.006,82,0.028,83,3.021,84,0.559,86,1.885,88,1.659,90,0.761,92,1.309,95,0.899,99,0.867,100,0.867,103,0.893,108,0.833,114,1.408,117,0.352,118,1.276,122,1.174,124,1.501,150,1.691,159,1.435,166,3.768,179,1.962,233,3.321,234,2.35,241,1.48,249,2.829,460,4.538,480,1.748,517,4.844,520,3.819,535,3.186,537,2.371,550,3.87,561,2.371,769,2.333,918,1.892,933,3.088,943,2.651,952,3.242,988,4.564,989,2.684,990,2.952,992,2.371,994,3.418,997,3.185,1124,4.511,1348,3.87,1349,4.929,1350,2.898,1352,1.403,1354,3.021,1356,3.021,1363,1.351,1364,2.133,1365,1.435,1366,1.527,1367,2.684,1368,1.142,1369,3.623,1370,3.185,1373,1.48,1376,1.48,1384,1.748,1413,3.87,1416,3.185,1427,3.623,1428,2.684,1429,3.62,1430,3.62,1431,2.513,1432,2.513,1433,2.513,1434,2.513,1435,2.513,1436,2.513,1437,2.249,1438,3.185,1439,1.962,1440,2.513,1441,3.62,1442,3.62,1443,2.513,1444,4.178,1445,4.178,1446,5.219,1447,2.898,1448,2.898,1449,2.898,1450,2.898,1451,2.898,1452,2.684,1453,2.684,1454,3.62,1455,2.684,1456,2.684,1457,2.684,1458,2.684,1459,2.684,1460,3.62,1461,2.684,1462,3.62,1463,3.62,1464,3.62]],["title/injectables/GithubStrategy.html",[82,0.023,764,2.983]],["body/injectables/GithubStrategy.html",[0,0.095,3,0.113,4,0.101,5,0.101,8,0.204,11,1.072,12,0.638,14,0.264,16,0.01,17,1.195,21,3.726,24,0.336,27,1.736,39,0.29,42,0.113,75,0.007,76,0.007,82,0.036,84,0.782,90,0.959,92,1.223,95,0.873,99,0.932,100,0.932,103,0.739,117,0.492,122,1.043,232,3.889,233,3.483,241,2.071,263,1.436,487,2.686,720,3.148,764,4.563,780,2.208,867,2.747,869,2.747,1352,1.767,1368,1.598,1369,5.358,1394,2.282,1465,4.459,1466,4.083,1467,4.531,1468,5.068,1469,3.518,1470,5.358,1471,5.408,1472,5.722,1473,5.068,1474,5.063,1475,3.148,1476,3.148,1477,2.999,1478,3.518,1479,5.068,1480,3.518,1481,5.068,1482,3.518,1483,3.758,1484,5.068,1485,3.518,1486,5.068,1487,5.068,1488,5.068,1489,5.068,1490,5.068,1491,4.459,1492,5.068,1493,4.459,1494,3.518,1495,4.058,1496,5.782,1497,3.319,1498,3.758]],["title/injectables/GmailActionEmailDeleted.html",[82,0.023,1499,3.186]],["body/injectables/GmailActionEmailDeleted.html",[0,0.067,1,1.883,3,0.08,4,0.071,5,0.071,8,0.145,11,0.847,12,0.648,13,1.597,14,0.285,16,0.01,24,0.389,26,0.969,27,1.232,32,0.654,39,0.286,42,0.08,49,0.871,52,1.074,55,1.454,75,0.006,76,0.006,82,0.028,83,3.015,84,0.555,85,2.19,88,1.497,90,0.758,92,1.306,93,2.646,95,0.895,97,1.922,99,1.078,100,0.946,103,1.076,104,3.832,108,1.195,111,1.801,114,1.195,117,0.349,118,1.267,119,1.872,122,1.171,124,1.498,126,1.253,127,1.997,150,1.165,159,1.425,263,0.786,337,3.992,360,2.19,394,1.304,732,2.058,769,2.399,834,2.116,896,1.619,915,2.937,916,2.815,917,2.908,918,1.883,919,3.304,922,2.937,924,2.937,927,1.566,937,3.174,943,1.939,1056,2.19,1064,3.085,1077,2.602,1164,4.303,1352,1.396,1353,1.676,1354,3.015,1356,2.924,1358,2.128,1359,2.128,1360,2.128,1361,2.128,1362,2.128,1363,1.342,1364,2.122,1365,1.425,1366,1.516,1368,1.134,1372,2.128,1373,2.122,1374,1.676,1375,1.676,1376,1.469,1384,2.507,1388,1.949,1394,1.619,1499,3.85,1500,3.073,1501,2.878,1502,3.163,1503,3.596,1504,2.666,1505,2.033,1506,2.496,1507,1.801,1508,1.801,1509,2.496,1510,2.496,1511,3.596,1512,2.703,1513,2.496,1514,2.878,1515,1.949,1516,3.619,1517,2.355,1518,2.878,1519,2.666,1520,4.158]],["title/injectables/GmailActionEmailReceived.html",[82,0.023,1521,3.186]],["body/injectables/GmailActionEmailReceived.html",[0,0.067,1,1.87,3,0.079,4,0.071,5,0.071,8,0.143,11,0.841,12,0.646,13,1.588,14,0.284,16,0.01,24,0.388,26,0.967,27,1.22,32,0.647,39,0.285,42,0.079,49,0.863,52,1.064,55,1.451,75,0.006,76,0.006,82,0.028,83,3.006,84,0.55,85,2.175,88,1.49,90,0.752,92,1.303,93,2.634,95,0.889,97,1.912,99,1.075,100,0.942,103,1.073,104,3.823,108,1.187,111,1.784,114,0.82,117,0.346,118,1.255,119,1.854,122,1.167,124,1.493,126,1.302,127,2.331,150,1.154,159,1.411,263,0.778,360,2.175,394,1.291,732,2.044,769,2.392,834,2.108,896,1.604,915,2.917,916,2.795,917,2.895,918,1.87,919,3.286,922,2.917,924,2.917,927,1.551,937,3.156,943,1.925,1056,2.175,1064,3.073,1077,2.584,1164,4.29,1352,1.387,1353,1.66,1354,3.006,1356,2.915,1358,2.107,1359,2.107,1360,2.107,1361,2.107,1362,2.107,1363,1.329,1364,2.108,1365,1.411,1366,1.502,1368,1.123,1372,2.107,1373,2.108,1374,1.66,1375,1.66,1376,1.455,1384,2.49,1388,1.93,1394,1.604,1426,3.429,1500,3.052,1504,2.64,1505,2.014,1506,2.472,1507,1.784,1508,1.784,1509,2.472,1510,2.472,1512,2.685,1513,2.472,1514,2.851,1515,1.93,1516,3.603,1517,2.332,1518,2.851,1520,4.129,1521,3.824,1522,2.851,1523,3.133,1524,3.561,1525,3.561,1526,3.133,1527,2.64,1528,3.133,1529,2.64,1530,3.133,1531,2.64,1532,2.64]],["title/injectables/GmailActionEmailSent.html",[82,0.023,1533,3.186]],["body/injectables/GmailActionEmailSent.html",[0,0.067,1,1.872,3,0.08,4,0.071,5,0.071,8,0.143,11,0.842,12,0.646,13,1.59,14,0.284,16,0.01,24,0.388,26,0.967,27,1.222,32,0.648,39,0.285,42,0.08,49,0.864,52,1.066,55,1.451,75,0.006,76,0.006,82,0.028,83,3.007,84,0.55,85,2.177,88,1.491,90,0.753,92,1.303,93,2.636,95,0.889,97,1.914,99,1.076,100,0.943,103,1.073,104,3.824,108,1.188,111,1.786,114,1.188,117,0.346,118,1.257,119,1.856,122,1.168,124,1.494,126,1.249,127,1.985,150,1.156,159,1.413,263,0.779,360,2.177,394,1.293,732,2.046,769,2.393,834,2.109,896,1.606,915,2.92,916,2.798,917,2.897,918,1.872,919,3.289,922,2.92,924,2.92,927,1.553,937,3.159,943,1.927,1056,2.177,1064,3.075,1077,2.586,1164,4.292,1352,1.388,1353,1.662,1354,3.007,1356,2.916,1358,2.11,1359,2.11,1360,2.11,1361,2.11,1362,2.11,1363,1.331,1364,2.11,1365,1.413,1366,1.504,1368,1.125,1372,2.11,1373,2.11,1374,1.662,1375,1.662,1376,1.457,1384,2.493,1388,1.933,1394,1.606,1500,3.055,1504,2.644,1505,2.017,1506,2.476,1507,1.786,1508,1.786,1509,2.476,1510,2.476,1512,2.687,1513,2.476,1514,2.855,1515,1.933,1516,3.605,1517,2.335,1518,2.855,1520,4.133,1527,2.644,1529,2.644,1531,2.644,1533,3.828,1534,2.855,1535,3.137,1536,3.566,1537,4.499,1538,3.566,1539,2.644,1540,2.644,1541,2.644,1542,3.137]],["title/injectables/GmailReactionDeleteEmail.html",[82,0.023,1543,3.186]],["body/injectables/GmailReactionDeleteEmail.html",[0,0.073,3,0.087,4,0.078,5,0.078,8,0.157,11,0.898,12,0.62,13,1.671,14,0.279,16,0.01,24,0.374,26,0.926,27,1.337,32,0.709,39,0.285,42,0.087,55,1.028,74,2.055,75,0.006,76,0.006,82,0.03,84,0.602,88,1.43,90,0.803,92,1.334,93,2.746,95,0.949,97,2.012,99,1.075,100,0.904,103,1.011,108,1.267,114,0.898,117,0.379,118,1.375,122,1.237,124,1.364,126,1.129,127,1.5,150,1.264,159,1.546,263,0.853,336,4.1,360,2.322,394,1.996,519,3.395,532,2.398,732,2.182,769,2.458,834,1.906,896,1.757,917,3.018,918,1.996,927,1.7,943,2.055,945,2.555,979,4.057,981,3.42,983,3.42,1002,2.309,1064,2.779,1077,2.758,1352,1.48,1353,1.818,1354,3.088,1356,2.746,1363,1.457,1364,2.607,1365,1.546,1366,1.646,1368,1.23,1373,2.607,1374,1.818,1375,1.818,1376,1.595,1384,2.658,1388,2.115,1394,1.757,1439,2.115,1500,3.258,1505,2.207,1506,2.709,1507,1.955,1508,1.955,1509,2.709,1510,2.709,1512,2.866,1513,2.709,1515,2.115,1516,2.115,1519,2.893,1543,4.082,1544,2.424,1545,2.893,1546,2.893,1547,2.893,1548,2.893,1549,2.555,1550,4.407,1551,3.124,1552,2.555,1553,3.433,1554,4.082,1555,3.433,1556,2.555,1557,3.902,1558,2.555,1559,4.538,1560,3.902,1561,3.433]],["title/injectables/GmailReactionFlagEmail.html",[82,0.023,1562,3.186]],["body/injectables/GmailReactionFlagEmail.html",[0,0.072,3,0.086,4,0.076,5,0.076,8,0.154,11,0.887,12,0.614,13,1.655,14,0.277,16,0.01,24,0.371,26,0.921,27,1.313,32,0.697,39,0.283,42,0.086,55,1.015,74,2.029,75,0.006,76,0.006,82,0.029,84,0.592,88,1.417,90,0.793,92,1.328,93,2.724,95,0.937,97,1.992,99,1.069,100,0.895,103,1.003,108,1.251,114,0.882,117,0.372,118,1.351,122,1.257,124,1.353,126,1.118,127,1.474,150,1.242,159,1.519,263,0.838,360,2.293,394,1.971,519,3.377,532,2.368,732,2.154,769,2.445,834,1.888,863,2.268,896,1.726,917,2.994,918,1.971,927,1.67,943,2.029,945,2.51,979,4.036,981,3.377,983,3.377,1002,2.268,1064,2.752,1077,2.723,1352,1.462,1353,1.786,1354,3.072,1356,2.724,1363,1.431,1364,2.582,1365,1.519,1366,1.617,1368,1.209,1373,2.582,1374,1.786,1375,1.786,1376,1.566,1384,2.625,1388,2.077,1394,1.726,1439,2.077,1500,3.217,1505,2.168,1506,2.661,1507,1.92,1508,1.92,1509,2.661,1510,2.661,1512,2.83,1513,2.661,1515,2.077,1516,2.077,1532,2.842,1544,2.381,1545,2.842,1546,2.842,1547,2.842,1548,2.842,1549,2.51,1551,3.069,1552,2.51,1553,3.372,1554,4.031,1556,2.51,1558,2.51,1559,4.502,1562,4.031,1563,4.772,1564,5.437,1565,3.833,1566,3.833,1567,5.437,1568,3.833,1569,3.833,1570,3.833,1571,3.372,1572,3.372]],["title/injectables/GmailReactionSendEmail.html",[82,0.023,1573,3.186]],["body/injectables/GmailReactionSendEmail.html",[0,0.063,3,0.075,4,0.067,5,0.067,8,0.135,11,0.806,12,0.628,13,1.535,14,0.29,16,0.01,17,1.173,24,0.368,26,0.88,32,0.61,39,0.28,42,0.075,46,1.899,55,0.922,74,1.843,75,0.006,76,0.006,82,0.027,84,0.518,88,1.67,90,0.72,92,1.281,93,2.561,95,0.851,97,1.848,99,1.056,100,0.916,103,1.005,108,1.136,112,2.922,117,0.326,118,1.182,122,1.213,124,1.272,126,1.144,127,1.29,150,1.087,263,1.079,333,4.486,360,2.083,394,1.217,519,3.244,532,2.552,732,1.957,769,2.348,812,3.877,834,1.931,844,2.488,863,1.985,896,1.511,917,2.815,918,1.79,927,1.462,943,1.843,979,3.877,981,3.067,983,3.067,1002,1.985,1076,4.278,1077,2.474,1352,1.328,1353,1.564,1354,2.951,1356,2.561,1363,1.252,1364,2.018,1365,1.33,1366,1.415,1368,1.058,1373,2.018,1374,1.564,1375,1.564,1376,2.018,1426,2.793,1439,1.818,1500,3.467,1507,1.681,1508,1.681,1539,2.488,1540,2.488,1541,2.488,1544,2.084,1549,2.197,1552,2.197,1556,2.197,1558,2.197,1559,3.837,1571,2.952,1573,3.661,1574,4.938,1575,2.952,1576,4.938,1577,6.059,1578,3.355,1579,2.952,1580,2.952,1581,2.952,1582,2.952,1583,3.355,1584,2.952,1585,2.952,1586,2.952,1587,5.685,1588,5.685,1589,2.952,1590,5.685,1591,2.952,1592,5.685,1593,2.952,1594,2.952,1595,2.952,1596,4.938,1597,3.355,1598,2.952,1599,2.952,1600,2.952,1601,4.344,1602,3.355,1603,2.952,1604,2.952,1605,3.355,1606,3.355,1607,3.355,1608,3.355,1609,4.938,1610,3.355,1611,3.355,1612,3.355,1613,3.355,1614,3.355,1615,3.355]],["title/injectables/GoogleAuthGuard.html",[82,0.023,688,3.186]],["body/injectables/GoogleAuthGuard.html",[0,0.113,3,0.135,4,0.12,5,0.12,8,0.243,12,0.587,14,0.243,16,0.01,24,0.309,39,0.276,42,0.135,75,0.008,76,0.008,82,0.04,84,0.933,90,1.071,99,0.856,100,0.856,103,0.881,117,0.587,122,0.959,126,1.069,321,3.417,688,5.441,780,2.632,1352,1.974,1402,3.753,1404,5.095,1405,5.095,1406,5.384,1407,4.194,1408,3.956,1409,5.095,1410,3.753,1411,4.194,1412,4.194,1616,6.457,1617,7.339]],["title/injectables/GoogleService.html",[82,0.023,1618,2.983]],["body/injectables/GoogleService.html",[0,0.058,3,0.068,4,0.061,5,0.061,8,0.123,9,1.036,10,1.275,12,0.644,13,1.21,14,0.306,15,1.429,16,0.01,17,0.81,21,1.481,24,0.389,26,0.755,29,1.735,32,0.558,39,0.314,42,0.068,49,0.743,52,0.917,55,1.037,56,1.481,75,0.005,76,0.005,82,0.025,83,2.866,84,0.473,85,2.607,86,1.597,88,1.669,90,0.674,92,1.248,95,0.796,99,0.787,100,0.787,103,0.81,108,0.706,114,1.664,117,0.298,118,1.081,122,1.251,124,1.527,150,1.8,159,1.216,166,3.593,179,1.663,210,2.274,233,3.15,234,2.08,241,1.254,249,2.503,336,1.815,337,2.009,463,1.663,517,4.564,519,3.15,520,3.623,532,2.693,535,2.892,537,2.009,548,4.448,550,4.119,561,2.009,769,2.281,812,3.628,834,2.161,918,1.675,933,2.733,943,2.778,952,2.869,988,4.388,990,2.612,992,2.009,994,3.025,1076,1.905,1077,1.537,1098,2.009,1164,4.09,1352,1.242,1354,2.866,1356,2.866,1363,1.145,1364,1.888,1365,1.216,1368,0.967,1373,1.254,1376,1.254,1426,1.735,1431,2.129,1432,2.129,1433,2.129,1434,2.129,1435,2.129,1436,2.129,1437,1.905,1438,2.699,1439,1.663,1440,2.129,1443,2.129,1444,5.579,1445,5.579,1447,2.456,1448,2.456,1449,2.456,1450,2.456,1451,2.456,1452,4.119,1453,2.274,1455,2.274,1456,2.274,1457,2.274,1458,2.274,1459,2.274,1461,2.274,1499,3.425,1500,4.124,1504,2.274,1521,3.425,1533,3.425,1537,2.274,1543,3.425,1562,3.425,1563,2.129,1573,3.425,1618,3.206,1619,2.699,1620,3.068,1621,3.068,1622,3.068,1623,2.699,1624,2.274,1625,2.699,1626,3.068,1627,3.068,1628,5.556,1629,2.699,1630,2.699,1631,2.699,1632,2.699,1633,2.699,1634,2.699,1635,2.699,1636,2.699,1637,2.699,1638,2.699,1639,2.699,1640,2.699,1641,2.699,1642,3.068,1643,4.064,1644,2.699,1645,2.699,1646,2.699,1647,2.456,1648,2.456,1649,3.698,1650,2.456,1651,3.068,1652,2.456,1653,3.068,1654,2.456,1655,2.456,1656,2.699,1657,2.456,1658,2.456]],["title/injectables/GoogleStrategy.html",[82,0.023,765,2.983]],["body/injectables/GoogleStrategy.html",[0,0.089,3,0.106,4,0.094,5,0.094,8,0.191,11,1.027,12,0.686,14,0.253,16,0.01,17,1.216,21,3.78,22,2.808,24,0.361,39,0.283,42,0.106,49,1.15,75,0.007,76,0.007,82,0.034,84,0.733,90,0.918,92,1.184,95,0.818,99,0.892,100,0.892,103,0.918,117,0.461,122,0.999,126,0.84,232,3.725,233,3.41,241,1.939,263,1.375,487,2.573,720,2.948,765,4.37,780,2.067,834,1.881,867,2.572,869,2.572,1098,4.927,1352,1.693,1368,1.497,1466,3.91,1467,4.388,1469,3.294,1470,5.223,1471,5.237,1472,5.578,1474,4.904,1475,2.948,1476,2.948,1477,2.808,1478,3.294,1480,3.294,1482,3.294,1483,3.519,1485,3.294,1491,6.215,1494,3.294,1495,3.799,1497,3.108,1498,3.519,1512,2.471,1644,4.175,1645,4.175,1646,4.175,1659,4.175,1660,7.523,1661,4.746,1662,4.746,1663,7.064,1664,4.746,1665,4.175,1666,4.746,1667,4.746,1668,4.746,1669,4.746,1670,6.295,1671,6.295,1672,4.746,1673,4.746,1674,4.746,1675,4.746,1676,4.746,1677,4.746]],["title/injectables/JwtAuthGuard.html",[82,0.023,366,2.543]],["body/injectables/JwtAuthGuard.html",[0,0.106,3,0.126,4,0.112,5,0.112,8,0.228,12,0.685,14,0.284,16,0.01,24,0.361,39,0.302,42,0.126,49,1.372,75,0.008,76,0.008,82,0.038,84,0.874,90,1.029,95,0.975,99,1,100,1,103,0.826,117,0.55,121,3.35,122,0.899,126,1.248,167,4.533,366,4.173,778,4.533,780,2.466,1352,1.896,1368,1.785,1406,5.264,1408,3.708,1410,3.517,1678,4.981,1679,7.052,1680,7.052,1681,5.662,1682,8.432,1683,5.662,1684,7.052,1685,5.662,1686,4.533,1687,6.204,1688,5.662,1689,5.662,1690,5.662,1691,5.662]],["title/injectables/JwtStrategy.html",[82,0.023,766,2.983]],["body/injectables/JwtStrategy.html",[0,0.093,3,0.111,4,0.099,5,0.099,8,0.2,12,0.63,14,0.291,16,0.01,17,0.724,24,0.331,26,0.606,39,0.299,42,0.145,55,1.21,75,0.007,76,0.007,82,0.035,84,0.766,88,1.113,90,0.946,92,1.211,95,1.117,99,0.919,100,0.919,103,0.724,108,1.142,114,1.142,117,0.482,122,1.029,124,0.977,126,1.147,127,1.908,162,4.245,232,2.936,233,3.549,241,2.028,263,1.416,360,2.093,383,3.045,394,1.799,721,4.366,766,4.5,780,2.162,798,4.366,812,4.32,834,1.937,835,4.366,843,4.366,1352,1.743,1368,1.565,1466,4.027,1467,4.027,1475,3.082,1476,3.082,1477,2.936,1692,3.973,1693,6.352,1694,4.962,1695,6.483,1696,6.735,1697,4.962,1698,4.962,1699,6.483,1700,4.962,1701,4.962,1702,4.962,1703,4.962,1704,4.962,1705,4.962,1706,4.962,1707,4.962,1708,4.962,1709,4.962,1710,4.962,1711,4.962]],["title/injectables/LocalAuthGuard.html",[82,0.023,1712,3.441]],["body/injectables/LocalAuthGuard.html",[0,0.124,3,0.147,4,0.131,5,0.131,16,0.01,39,0.291,42,0.147,75,0.009,76,0.009,82,0.042,84,1.02,117,0.642,780,2.878,1352,2.082,1402,4.104,1410,4.104,1712,6.198,1713,5.813,1714,7.742]],["title/injectables/LocalStrategy.html",[82,0.023,767,2.983]],["body/injectables/LocalStrategy.html",[0,0.104,3,0.123,4,0.11,5,0.11,8,0.223,12,0.675,14,0.28,16,0.01,17,1.223,24,0.355,39,0.3,42,0.123,75,0.008,76,0.008,82,0.038,84,0.854,90,1.014,92,1.274,95,0.953,99,0.985,100,0.985,103,0.807,114,1.273,117,0.537,121,3.272,122,0.878,124,1.088,126,0.979,263,1.66,360,2.931,394,2.005,487,2.84,685,5.207,686,4.427,711,4.508,767,4.824,780,2.409,1352,1.868,1368,1.744,1466,4.316,1467,4.316,1475,3.435,1476,3.435,1477,3.272,1715,4.865,1716,5.53,1717,5.53,1718,6.949,1719,5.53,1720,4.865,1721,4.865,1722,5.53]],["title/classes/LoginDto.html",[0,0.081,655,2.814]],["body/classes/LoginDto.html",[0,0.14,2,2.115,3,0.119,4,0.106,5,0.106,8,0.215,9,1.524,10,2.359,14,0.273,16,0.01,17,1.258,18,2.143,19,3.166,24,0.347,39,0.201,40,3.801,41,2.052,42,0.167,44,3.618,75,0.008,76,0.008,263,1.867,383,2.866,655,4.45,668,3.495,711,4.917,732,2.115,834,2.522,867,3.683,869,3.683,1723,5.542,1724,3.957,1725,5.542,1726,5.338,1727,5.338,1728,3.957,1729,3.957,1730,3.957,1731,4.273]],["title/injectables/MicrosoftService.html",[82,0.023,1732,2.983]],["body/injectables/MicrosoftService.html",[0,0.058,3,0.069,4,0.061,5,0.061,8,0.124,9,1.038,10,1.536,12,0.645,13,1.212,14,0.307,15,1.433,16,0.01,17,0.812,24,0.39,26,0.756,29,1.739,32,0.559,39,0.314,42,0.069,49,0.745,52,0.919,55,1.039,56,1.485,75,0.005,76,0.005,82,0.025,83,2.868,84,0.475,85,2.611,86,1.601,88,1.67,90,0.675,92,1.249,95,0.797,99,0.789,100,0.789,103,0.812,108,0.708,114,1.666,117,0.299,118,1.083,122,1.251,124,1.528,150,1.803,159,1.218,166,3.596,179,1.666,210,2.28,233,3.153,234,2.084,241,1.257,249,2.508,336,1.819,337,2.014,463,1.666,517,4.568,519,3.153,520,3.626,532,2.696,535,2.896,537,2.014,548,4.454,550,4.125,769,2.2,812,3.768,834,2.084,918,1.678,933,2.738,943,2.78,952,2.874,988,4.39,990,2.617,992,2.014,994,3.03,1076,1.91,1197,4.093,1352,1.244,1354,2.868,1356,2.868,1363,1.148,1364,1.891,1365,1.218,1368,0.97,1373,1.257,1376,1.257,1426,1.739,1428,2.28,1431,2.134,1432,2.134,1433,2.134,1434,2.134,1435,2.134,1436,2.134,1437,1.91,1440,2.134,1443,2.134,1444,5.584,1445,5.584,1447,2.462,1448,2.462,1449,2.462,1450,2.462,1451,2.462,1452,4.125,1453,2.28,1455,2.28,1456,2.28,1457,2.28,1458,2.28,1459,2.28,1461,2.28,1537,2.28,1563,2.134,1623,2.705,1624,2.28,1625,2.705,1629,2.705,1630,2.705,1631,2.705,1632,2.705,1633,2.705,1634,2.705,1635,2.705,1636,2.705,1637,2.705,1638,2.705,1639,2.705,1640,2.705,1641,2.705,1643,4.071,1647,2.462,1648,2.462,1649,3.704,1650,2.462,1652,2.462,1654,2.462,1655,2.462,1656,2.705,1657,2.462,1658,2.462,1732,3.212,1733,2.705,1734,3.075,1735,3.075,1736,3.431,1737,4.127,1738,2.705,1739,3.431,1740,3.431,1741,3.431,1742,3.431,1743,3.431,1744,3.704,1745,3.075,1746,3.075,1747,5.564,1748,3.075,1749,2.705,1750,2.705,1751,2.705,1752,2.705,1753,3.075,1754,3.075]],["title/injectables/MsAuthGuard.html",[82,0.023,694,3.186]],["body/injectables/MsAuthGuard.html",[0,0.113,3,0.135,4,0.12,5,0.12,8,0.243,12,0.587,14,0.243,16,0.01,24,0.309,39,0.276,42,0.135,75,0.008,76,0.008,82,0.04,84,0.933,90,1.071,99,0.856,100,0.856,103,0.881,117,0.587,122,0.959,126,1.069,321,3.417,694,5.441,780,2.632,1352,1.974,1402,3.753,1404,5.095,1405,5.095,1406,5.384,1407,4.194,1408,3.956,1409,5.095,1410,3.753,1411,4.194,1412,4.194,1755,6.457,1756,7.339]],["title/injectables/MsStrategy.html",[82,0.023,768,2.983]],["body/injectables/MsStrategy.html",[0,0.095,3,0.113,4,0.1,5,0.1,8,0.203,11,1.07,12,0.637,14,0.264,16,0.01,17,1.194,21,3.721,24,0.335,27,1.729,39,0.29,42,0.113,75,0.007,76,0.007,82,0.035,84,0.779,90,0.956,92,1.221,95,0.87,99,0.929,100,0.929,103,0.736,117,0.49,122,1.041,232,3.879,233,3.479,241,2.063,263,1.432,487,2.679,720,3.136,768,4.551,780,2.199,834,1.509,867,2.736,869,2.736,1352,1.763,1368,1.592,1394,2.273,1466,4.072,1467,4.523,1469,3.505,1470,5.35,1471,5.398,1472,5.714,1474,5.054,1475,3.136,1476,3.136,1477,2.987,1478,3.505,1480,3.505,1482,3.505,1483,3.743,1485,3.505,1493,4.442,1494,3.505,1495,4.042,1496,5.768,1497,3.306,1498,3.743,1744,6.17,1749,4.442,1750,4.442,1751,4.442,1752,4.442,1757,4.442,1758,5.049,1759,5.049,1760,5.049,1761,5.049,1762,5.049,1763,5.049,1764,5.049,1765,6.556]],["title/modules/OrmModule.html",[131,1.604,188,2.983]],["body/modules/OrmModule.html",[0,0.102,3,0.121,4,0.108,5,0.108,14,0.219,16,0.01,32,1.25,34,2.168,39,0.332,42,0.121,46,2.644,49,1.318,75,0.008,76,0.008,117,0.528,131,2.567,133,2.625,149,2.947,174,4.784,188,4.773,233,3.451,241,2.222,260,2.831,262,3.726,263,1.502,453,3.561,454,2.369,711,3.075,786,3.726,787,4.784,788,4.784,789,4.353,791,4.784,796,4.784,803,4.784,1118,4.502,1158,4.502,1191,4.502,1720,4.784,1766,5.438,1767,5.438,1768,5.438,1769,5.438,1770,5.438,1771,5.438,1772,5.438,1773,5.438,1774,5.438,1775,5.438,1776,5.438,1777,5.438,1778,5.438,1779,5.438,1780,5.438,1781,5.438]],["title/injectables/OutlookActionEmailDeleted.html",[82,0.023,1740,3.186]],["body/injectables/OutlookActionEmailDeleted.html",[0,0.067,1,1.876,3,0.08,4,0.071,5,0.071,8,0.144,11,0.844,12,0.647,13,1.592,14,0.284,16,0.01,24,0.388,26,0.968,27,1.225,32,0.65,39,0.286,42,0.08,49,0.867,52,1.069,55,1.452,75,0.006,76,0.006,82,0.028,83,3.01,84,0.552,85,2.182,88,1.493,90,0.755,92,1.304,93,2.639,95,0.891,97,1.917,99,1.077,100,0.944,103,1.074,104,3.827,108,1.19,111,1.791,114,0.823,117,0.347,118,1.26,119,1.861,122,1.169,124,1.495,126,1.251,127,2.337,150,1.159,159,1.417,263,0.781,336,2.116,337,3.387,360,2.182,394,1.297,732,2.05,769,2.395,834,2.112,896,1.61,915,2.925,916,2.804,917,2.901,918,1.876,919,3.294,922,2.925,924,2.925,927,1.558,937,3.164,943,1.931,1056,2.182,1064,3.078,1197,4.296,1352,1.391,1353,1.666,1354,3.01,1356,2.919,1358,2.116,1359,2.116,1360,2.116,1361,2.116,1362,2.116,1363,1.335,1364,2.114,1365,1.417,1366,1.508,1368,1.128,1372,2.116,1373,2.114,1374,1.666,1375,1.666,1376,1.461,1384,2.498,1388,1.938,1394,1.61,1418,2.342,1501,2.863,1502,3.146,1505,2.022,1507,1.791,1508,1.791,1512,2.693,1515,1.938,1516,3.609,1517,2.342,1519,2.651,1737,3.061,1740,3.835,1782,3.576,1783,2.863,1784,3.387,1785,3.576,1786,3.146,1787,3.146,1788,3.146,1789,2.482,1790,2.651,1791,2.482,1792,2.482,1793,2.863,1794,2.863,1795,4.141]],["title/injectables/OutlookActionEmailReceived.html",[82,0.023,1736,3.186]],["body/injectables/OutlookActionEmailReceived.html",[0,0.067,1,1.864,3,0.079,4,0.07,5,0.07,8,0.143,11,0.839,12,0.644,13,1.585,14,0.283,16,0.01,24,0.387,26,0.966,27,1.215,32,0.645,37,2.006,39,0.285,42,0.079,49,0.86,52,1.06,55,1.449,75,0.006,76,0.006,82,0.028,83,3.002,84,0.547,85,2.169,88,1.488,90,0.75,92,1.301,93,2.629,95,0.886,97,1.908,99,1.074,100,0.94,103,1.071,104,3.819,108,1.183,111,1.777,114,0.816,117,0.344,118,1.25,119,1.846,122,1.166,124,1.491,126,1.247,127,2.326,150,1.149,159,1.405,263,0.775,360,2.169,394,1.286,732,2.038,769,2.389,834,2.105,896,1.597,915,2.908,916,2.787,917,2.89,918,1.864,919,3.279,922,2.908,924,2.908,927,1.545,937,3.149,943,1.92,1056,2.169,1064,3.068,1197,4.285,1352,1.383,1353,1.653,1354,3.002,1356,2.911,1357,2.63,1358,2.099,1359,2.099,1360,2.099,1361,2.099,1362,2.099,1363,1.324,1364,2.101,1365,1.405,1366,1.496,1368,1.118,1372,2.099,1373,2.101,1374,1.653,1375,1.653,1376,1.449,1384,2.483,1388,1.922,1394,1.597,1418,2.323,1426,3.421,1505,2.006,1507,1.777,1508,1.777,1512,2.677,1515,1.922,1516,3.596,1517,2.323,1522,2.839,1523,3.12,1526,3.12,1527,2.63,1528,3.12,1529,2.63,1530,3.12,1531,2.63,1532,2.63,1736,3.812,1737,3.043,1738,3.12,1784,3.367,1786,3.12,1787,3.12,1788,3.12,1789,2.462,1790,2.63,1791,2.462,1792,2.462,1793,2.839,1794,2.839,1795,4.117]],["title/injectables/OutlookActionEmailSent.html",[82,0.023,1741,3.186]],["body/injectables/OutlookActionEmailSent.html",[0,0.067,1,1.872,3,0.08,4,0.071,5,0.071,8,0.143,11,0.842,12,0.646,13,1.59,14,0.284,16,0.01,24,0.388,26,0.967,27,1.222,32,0.648,39,0.285,42,0.08,49,0.864,52,1.066,55,1.451,75,0.006,76,0.006,82,0.028,83,3.007,84,0.55,85,2.177,88,1.491,90,0.753,92,1.303,93,2.636,95,0.889,97,1.914,99,1.076,100,0.943,103,1.073,104,3.824,108,1.188,111,1.786,114,0.821,117,0.346,118,1.257,119,1.856,122,1.168,124,1.494,126,1.249,127,1.985,150,1.156,159,1.413,263,0.779,360,2.177,394,1.293,732,2.046,769,2.393,834,2.109,896,1.606,915,2.92,916,2.798,917,2.897,918,1.872,919,3.289,922,2.92,924,2.92,927,1.553,937,3.159,943,1.927,1056,2.177,1064,3.075,1197,4.292,1352,1.388,1353,1.662,1354,3.007,1356,2.916,1357,2.644,1358,2.11,1359,2.11,1360,2.11,1361,2.11,1362,2.11,1363,1.331,1364,2.11,1365,1.413,1366,1.504,1368,1.125,1372,2.11,1373,2.11,1374,1.662,1375,1.662,1376,1.457,1384,2.493,1388,1.933,1394,1.606,1418,2.335,1505,2.017,1507,1.786,1508,1.786,1512,2.687,1515,1.933,1516,3.605,1517,2.335,1527,2.644,1529,2.644,1531,2.644,1534,2.855,1535,3.137,1537,4.499,1539,2.644,1540,2.644,1541,2.644,1542,3.137,1737,3.055,1741,3.828,1783,2.855,1784,3.381,1789,2.476,1791,2.476,1792,2.476,1793,2.855,1794,2.855,1795,4.133,1796,3.566,1797,3.566]],["title/injectables/OutlookReactionDeleteEmail.html",[82,0.023,1742,3.186]],["body/injectables/OutlookReactionDeleteEmail.html",[0,0.073,3,0.087,4,0.078,5,0.078,8,0.157,11,0.899,12,0.62,13,1.673,14,0.279,16,0.01,24,0.374,26,0.926,27,1.339,32,0.71,37,2.21,39,0.285,42,0.087,55,1.029,74,2.057,75,0.006,76,0.006,82,0.03,84,0.603,88,1.432,90,0.804,92,1.335,93,2.748,95,0.95,97,2.013,99,1.075,100,0.905,103,1.011,108,1.268,117,0.38,118,1.377,122,1.237,124,1.365,126,1.13,127,1.502,150,1.266,159,1.548,263,0.854,336,4.103,360,2.324,394,1.998,519,3.396,532,2.401,732,2.184,769,2.459,834,1.908,863,2.312,896,1.76,917,3.02,918,1.998,927,1.702,943,2.057,945,2.559,979,4.059,981,3.423,983,3.423,1002,2.312,1064,2.781,1352,1.482,1353,1.821,1354,3.089,1356,2.748,1363,1.459,1364,2.252,1365,1.548,1366,1.648,1368,1.232,1373,2.609,1374,1.821,1375,1.821,1376,1.597,1384,2.661,1394,1.76,1418,2.559,1426,2.21,1439,2.118,1507,1.958,1508,1.958,1512,2.869,1515,2.118,1516,2.118,1519,2.897,1544,2.427,1545,2.897,1546,2.897,1547,2.897,1548,2.897,1549,2.559,1550,3.128,1552,2.559,1554,4.086,1555,3.438,1556,2.559,1558,2.559,1559,4.541,1561,3.438,1737,3.261,1742,4.086,1784,3.609,1789,2.713,1790,2.897,1791,2.713,1792,2.713,1798,3.438,1799,3.438,1800,3.908,1801,3.438]],["title/injectables/OutlookReactionFlagEmail.html",[82,0.023,1743,3.186]],["body/injectables/OutlookReactionFlagEmail.html",[0,0.072,3,0.086,4,0.076,5,0.076,8,0.154,11,0.887,12,0.614,13,1.655,14,0.277,16,0.01,24,0.371,26,0.921,27,1.313,32,0.697,37,2.168,39,0.283,42,0.086,55,1.015,74,2.029,75,0.006,76,0.006,82,0.029,84,0.592,88,1.417,90,0.793,92,1.328,93,2.724,95,0.937,97,1.992,99,1.069,100,0.895,103,1.003,108,1.251,117,0.372,118,1.351,122,1.257,124,1.353,126,1.118,127,1.474,150,1.242,159,1.519,263,0.838,360,2.293,394,1.971,519,3.377,532,2.368,732,2.154,769,2.445,834,1.888,863,2.268,896,1.726,917,2.994,918,1.971,927,1.67,943,2.029,945,2.51,979,4.036,981,3.377,983,3.377,1002,2.268,1064,2.752,1352,1.462,1353,1.786,1354,3.072,1356,2.724,1363,1.431,1364,2.222,1365,1.519,1366,1.617,1368,1.209,1373,2.582,1374,1.786,1375,1.786,1376,1.566,1384,2.625,1394,1.726,1418,2.51,1426,2.168,1439,2.077,1505,2.168,1507,1.92,1508,1.92,1512,2.83,1515,2.077,1516,2.077,1532,2.842,1544,2.381,1545,2.842,1546,2.842,1547,2.842,1548,2.842,1549,2.51,1550,3.069,1551,3.069,1552,2.51,1554,4.031,1556,2.51,1558,2.51,1559,4.502,1563,5.039,1572,3.372,1737,3.217,1743,4.031,1784,3.56,1789,2.661,1790,2.842,1791,2.661,1792,2.661,1798,3.372,1799,3.372,1801,3.372,1802,3.833,1803,5.437,1804,3.833,1805,3.833,1806,3.833]],["title/injectables/OutlookReactionSendEmail.html",[82,0.023,1739,3.186]],["body/injectables/OutlookReactionSendEmail.html",[0,0.067,3,0.08,4,0.071,5,0.071,8,0.145,11,0.847,12,0.592,13,1.597,14,0.269,16,0.01,24,0.362,26,0.901,32,0.654,39,0.286,42,0.08,46,1.997,49,0.871,55,0.97,74,1.939,75,0.006,76,0.006,82,0.028,84,0.555,88,1.497,90,0.758,92,1.306,93,2.646,95,0.895,97,1.922,99,1.046,100,0.864,103,0.974,108,1.195,112,3.073,117,0.349,118,1.267,122,1.124,124,1.314,126,1.079,127,1.382,150,1.165,263,1.135,333,2.496,360,2.19,394,1.304,519,3.314,532,2.262,732,2.058,769,2.399,812,3.961,834,1.822,844,2.666,863,2.128,896,1.619,917,2.908,918,1.883,927,1.566,943,1.939,979,3.961,981,3.226,983,3.226,1002,2.128,1076,4.147,1352,1.396,1353,1.676,1354,3.015,1356,2.646,1363,1.342,1364,2.122,1365,1.425,1366,1.516,1368,1.134,1373,2.122,1374,1.676,1375,1.676,1376,2.122,1426,2.937,1439,1.949,1507,1.801,1508,1.801,1539,2.666,1540,2.666,1541,2.666,1544,2.233,1549,2.355,1552,2.355,1556,2.355,1558,2.355,1559,3.992,1575,3.163,1577,3.163,1579,3.163,1580,3.163,1581,3.163,1582,3.163,1584,3.163,1585,3.163,1586,3.163,1587,5.363,1588,5.874,1589,3.163,1590,5.363,1591,3.163,1592,5.363,1593,3.163,1594,3.163,1595,3.163,1598,3.163,1599,3.163,1600,3.163,1601,4.569,1603,3.163,1604,3.163,1737,3.073,1739,3.85,1784,3.401,1807,3.596,1808,3.596,1809,3.596,1810,3.596,1811,3.596,1812,3.596,1813,3.596,1814,3.596,1815,3.596,1816,3.596,1817,3.596,1818,3.596]],["title/classes/Reaction.html",[0,0.081,74,1.604]],["body/classes/Reaction.html",[0,0.135,1,2.951,2,1.204,3,0.068,4,0.06,5,0.06,6,4.103,7,1.888,8,0.122,9,1.028,10,2.481,11,1.35,12,0.752,13,1.202,14,0.316,15,2.868,16,0.01,17,1.215,18,1.941,19,2.868,20,3.908,21,3.189,22,4.58,23,3.735,24,0.315,26,1.017,27,2.651,29,2.594,31,4.58,32,0.834,34,2.19,35,2.714,37,2.594,39,0.114,40,3.996,41,1.168,42,0.161,43,1.647,44,3.843,45,3.618,46,3.023,47,3.124,48,4.295,49,1.339,50,3.764,51,3.618,52,1.651,53,1.798,54,1.798,55,0.567,56,3.189,57,3.269,58,3.908,59,3.48,60,3.907,61,3.618,62,3.618,63,3.618,64,3.335,65,1.719,66,1.99,67,1.99,68,1.99,69,3.203,70,3.004,71,3.004,72,3.004,73,1.798,74,2.297,75,0.005,76,0.005,105,1.582,1819,3.039,1820,3.039,1821,3.039,1822,3.039]],["title/classes/ReactionDto.html",[0,0.081,57,2.543]],["body/classes/ReactionDto.html",[0,0.136,1,2.961,2,1.226,3,0.069,4,0.061,5,0.061,6,3.857,7,1.921,8,0.124,9,1.042,10,2.482,11,1.32,12,0.755,13,1.218,14,0.313,15,2.893,16,0.01,17,1.218,18,1.761,19,2.602,20,3.938,21,3.213,22,4.6,23,3.764,24,0.285,26,1.013,27,2.614,29,2.629,31,4.6,32,0.845,34,2.205,35,2.75,37,2.629,39,0.116,40,4.001,41,1.189,42,0.162,43,1.676,44,3.849,45,3.656,46,3.036,47,3.158,48,4.316,49,1.353,50,3.789,51,3.656,52,1.669,53,1.83,54,1.83,55,0.577,56,3.213,57,3.674,58,3.674,59,3.511,60,3.93,61,3.656,62,3.656,63,3.656,64,3.365,65,1.749,66,2.025,67,2.025,68,2.025,69,3.232,70,3.044,71,3.044,72,3.044,73,1.83,74,2.084,75,0.005,76,0.005,105,1.61,1823,3.093,1824,3.093,1825,3.093]],["title/injectables/ReactionRegistry.html",[82,0.023,519,1.872]],["body/injectables/ReactionRegistry.html",[0,0.092,3,0.11,4,0.098,5,0.098,8,0.198,9,1.445,11,1.051,12,0.741,14,0.307,16,0.01,24,0.405,26,0.992,34,2.032,39,0.27,42,0.11,49,1.191,75,0.007,76,0.007,82,0.035,84,0.759,87,3.412,88,1.612,89,4.707,90,0.94,91,4.777,92,1.205,93,2.553,94,4.777,95,0.847,96,4.325,97,2.563,98,3.935,99,1.081,100,1.081,101,4.777,102,3.935,103,1.048,105,3.354,106,5.668,107,3.935,108,1.131,109,4.777,110,3.935,111,2.462,112,2.909,113,3.412,114,1.483,115,4.777,116,3.935,117,0.477,118,1.732,120,2.78,121,2.909,122,0.78,123,5.158,124,0.968,125,4.325,126,1.272,127,1.89,128,4.325,129,4.325,130,4.325,463,4.404,519,2.806,532,3.54,979,4.23,1002,2.909]],["title/modules/ReactionRegistryModule.html",[131,1.604,451,2.814]],["body/modules/ReactionRegistryModule.html",[0,0.11,3,0.131,4,0.116,5,0.116,16,0.01,39,0.293,42,0.131,74,2.185,75,0.008,76,0.008,117,0.568,131,2.91,133,2.826,134,3.046,135,3.31,136,3.31,137,3.046,138,4.408,139,4.408,144,4.807,145,4.071,146,3.31,147,3.172,148,5.149,149,3.901,150,1.897,151,5.149,451,5.74,463,3.172,519,3.878,532,2.549,1826,5.149,1827,5.852,1828,5.149,1829,5.149]],["title/classes/RegisterDto.html",[0,0.081,668,2.814]],["body/classes/RegisterDto.html",[0,0.136,2,1.993,3,0.112,4,0.1,5,0.1,8,0.202,9,1.466,10,2.376,14,0.31,16,0.01,17,1.265,18,2.427,19,3.586,24,0.393,39,0.189,40,3.749,41,1.934,42,0.162,44,3.562,75,0.007,76,0.007,263,1.881,383,2.758,655,3.293,668,4.283,711,4.868,732,1.993,834,2.488,867,4.323,869,4.323,1723,5.914,1724,3.729,1725,5.388,1728,4.849,1729,4.849,1730,3.729,1731,4.026,1830,5.029,1831,5.029,1832,5.029,1833,5.029]],["title/entities/Service.html",[32,0.781,259,1.703]],["body/entities/Service.html",[0,0.08,3,0.095,4,0.085,5,0.085,8,0.171,9,1.312,10,2.411,11,1.231,12,0.733,14,0.327,16,0.01,17,1.186,18,2.564,19,3.515,24,0.416,26,0.714,27,2.004,32,1.478,34,2.458,39,0.271,40,3.595,41,1.637,42,0.095,44,3.395,49,1.889,52,1.748,75,0.007,76,0.007,120,3.309,249,3.623,259,2.319,260,2.217,267,4.408,270,4.338,277,3.309,289,4.956,290,1.637,292,2.52,383,1.796,786,4.472,990,3.78,1008,4.64,1077,2.931,1089,4.684,1090,4.684,1092,5.351,1094,5.761,1095,5.761,1096,5.351,1098,3.831,1235,3.409,1240,3.409,1254,5.351,1834,3.746,1835,4.258,1836,4.258,1837,4.258,1838,4.258,1839,4.258,1840,4.258,1841,4.258,1842,4.258,1843,4.258,1844,4.258,1845,5.147,1846,5.851,1847,4.258,1848,4.258,1849,5.147,1850,4.258,1851,3.409,1852,3.746]],["title/controllers/ServiceController.html",[152,2.237,1853,3.186]],["body/controllers/ServiceController.html",[0,0.043,3,0.051,4,0.045,5,0.045,8,0.092,10,2.351,11,1.31,12,0.692,14,0.312,16,0.01,17,0.898,18,2.248,23,2.069,24,0.364,26,0.973,32,1.371,34,1.658,39,0.274,41,0.874,42,0.051,55,0.683,69,3.369,75,0.004,76,0.004,88,1.029,89,4.238,90,0.534,92,1.336,95,0.392,97,1.447,99,0.985,100,0.985,103,1.04,105,3,108,1.417,117,0.221,122,1.027,124,1.274,126,1.29,152,1.184,154,1.184,159,1.45,162,3.005,166,2.972,168,2.216,179,3.648,234,1.647,243,1.489,263,1.259,290,0.874,292,1.346,296,1.82,306,4.846,308,5.802,311,4.798,312,3.898,313,3.898,314,3.898,315,2.001,316,5.503,317,6.122,318,3.66,321,3.806,323,1.904,333,1.579,335,2.001,336,1.346,337,2.395,341,4.21,342,5.67,343,4.613,347,1.686,348,5.707,349,1.686,357,3.674,358,5.181,359,2.928,361,1.686,362,1.06,366,1.346,367,1.82,373,1.82,375,5.15,376,6.135,377,1.686,380,1.686,382,1.82,383,1.935,385,4.99,386,4.99,387,2.712,389,3.218,418,3.218,429,2.001,487,2.149,691,4.037,769,1.447,1000,3.824,1001,1.82,1254,4.21,1255,2.001,1271,2.001,1366,0.959,1853,2.712,1854,2.001,1855,3.658,1856,3.658,1857,5.258,1858,3.658,1859,3.658,1860,3.658,1861,3.658,1862,4.589,1863,4.037,1864,2.001,1865,2.274,1866,2.274,1867,2.274,1868,3.658,1869,5.762,1870,2.274,1871,2.274,1872,2.274,1873,6.156,1874,2.274,1875,2.274,1876,2.274,1877,2.274,1878,2.274,1879,2.274,1880,5.258,1881,2.274,1882,2.274,1883,2.274,1884,2.274,1885,2.274,1886,2.274,1887,2.274,1888,2.274,1889,2.274,1890,2.274,1891,2.274,1892,2.274,1893,2.274,1894,3.658,1895,2.274,1896,2.001,1897,2.274,1898,2.274,1899,1.82,1900,2.001,1901,2.274,1902,2.274,1903,2.274,1904,2.274,1905,2.274,1906,2.274,1907,2.274,1908,2.274,1909,2.274,1910,2.274,1911,2.274,1912,2.274,1913,2.274,1914,2.274,1915,2.274,1916,2.274,1917,2.274,1918,2.274,1919,2.274,1920,2.274,1921,2.274,1922,3.658,1923,3.658,1924,3.658,1925,2.274,1926,2.274,1927,2.274,1928,2.274,1929,2.274,1930,2.274,1931,2.274,1932,2.274,1933,2.274]],["title/injectables/ServiceManager.html",[82,0.023,234,1.935]],["body/injectables/ServiceManager.html",[0,0.078,3,0.093,4,0.083,5,0.083,8,0.168,11,1.295,12,0.797,14,0.311,16,0.01,17,1.198,24,0.406,26,0.945,32,1.201,39,0.281,42,0.093,75,0.006,76,0.006,82,0.031,84,0.643,88,0.934,90,0.84,92,1.466,95,0.992,99,1.097,100,1.097,103,1.129,114,0.958,117,0.404,122,0.661,124,1.524,126,1.325,168,2.01,234,2.594,247,3.087,248,3.333,250,3.333,290,1.601,323,2.999,362,1.94,383,2.429,454,1.813,480,3.442,487,3.461,494,2.354,535,4.21,573,4.428,575,3.409,577,3.578,592,3.578,596,3.578,1000,4.648,1001,3.333,1005,3.663,1007,3.663,1008,2.89,1298,5.068,1314,5.068,1327,3.333,1863,5.068,1864,5.068,1896,5.068,1899,3.333,1900,3.663,1934,3.663,1935,4.163,1936,4.163,1937,5.068,1938,4.163,1939,4.163,1940,4.163,1941,4.163,1942,4.163,1943,4.163,1944,4.163,1945,4.163,1946,4.163,1947,4.163,1948,4.163,1949,4.163,1950,4.163,1951,4.163,1952,5.761,1953,4.163]],["title/modules/ServiceModule.html",[131,1.604,189,2.67]],["body/modules/ServiceModule.html",[0,0.068,3,0.081,4,0.072,5,0.072,16,0.01,32,1.448,34,1.654,39,0.331,42,0.081,75,0.006,76,0.006,86,1.898,117,0.354,131,2.294,132,4.855,133,1.76,134,1.898,135,2.062,136,2.062,137,1.898,138,3.475,139,3.475,144,4.503,145,2.967,146,2.062,147,1.976,149,2.843,150,1.181,154,2.731,189,5.582,234,3.724,243,2.387,263,1.146,291,2.387,292,2.157,451,4.855,453,2.387,454,1.588,459,3.207,460,2.703,461,4.615,462,3.207,463,1.976,520,4.142,536,2.531,763,4.855,769,2.608,786,2.843,1118,3.435,1124,4.387,1158,3.435,1164,4.193,1191,3.435,1197,4.193,1349,2.531,1363,1.361,1366,1.538,1367,2.703,1427,5.147,1437,3.258,1618,5.147,1732,5.147,1783,2.919,1851,2.919,1853,4.555,1899,2.919,1954,3.207,1955,3.207,1956,3.207,1957,3.646,1958,5.147,1959,5.147,1960,3.646,1961,3.646,1962,5.245,1963,3.646,1964,3.646,1965,3.646,1966,3.646,1967,3.646,1968,3.646,1969,3.646,1970,2.919,1971,3.646,1972,3.646]],["title/injectables/ServiceRegistry.html",[82,0.023,520,2.153]],["body/injectables/ServiceRegistry.html",[0,0.092,3,0.11,4,0.097,5,0.097,8,0.197,9,1.443,11,1.05,12,0.74,14,0.307,16,0.01,24,0.405,26,0.992,32,1.305,39,0.27,42,0.11,49,1.189,75,0.007,76,0.007,82,0.035,84,0.757,87,3.406,88,1.61,90,0.939,91,4.771,92,1.204,94,4.771,95,0.845,98,3.928,99,1.08,100,1.08,101,4.771,102,3.928,103,1.047,105,3.35,107,3.928,108,1.129,109,4.771,110,3.928,111,2.458,112,2.903,113,3.406,114,1.481,115,4.771,116,3.928,117,0.477,118,1.729,121,2.903,122,0.779,123,5.152,124,0.966,126,1.271,127,1.886,179,3.892,234,3.657,243,3.213,520,3.223,535,4.228,536,5.638,988,4.593,1437,3.048,1973,6.435,1974,4.906,1975,6.435,1976,4.906,1977,4.906,1978,4.906,1979,4.906]],["title/entities/ServiceToken.html",[259,1.703,786,2.329]],["body/entities/ServiceToken.html",[0,0.095,3,0.113,4,0.1,5,0.1,8,0.203,9,1.47,11,1.188,14,0.344,16,0.01,17,1.124,18,2.628,24,0.426,26,1,32,1.552,39,0.274,42,0.113,75,0.007,76,0.007,259,2.598,260,2.628,263,1.866,264,4.861,267,4.713,277,4.117,279,5.768,285,5.249,288,5.398,290,1.941,291,3.306,457,3.306,786,3.553,888,5.398,891,5.398,892,5.398,894,5.398,1233,5.249,1980,4.442,1981,5.049,1982,5.049,1983,5.049,1984,5.049,1985,7.707,1986,5.049,1987,5.049,1988,5.049]],["title/injectables/ServiceTokenService.html",[82,0.023,769,1.355]],["body/injectables/ServiceTokenService.html",[0,0.054,3,0.064,4,0.057,5,0.057,8,0.116,11,1.384,12,0.742,13,2.063,14,0.307,16,0.01,17,0.993,24,0.39,26,1.074,32,1.361,39,0.266,42,0.064,55,1.504,75,0.005,76,0.005,82,0.024,84,0.445,88,1.2,90,0.643,92,1.447,95,0.76,99,1.082,100,1.082,103,1.092,108,1.379,114,1.014,117,0.28,122,1.159,124,1.569,126,1.205,168,2.584,263,1.668,290,1.109,291,1.889,318,1.631,323,2.785,353,2.609,362,1.344,383,2.257,394,1.046,454,1.256,457,1.889,480,3.687,487,2.448,494,1.631,503,2.309,513,2.309,575,2.609,579,4.284,598,3.529,600,2.309,602,2.538,720,3.722,769,1.39,786,3.957,888,2.139,891,2.139,892,2.139,894,2.139,1103,5.549,1327,2.309,1497,3.923,1849,2.538,1937,4.707,1989,2.538,1990,4.408,1991,4.408,1992,4.408,1993,4.408,1994,5.351,1995,5.351,1996,2.885,1997,2.885,1998,4.408,1999,2.885,2000,2.885,2001,4.408,2002,2.885,2003,4.408,2004,2.885,2005,2.885,2006,4.408,2007,2.885,2008,4.408,2009,2.885,2010,4.408,2011,2.885,2012,2.885,2013,2.885,2014,2.885,2015,2.885,2016,2.885,2017,2.885,2018,2.885,2019,2.885,2020,2.885,2021,2.885,2022,2.885,2023,4.408,2024,2.885,2025,5.351,2026,2.885,2027,2.885,2028,2.885,2029,2.885,2030,2.885,2031,2.538,2032,5.351,2033,2.885,2034,2.885,2035,2.885,2036,2.885,2037,2.885,2038,5.991,2039,2.885,2040,2.885,2041,2.885,2042,2.885,2043,2.885,2044,2.885,2045,2.885]],["title/injectables/SpotifyAuthGuard.html",[82,0.023,701,3.186]],["body/injectables/SpotifyAuthGuard.html",[0,0.113,3,0.135,4,0.12,5,0.12,8,0.243,12,0.587,14,0.243,16,0.01,24,0.309,39,0.276,42,0.135,75,0.008,76,0.008,82,0.04,84,0.933,90,1.071,99,0.856,100,0.856,103,0.881,117,0.587,122,0.959,126,1.069,321,3.417,701,5.441,780,2.632,1352,1.974,1402,3.753,1404,5.095,1405,5.095,1406,5.384,1407,4.194,1408,3.956,1409,5.095,1410,3.753,1411,4.194,1412,4.194,2046,6.457,2047,7.339]],["title/injectables/SpotifyService.html",[82,0.023,1958,2.983]],["body/injectables/SpotifyService.html",[0,0.082,3,0.098,4,0.087,5,0.087,8,0.176,9,1.336,10,1.645,12,0.74,13,1.561,14,0.329,16,0.01,17,0.989,24,0.424,26,0.889,32,0.795,39,0.295,42,0.098,49,1.06,52,1.307,55,0.816,56,2.111,75,0.007,76,0.007,82,0.032,84,0.675,88,1.632,90,0.869,92,1.372,95,1.026,99,0.961,100,0.961,103,0.989,108,1.006,117,0.425,118,1.541,124,0.861,150,1.417,166,3.951,179,2.37,233,3.502,234,2.683,241,1.787,249,3.229,517,5.145,520,4.028,535,3.528,537,2.863,561,2.863,769,2.478,918,2.16,933,3.525,952,3.701,988,4.746,989,3.242,990,3.369,991,3.847,992,2.863,994,3.901,1352,1.602,1354,3.186,1356,3.186,1363,1.632,1368,1.379,1428,3.242,1431,3.035,1432,3.035,1433,3.035,1434,3.035,1435,3.035,1436,3.035,1437,2.716,1439,2.37,1440,3.035,1443,3.035,1624,3.242,1958,4.136,1970,5.425,2048,4.372,2049,4.372,2050,4.77,2051,4.372,2052,4.372]],["title/injectables/SpotifyStrategy.html",[82,0.023,770,2.983]],["body/injectables/SpotifyStrategy.html",[0,0.096,3,0.114,4,0.101,5,0.101,8,0.205,11,1.076,12,0.641,14,0.265,16,0.01,17,1.197,21,4.087,24,0.337,39,0.291,42,0.114,75,0.007,76,0.007,82,0.036,84,0.787,88,1.143,90,0.962,92,1.227,95,0.878,99,0.935,100,0.935,103,0.744,117,0.495,122,1.047,232,3.904,233,3.49,241,2.083,263,1.69,487,2.696,720,3.167,770,4.58,780,2.221,834,1.523,1352,1.774,1368,1.608,1466,4.098,1467,4.544,1469,3.539,1470,5.37,1471,5.423,1472,5.735,1474,5.078,1475,3.167,1476,3.167,1477,3.017,1478,3.539,1480,3.539,1482,3.539,1483,3.78,1485,3.539,1494,5.078,1497,3.338,1498,3.78,2050,5.856,2053,4.485,2054,5.098,2055,5.098,2056,5.098,2057,5.098,2058,5.098,2059,5.804,2060,5.098]],["title/classes/Status.html",[0,0.081,306,2.543]],["body/classes/Status.html",[0,0.131,2,2.22,3,0.125,4,0.111,5,0.111,8,0.225,9,1.571,10,2.402,12,0.68,14,0.225,16,0.01,17,1.168,18,1.766,19,2.61,24,0.286,32,1.273,39,0.211,40,3.842,41,2.154,42,0.156,44,3.663,49,1.698,52,2.284,75,0.008,76,0.008,249,3.036,306,4.878,990,3.168,1000,3.479,1008,3.888,1077,2.806,1087,5.608,1088,4.484,1089,4.484,1090,4.484,1092,6.411,1094,5.608,1095,5.608,1096,5.608,1098,3.668,1101,6.162,1102,6.162,2061,5.601]],["title/classes/Token.html",[0,0.081,383,1.813]],["body/classes/Token.html",[0,0.143,2,2.191,3,0.123,4,0.11,5,0.11,8,0.223,9,1.558,10,2.314,14,0.223,16,0.01,17,1.255,18,1.744,24,0.283,39,0.208,40,3.831,41,2.126,42,0.17,44,3.651,75,0.008,76,0.008,263,1.832,383,3.362,655,3.621,668,3.621,711,4.741,732,3.011,834,2.382,867,3.766,869,3.766,1723,5.152,1724,4.1,1725,5.152,1728,4.1,1729,4.1,1730,5.152,1731,5.563,2062,5.53]],["title/injectables/TwitchAuthGuard.html",[82,0.023,697,3.186]],["body/injectables/TwitchAuthGuard.html",[0,0.113,3,0.135,4,0.12,5,0.12,8,0.243,12,0.587,14,0.243,16,0.01,24,0.309,39,0.276,42,0.135,75,0.008,76,0.008,82,0.04,84,0.933,90,1.071,99,0.856,100,0.856,103,0.881,117,0.587,122,0.959,126,1.069,321,3.417,697,5.441,780,2.632,1352,1.974,1402,3.753,1404,5.095,1405,5.095,1406,5.384,1407,4.194,1408,3.956,1409,5.095,1410,3.753,1411,4.194,1412,4.194,2063,6.457,2064,7.339]],["title/injectables/TwitchService.html",[82,0.023,1959,2.983]],["body/injectables/TwitchService.html",[0,0.072,3,0.086,4,0.076,5,0.076,8,0.154,9,1.219,10,1.744,12,0.705,13,1.424,14,0.324,15,1.786,16,0.01,17,0.922,24,0.412,26,0.839,32,0.697,39,0.303,42,0.086,49,0.929,52,1.145,55,1.18,56,1.851,75,0.006,76,0.006,82,0.029,83,3.072,84,0.592,85,1.617,86,1.995,88,1.691,90,0.793,92,1.328,95,0.937,99,0.895,100,0.895,103,0.922,108,0.882,114,0.882,117,0.372,118,1.351,122,1.091,124,1.353,150,2.047,159,1.519,166,3.825,179,2.077,233,3.377,234,2.448,241,1.566,249,2.947,463,2.077,517,4.937,519,3.377,520,3.884,532,1.67,535,3.289,537,2.51,769,2.378,918,1.971,933,3.217,943,2.029,952,3.377,988,4.621,990,3.075,992,2.51,994,3.56,1352,1.462,1354,3.072,1356,3.072,1363,1.431,1364,2.222,1365,1.519,1368,1.209,1373,1.566,1376,1.566,1428,2.842,1431,2.661,1432,2.661,1433,2.661,1434,2.661,1435,2.661,1436,2.661,1437,2.381,1440,2.661,1443,2.661,1452,4.684,1453,2.842,1455,2.842,1456,2.842,1457,2.842,1458,2.842,1459,2.842,1461,2.842,1624,2.842,1647,3.069,1648,3.069,1649,4.352,1650,3.069,1652,3.069,1654,3.069,1655,3.069,1657,3.069,1658,3.069,1959,3.774,2065,3.372,2066,3.833,2067,3.833,2068,3.833,2069,4.352,2070,3.833,2071,3.833,2072,3.833,2073,3.833,2074,3.833]],["title/injectables/TwitchStrategy.html",[82,0.023,771,2.983]],["body/injectables/TwitchStrategy.html",[0,0.098,3,0.116,4,0.104,5,0.104,8,0.21,11,1.206,12,0.65,14,0.269,16,0.01,17,1.204,21,3.765,22,3.083,24,0.342,39,0.293,42,0.116,75,0.008,76,0.008,82,0.036,84,0.804,90,0.976,92,1.239,95,0.898,99,0.948,100,0.948,103,0.76,114,1.199,117,0.506,122,0.827,126,0.922,232,3.959,233,3.513,241,2.129,487,2.734,720,3.236,771,4.644,780,2.269,834,2.209,867,2.824,869,2.824,1352,1.799,1368,1.643,1466,4.156,1467,4.591,1469,3.617,1470,5.414,1474,5.13,1475,3.236,1476,3.236,1477,3.083,1478,3.617,1480,3.617,1482,3.617,1485,3.617,1494,3.617,1497,3.412,2069,6.243,2075,4.583,2076,5.21,2077,5.21,2078,5.21,2079,5.21,2080,5.21,2081,5.21,2082,7.391,2083,6.69]],["title/entities/User.html",[259,1.703,263,0.939]],["body/entities/User.html",[0,0.082,3,0.097,4,0.087,5,0.087,8,0.175,9,1.333,10,2.315,11,1.241,14,0.329,16,0.01,17,1.193,18,2.579,19,3.386,24,0.418,26,0.726,27,2.036,32,0.792,39,0.273,40,3.617,41,1.676,42,0.097,44,3.165,46,3.188,49,1.761,52,1.776,75,0.007,76,0.007,259,2.355,260,2.268,263,1.755,267,4.439,270,4.407,277,3.362,289,5.016,290,1.676,326,4.126,474,3.231,610,5.229,711,4.301,786,4.254,834,2.273,863,3.517,867,4.122,869,4.122,871,5.416,1235,3.489,1240,3.489,1439,3.222,1725,4.407,1728,4.407,1729,4.407,1730,4.407,1851,3.489,1852,3.834,2031,5.229,2084,3.834,2085,6.765,2086,4.358,2087,4.358,2088,4.358,2089,4.358,2090,4.358,2091,4.358,2092,5.944,2093,4.358,2094,5.944,2095,4.358,2096,4.358,2097,4.358,2098,4.358]],["title/modules/UserModule.html",[131,1.604,763,2.814]],["body/modules/UserModule.html",[0,0.112,3,0.133,4,0.118,5,0.118,16,0.01,39,0.307,42,0.133,75,0.008,76,0.008,117,0.577,131,2.93,133,2.871,134,3.095,135,3.362,136,3.362,137,3.095,138,4.439,139,4.439,145,4.11,146,3.362,147,3.222,149,3.222,263,1.299,453,3.893,454,2.59,763,5.658,812,4.644,2099,5.231,2100,5.231,2101,5.231,2102,5.945,2103,5.945,2104,5.231,2105,5.945]],["title/injectables/UserService.html",[82,0.023,812,2.237]],["body/injectables/UserService.html",[0,0.081,3,0.096,4,0.085,5,0.085,8,0.173,11,1.235,12,0.759,14,0.315,16,0.01,17,1.14,24,0.409,26,0.955,39,0.285,42,0.096,75,0.007,76,0.007,82,0.032,84,0.664,88,0.964,90,0.859,92,1.454,95,1.015,99,1.108,100,1.108,103,1.14,114,0.99,117,0.418,122,0.683,124,1.422,126,1.279,168,2.076,263,1.749,290,1.653,323,3.066,353,3.485,362,2.004,454,1.873,480,3.489,487,3.418,494,2.432,573,4.489,577,3.659,579,4.716,596,3.659,598,4.716,600,3.443,680,5.338,704,3.443,812,3.066,834,2.008,844,3.188,862,3.783,868,3.783,870,3.783,2104,3.783,2106,3.783,2107,5.89,2108,5.89,2109,4.3,2110,4.3,2111,5.89,2112,4.3,2113,4.3,2114,5.89,2115,4.3,2116,5.89,2117,4.3,2118,4.3,2119,4.3,2120,4.3,2121,4.3,2122,4.3,2123,4.3,2124,4.3,2125,4.3,2126,4.3,2127,4.3,2128,5.89,2129,4.3,2130,4.3]],["title/coverage.html",[2131,4.714]],["body/coverage.html",[0,0.154,1,0.944,5,0.052,6,4.237,7,4.237,14,0.105,16,0.01,32,0.473,34,0.821,43,1.411,46,1.566,57,1.54,65,1.472,73,1.54,74,0.972,75,0.005,76,0.005,82,0.048,83,1.031,85,3.131,86,1.355,87,3.938,97,0.821,104,1.257,114,0.599,137,1.355,152,3.205,153,1.93,155,2.29,163,1.704,166,1.257,191,1.807,225,2.084,228,2.29,234,1.172,259,2.876,261,2.29,262,1.411,263,0.569,294,1.93,295,2.29,306,1.54,336,2.409,364,1.617,366,1.54,368,1.54,370,1.807,378,1.704,379,1.93,383,1.098,463,1.411,465,2.29,475,2.29,480,1.257,515,3.26,519,1.134,520,1.304,525,1.93,532,3.075,535,3.675,536,1.807,572,2.29,625,2.29,655,1.704,668,1.704,680,1.704,685,1.617,688,1.93,694,1.93,697,1.93,699,1.93,701,1.93,703,1.93,764,1.807,765,1.807,766,1.807,767,1.807,768,1.807,769,0.821,770,1.807,771,1.807,786,1.411,806,2.29,812,1.355,834,1.951,912,3.938,913,2.29,931,1.704,948,2.29,979,1.355,980,2.29,988,1.472,989,3.718,1000,1.617,1031,2.084,1032,2.29,1047,2.29,1048,2.29,1053,1.93,1054,2.29,1055,2.29,1061,1.93,1062,2.29,1063,2.29,1068,1.93,1069,2.29,1070,2.29,1074,2.29,1075,2.29,1076,2.529,1087,3.26,1088,3.26,1103,1.93,1104,2.29,1105,2.29,1112,2.29,1118,1.704,1119,2.29,1124,1.54,1125,2.29,1158,1.704,1159,2.29,1164,1.472,1165,2.29,1191,1.704,1192,2.29,1197,1.472,1198,2.29,1224,2.29,1241,1.93,1242,2.29,1295,2.29,1348,1.93,1349,3.481,1350,2.084,1351,2.29,1394,4.09,1401,2.29,1402,4.055,1413,1.93,1414,2.29,1427,1.807,1465,2.29,1499,1.93,1500,3.863,1501,3.26,1521,1.93,1522,3.26,1533,1.93,1534,3.26,1543,1.93,1544,4.055,1562,1.93,1563,2.826,1573,1.93,1616,2.29,1618,1.807,1619,2.29,1659,2.29,1678,2.29,1686,2.084,1692,2.084,1712,2.084,1713,2.29,1715,2.29,1723,3.718,1724,3.718,1732,1.807,1733,2.29,1736,1.93,1737,3.863,1739,1.93,1740,1.93,1741,1.93,1742,1.93,1743,1.93,1755,2.29,1757,2.29,1834,2.29,1853,1.93,1854,2.29,1934,2.29,1958,1.807,1959,1.807,1970,2.084,1980,2.29,1989,2.29,2046,2.29,2053,2.29,2063,2.29,2065,2.29,2075,2.29,2084,2.29,2106,2.29,2131,2.084,2132,2.603,2133,2.603,2134,7.257,2135,5.672,2136,5.672,2137,7.06,2138,7.793,2139,6.156,2140,3.582,2141,4.072,2142,2.29,2143,2.603,2144,7.793,2145,6.822,2146,6.528,2147,7.793,2148,6.528,2149,2.603,2150,2.603,2151,2.603]],["title/dependencies.html",[134,2.694,2152,3.148]],["body/dependencies.html",[16,0.01,41,2.117,75,0.008,76,0.008,114,1.267,117,0.535,134,2.867,165,5.548,198,3.823,202,4.844,203,4.844,206,4.408,208,4.844,209,4.844,241,2.25,290,2.117,454,2.399,778,4.408,780,2.399,836,4.844,1098,3.606,1363,2.056,1365,2.182,1369,3.823,1477,5.133,1665,4.844,1693,4.844,1721,4.844,1744,4.408,2050,4.408,2069,4.408,2153,5.507,2154,7.584,2155,5.507,2156,5.507,2157,5.507,2158,5.507,2159,5.507,2160,5.507,2161,5.507,2162,5.507,2163,5.507,2164,5.507,2165,5.507,2166,5.507,2167,5.507,2168,5.507,2169,5.507,2170,5.507,2171,5.507,2172,5.507,2173,5.507,2174,6.93,2175,5.507,2176,5.507,2177,5.507,2178,5.507,2179,5.507,2180,5.507,2181,5.507,2182,5.507,2183,5.507,2184,5.507,2185,5.507,2186,5.507,2187,5.507,2188,5.507]],["title/miscellaneous/functions.html",[2189,2.343,2190,4.553]],["body/miscellaneous/functions.html",[8,0.279,16,0.009,75,0.009,76,0.009,137,4.357,2142,6.09,2189,4.533,2190,6.09,2191,6.923]],["title/index.html",[8,0.144,2192,3.578,2193,3.578]],["body/index.html",[4,0.097,10,1.344,16,0.01,44,3.116,75,0.007,76,0.007,147,4.119,176,4.284,210,3.611,225,3.899,480,2.351,863,2.882,1034,5.633,1085,6.614,1378,3.899,1845,4.284,2059,4.284,2131,3.899,2194,4.87,2195,4.87,2196,7.154,2197,4.87,2198,4.87,2199,4.87,2200,4.87,2201,4.87,2202,7.154,2203,4.87,2204,4.87,2205,7.6,2206,4.87,2207,8.262,2208,4.87,2209,4.87,2210,4.87,2211,4.87,2212,6.403,2213,4.87,2214,4.87,2215,4.87,2216,7.154,2217,4.87,2218,4.87,2219,4.87,2220,4.87,2221,7.6,2222,4.87,2223,4.87,2224,4.87,2225,4.87,2226,4.87,2227,7.6,2228,6.403,2229,4.87,2230,7.154,2231,4.87,2232,6.686,2233,6.403,2234,4.87,2235,4.87,2236,4.87,2237,4.87,2238,4.87,2239,4.87,2240,7.154,2241,4.87,2242,4.87,2243,4.87,2244,6.403,2245,4.284,2246,4.87,2247,4.87,2248,7.154,2249,4.87,2250,4.87,2251,4.87,2252,4.87,2253,4.87,2254,6.403,2255,4.87,2256,4.87,2257,4.87,2258,4.87,2259,4.87,2260,6.403,2261,4.87,2262,4.87,2263,4.87,2264,6.403,2265,6.403,2266,4.87,2267,4.87,2268,4.87,2269,4.87,2270,4.87,2271,4.87,2272,4.87,2273,4.87,2274,4.87,2275,4.284,2276,4.87,2277,4.87,2278,4.87,2279,4.87,2280,4.87,2281,4.87,2282,4.284]],["title/modules.html",[133,2.843]],["body/modules.html",[16,0.008,75,0.008,76,0.008,132,4.089,133,3.015,144,3.531,181,4.629,185,4.334,186,4.334,187,4.334,188,4.334,189,3.879,451,4.089,763,4.089,1265,6.586,2232,7.742,2245,6.586,2283,8.8,2284,8.8,2285,8.904]],["title/overview.html",[2286,5.18]],["body/overview.html",[2,1.381,16,0.01,75,0.006,76,0.006,83,2.986,84,0.538,97,2.435,131,1.301,132,5.157,133,1.683,134,1.814,135,1.971,136,1.971,137,1.814,138,1.971,139,1.971,140,3.066,141,3.066,142,3.066,143,3.066,144,4.585,145,2.871,146,1.971,147,1.889,154,1.814,163,3.922,181,6.271,182,3.066,183,3.066,184,3.066,185,5.985,186,6.121,187,4.158,188,4.158,189,5.572,218,3.066,234,3.394,260,1.814,364,4.681,368,4.459,378,4.935,447,3.066,448,3.066,449,3.066,450,3.066,451,5.157,519,3.283,520,3.775,685,4.681,759,3.066,760,3.066,761,3.066,762,3.066,763,4.935,764,4.158,765,4.158,766,4.158,767,4.158,768,4.158,769,2.435,770,4.158,771,4.158,812,3.923,1124,3.544,1164,3.387,1197,3.387,1288,3.066,1290,3.066,1427,4.158,1618,4.158,1732,4.158,1826,3.066,1828,3.066,1829,3.066,1954,3.066,1955,3.066,1956,3.066,1958,4.158,1959,4.158,2099,3.066,2100,3.066,2101,3.066,2286,3.066,2287,3.485,2288,3.485,2289,3.485,2290,3.485]],["title/properties.html",[9,1.16,2152,3.148]],["body/properties.html",[9,1.54,10,1.896,16,0.01,75,0.009,76,0.009,1380,5.498,2275,6.042,2282,6.042,2291,6.868,2292,6.868]],["title/miscellaneous/typealiases.html",[2189,2.343,2293,5.175]],["body/miscellaneous/typealiases.html",[8,0.277,14,0.319,16,0.009,75,0.009,76,0.009,676,5.513,1692,5.513,1696,6.977,2189,4.51,2294,6.886,2295,6.886]],["title/miscellaneous/variables.html",[2189,2.343,2296,4.553]],["body/miscellaneous/variables.html",[8,0.267,14,0.267,16,0.01,17,0.969,49,1.609,75,0.009,76,0.009,112,4.595,113,5.39,166,3.749,1686,6.216,1687,5.843,2140,5.843,2189,4.349,2296,5.843,2297,7.765,2298,6.641]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1394,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2291,"title":{},"body":{"properties.html":{}}}],["0.0.3",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["0.1.12",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["0.41.1",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":274,"title":{},"body":{"entities/Area.html":{}}}],["1",{"_index":27,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/Element.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["1.0.0",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":2167,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["10.0.0",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2163,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1382,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["19",{"_index":2290,"title":{},"body":{"overview.html":{}}}],["1db954",{"_index":2052,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["2",{"_index":62,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["2.0.0",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":308,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["201",{"_index":325,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["2022",{"_index":1381,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["20auth",{"_index":872,"title":{},"body":{"injectables/AuthService.html":{}}}],["24292e",{"_index":1442,"title":{},"body":{"injectables/GithubService.html":{}}}],["28",{"_index":1383,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["2oauth",{"_index":878,"title":{},"body":{"injectables/AuthService.html":{}}}],["3",{"_index":67,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["3.0.3",{"_index":2153,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["3h",{"_index":801,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.1",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":2161,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2160,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":327,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["401",{"_index":312,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["404",{"_index":316,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["5",{"_index":2287,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["53",{"_index":2289,"title":{},"body":{"overview.html":{}}}],["6441a5",{"_index":2071,"title":{},"body":{"injectables/TwitchService.html":{}}}],["7.4.2",{"_index":2162,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["7fba00",{"_index":1746,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["8",{"_index":1607,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["8.13.0",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2288,"title":{},"body":{"overview.html":{}}}],["9.0.2",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":1614,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["_accesstoken",{"_index":1474,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["_refreshtoken",{"_index":1470,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["abstract",{"_index":914,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{}}}],["access",{"_index":561,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/AuthService.html":{},"injectables/BaseArea.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/SpotifyService.html":{}}}],["access_token",{"_index":732,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"classes/LoginDto.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{}}}],["access_token.key",{"_index":1375,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["access_type",{"_index":1663,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["accessors",{"_index":1033,"title":{},"body":{"injectables/ConfigsService.html":{}}}],["accesstoken",{"_index":720,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["account",{"_index":1439,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/SpotifyService.html":{},"entities/User.html":{}}}],["actif",{"_index":1102,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/Status.html":{}}}],["action",{"_index":1,"title":{"classes/Action.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"modules/ActionRegistryModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"classes/AreaDto.html":{},"injectables/AreaService.html":{},"injectables/BaseArea.html":{},"classes/CreateAreaDto.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["action(element",{"_index":68,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["action.deleteaction(this.userid",{"_index":965,"title":{},"body":{"injectables/BaseArea.html":{}}}],["action.description",{"_index":255,"title":{},"body":{"injectables/AppService.html":{}}}],["action.execaction(this.userid",{"_index":970,"title":{},"body":{"injectables/BaseArea.html":{}}}],["action.name",{"_index":254,"title":{},"body":{"injectables/AppService.html":{}}}],["action.needcronjob",{"_index":967,"title":{},"body":{"injectables/BaseArea.html":{}}}],["action.service",{"_index":119,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaService.html":{},"injectables/BaseService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["action.service.ts",{"_index":913,"title":{},"body":{"injectables/BaseAction.html":{},"coverage.html":{}}}],["action.service.ts:16",{"_index":928,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action.service.ts:30",{"_index":929,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action.service.ts:34",{"_index":930,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action.service.ts:35",{"_index":926,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action.service.ts:36",{"_index":925,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action.service.ts:37",{"_index":923,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action.service.ts:6",{"_index":921,"title":{},"body":{"injectables/BaseAction.html":{}}}],["action/reaction",{"_index":35,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/Element.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["action/reaction)'})@column",{"_index":1237,"title":{},"body":{"entities/Element.html":{}}}],["action1",{"_index":29,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["action1.registerelement",{"_index":1448,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["action2",{"_index":1447,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["action2.registerelement",{"_index":1449,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["action3",{"_index":1629,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["action3.registerelement",{"_index":1634,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["actiondto",{"_index":73,"title":{"classes/ActionDto.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["actionid",{"_index":47,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/BaseArea.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["actionregistry",{"_index":83,"title":{"injectables/ActionRegistry.html":{}},"body":{"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"overview.html":{}}}],["actionregistrymodule",{"_index":132,"title":{"modules/ActionRegistryModule.html":{}},"body":{"modules/ActionRegistryModule.html":{},"modules/AreaModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":89,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"injectables/BaseService.html":{},"controllers/ElementController.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{}}}],["actions'})@apiresponse({status",{"_index":1258,"title":{},"body":{"controllers/ElementController.html":{}}}],["actionsp",{"_index":1921,"title":{},"body":{"controllers/ServiceController.html":{}}}],["actionw",{"_index":562,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["active",{"_index":50,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/AreaService.html":{},"injectables/BaseArea.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["active/desactive",{"_index":435,"title":{},"body":{"controllers/AreaController.html":{}}}],["active/desactive)'})@apiresponse({status",{"_index":307,"title":{},"body":{"controllers/AreaController.html":{}}}],["addlabelids",{"_index":1568,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["address",{"_index":1813,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["again",{"_index":1600,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["aliases",{"_index":2294,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":1438,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{}}}],["allparams",{"_index":976,"title":{},"body":{"injectables/BaseArea.html":{}}}],["already",{"_index":859,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":2270,"title":{},"body":{"index.html":{}}}],["andwhere('element.type",{"_index":1346,"title":{},"body":{"injectables/ElementService.html":{}}}],["api",{"_index":1379,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["apibearerauth",{"_index":373,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{}}}],["apibearerauth('access",{"_index":382,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{}}}],["apibody",{"_index":374,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["apiexcludeendpoint",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServiceController.html":{}}}],["apioperation",{"_index":375,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["apiproperty",{"_index":40,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"classes/Status.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["apiproperty({description",{"_index":1730,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["apiproperty({example",{"_index":19,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"classes/Status.html":{},"entities/User.html":{}}}],["apiproperty({type",{"_index":445,"title":{},"body":{"classes/AreaDto.html":{}}}],["apiresponse",{"_index":376,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["apitags",{"_index":377,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["apitags('areas",{"_index":381,"title":{},"body":{"controllers/AreaController.html":{}}}],["apitags('authentication",{"_index":706,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('elements",{"_index":1272,"title":{},"body":{"controllers/ElementController.html":{}}}],["apitags('services",{"_index":1902,"title":{},"body":{"controllers/ServiceController.html":{}}}],["app.controller",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":777,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":153,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2244,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1508,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["application/vnd.github+json",{"_index":1377,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["application/x",{"_index":1456,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["applications",{"_index":2201,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":181,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":163,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":46,"title":{"entities/Area.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"classes/CreateAreaDto.html":{},"entities/Element.html":{},"injectables/GmailReactionSendEmail.html":{},"modules/OrmModule.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"entities/User.html":{},"coverage.html":{}}}],["area'})@apiresponse({status",{"_index":324,"title":{},"body":{"controllers/AreaController.html":{}}}],["area.action",{"_index":611,"title":{},"body":{"injectables/AreaService.html":{},"entities/Element.html":{}}}],["area.actionid",{"_index":546,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area.active",{"_index":545,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{}}}],["area.color",{"_index":612,"title":{},"body":{"injectables/AreaService.html":{}}}],["area.controller",{"_index":455,"title":{},"body":{"modules/AreaModule.html":{}}}],["area.description",{"_index":543,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{}}}],["area.dto",{"_index":363,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaService.html":{}}}],["area.dto.ts",{"_index":7,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["area.dto.ts:105",{"_index":81,"title":{},"body":{"classes/ActionDto.html":{}}}],["area.dto.ts:11",{"_index":1042,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:110",{"_index":28,"title":{},"body":{"classes/Action.html":{}}}],["area.dto.ts:113",{"_index":30,"title":{},"body":{"classes/Action.html":{}}}],["area.dto.ts:119",{"_index":25,"title":{},"body":{"classes/Action.html":{}}}],["area.dto.ts:125",{"_index":36,"title":{},"body":{"classes/Action.html":{}}}],["area.dto.ts:131",{"_index":33,"title":{},"body":{"classes/Action.html":{}}}],["area.dto.ts:137",{"_index":38,"title":{},"body":{"classes/Action.html":{}}}],["area.dto.ts:142",{"_index":1820,"title":{},"body":{"classes/Reaction.html":{}}}],["area.dto.ts:148",{"_index":1822,"title":{},"body":{"classes/Reaction.html":{}}}],["area.dto.ts:151",{"_index":1821,"title":{},"body":{"classes/Reaction.html":{}}}],["area.dto.ts:157",{"_index":1819,"title":{},"body":{"classes/Reaction.html":{}}}],["area.dto.ts:17",{"_index":1039,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:20",{"_index":1045,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:23",{"_index":1040,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:25",{"_index":1043,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:26",{"_index":1046,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:27",{"_index":1041,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:35",{"_index":1825,"title":{},"body":{"classes/ReactionDto.html":{}}}],["area.dto.ts:38",{"_index":1824,"title":{},"body":{"classes/ReactionDto.html":{}}}],["area.dto.ts:44",{"_index":1823,"title":{},"body":{"classes/ReactionDto.html":{}}}],["area.dto.ts:49",{"_index":443,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:5",{"_index":1044,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:55",{"_index":442,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:58",{"_index":444,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:61",{"_index":440,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:67",{"_index":439,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:73",{"_index":446,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:76",{"_index":441,"title":{},"body":{"classes/AreaDto.html":{}}}],["area.dto.ts:81",{"_index":78,"title":{},"body":{"classes/ActionDto.html":{}}}],["area.dto.ts:87",{"_index":77,"title":{},"body":{"classes/ActionDto.html":{}}}],["area.dto.ts:93",{"_index":80,"title":{},"body":{"classes/ActionDto.html":{}}}],["area.dto.ts:99",{"_index":79,"title":{},"body":{"classes/ActionDto.html":{}}}],["area.id",{"_index":466,"title":{},"body":{"entities/AreaReaction.html":{}}}],["area.last_executed",{"_index":608,"title":{},"body":{"injectables/AreaService.html":{}}}],["area.name",{"_index":542,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{}}}],["area.parameter",{"_index":544,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{}}}],["area.service",{"_index":365,"title":{},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{}}}],["area.service.ts",{"_index":948,"title":{},"body":{"injectables/BaseArea.html":{},"coverage.html":{}}}],["area.service.ts:10",{"_index":963,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:22",{"_index":955,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:27",{"_index":960,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:31",{"_index":954,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:35",{"_index":961,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:40",{"_index":962,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:46",{"_index":956,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:51",{"_index":959,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.service.ts:8",{"_index":953,"title":{},"body":{"injectables/BaseArea.html":{}}}],["area.user",{"_index":610,"title":{},"body":{"injectables/AreaService.html":{},"entities/User.html":{}}}],["area.userid",{"_index":396,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaRegistry.html":{}}}],["area1",{"_index":45,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["area[1].execaction",{"_index":568,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area[1].execreactions(area[0",{"_index":571,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area[1].isactive",{"_index":559,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area[1].name",{"_index":567,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area[1].needcronjob",{"_index":558,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area[1].storenewtoken",{"_index":563,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["area_action",{"_index":66,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["area_reaction",{"_index":58,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"injectables/AreaReactionService.html":{},"classes/CreateAreaDto.html":{},"entities/Element.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["area_reaction.area",{"_index":509,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["area_reaction.element",{"_index":508,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["area_reaction.order",{"_index":506,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["area_reaction.parameter_reaction",{"_index":504,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["areaaction",{"_index":419,"title":{},"body":{"controllers/AreaController.html":{}}}],["areaaction.userid",{"_index":421,"title":{},"body":{"controllers/AreaController.html":{}}}],["areacontroller",{"_index":294,"title":{"controllers/AreaController.html":{}},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{},"coverage.html":{}}}],["areacreate",{"_index":406,"title":{},"body":{"controllers/AreaController.html":{}}}],["areacreate.id",{"_index":415,"title":{},"body":{"controllers/AreaController.html":{}}}],["areadto",{"_index":65,"title":{"classes/AreaDto.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["areaid",{"_index":414,"title":{},"body":{"controllers/AreaController.html":{},"injectables/BaseArea.html":{},"classes/CreateAreaReactionDto.html":{}}}],["areamodule",{"_index":185,"title":{"modules/AreaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules.html":{},"overview.html":{}}}],["areareaction",{"_index":262,"title":{"entities/AreaReaction.html":{}},"body":{"entities/Area.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/BaseArea.html":{},"entities/Element.html":{},"modules/OrmModule.html":{},"coverage.html":{}}}],["areareaction.area",{"_index":271,"title":{},"body":{"entities/Area.html":{}}}],["areareaction.dto",{"_index":372,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{}}}],["areareaction.dto.ts",{"_index":1048,"title":{},"body":{"classes/CreateAreaReactionDto.html":{},"coverage.html":{}}}],["areareaction.dto.ts:2",{"_index":1052,"title":{},"body":{"classes/CreateAreaReactionDto.html":{}}}],["areareaction.dto.ts:3",{"_index":1051,"title":{},"body":{"classes/CreateAreaReactionDto.html":{}}}],["areareaction.dto.ts:4",{"_index":1050,"title":{},"body":{"classes/CreateAreaReactionDto.html":{}}}],["areareaction.dto.ts:5",{"_index":1049,"title":{},"body":{"classes/CreateAreaReactionDto.html":{}}}],["areareaction.element",{"_index":616,"title":{},"body":{"injectables/AreaService.html":{},"entities/Element.html":{}}}],["areareaction.element.service",{"_index":617,"title":{},"body":{"injectables/AreaService.html":{}}}],["areareaction.parameter_reaction",{"_index":977,"title":{},"body":{"injectables/BaseArea.html":{}}}],["areareactions",{"_index":972,"title":{},"body":{"injectables/BaseArea.html":{}}}],["areareactionservice",{"_index":368,"title":{"injectables/AreaReactionService.html":{}},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"coverage.html":{},"overview.html":{}}}],["arearegistry",{"_index":378,"title":{"injectables/AreaRegistry.html":{}},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"coverage.html":{},"overview.html":{}}}],["arearepository",{"_index":482,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["areas",{"_index":297,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaRegistry.html":{}}}],["areas/entities/area.entity",{"_index":474,"title":{},"body":{"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"entities/Element.html":{},"entities/User.html":{}}}],["areaservice",{"_index":364,"title":{"injectables/AreaService.html":{}},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"coverage.html":{},"overview.html":{}}}],["areasreactions/areareaction.service",{"_index":369,"title":{},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{}}}],["areasreactions/dto/create",{"_index":371,"title":{},"body":{"controllers/AreaController.html":{}}}],["areasreactions/entities/areareaction.entity",{"_index":293,"title":{},"body":{"entities/Area.html":{},"modules/AreaModule.html":{},"entities/Element.html":{}}}],["areasreactionsrepository",{"_index":484,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["areasrepository",{"_index":581,"title":{},"body":{"injectables/AreaService.html":{}}}],["argon2",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2(id|i|d",{"_index":900,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.hash(user.email",{"_index":873,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.hash(user.password",{"_index":866,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.verify(user.password",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2hashregex",{"_index":899,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2hashregex.test(user.password",{"_index":902,"title":{},"body":{"injectables/AuthService.html":{}}}],["asc",{"_index":512,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/GithubActionIssueAssigned.html":{}}}],["assets/services/github.png",{"_index":1441,"title":{},"body":{"injectables/GithubService.html":{}}}],["assets/services/google.png",{"_index":1626,"title":{},"body":{"injectables/GoogleService.html":{}}}],["assets/services/microsoft.png",{"_index":1745,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["assets/services/spotify.png",{"_index":2051,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["assets/services/twitch.png",{"_index":2070,"title":{},"body":{"injectables/TwitchService.html":{}}}],["assigned",{"_index":1370,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubService.html":{}}}],["assigned.ts",{"_index":1351,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"coverage.html":{}}}],["assigned.ts:10",{"_index":1355,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["associated",{"_index":1873,"title":{},"body":{"controllers/ServiceController.html":{}}}],["async",{"_index":92,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.controller",{"_index":775,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":1402,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":1407,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["auth.service",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.controller",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":191,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1846,"title":{},"body":{"entities/Service.html":{}}}],["authentication",{"_index":314,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["authgithubcallback",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["authgithubcallback(@req",{"_index":745,"title":{},"body":{"controllers/AuthController.html":{}}}],["authgithubcallback(req",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1410,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["authguard('github",{"_index":1403,"title":{},"body":{"injectables/GithubAuthGuard.html":{}}}],["authguard('google",{"_index":1617,"title":{},"body":{"injectables/GoogleAuthGuard.html":{}}}],["authguard('jwt",{"_index":1679,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1714,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authguard('microsoft",{"_index":1756,"title":{},"body":{"injectables/MsAuthGuard.html":{}}}],["authguard('spotify",{"_index":2047,"title":{},"body":{"injectables/SpotifyAuthGuard.html":{}}}],["authguard('twitch",{"_index":2064,"title":{},"body":{"injectables/TwitchAuthGuard.html":{}}}],["authmodule",{"_index":186,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2275,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authority",{"_index":1763,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["authorization",{"_index":1374,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["authorizationparams",{"_index":1660,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["authservice",{"_index":685,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authspotifycallback",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["authspotifycallback(@req",{"_index":749,"title":{},"body":{"controllers/AuthController.html":{}}}],["authspotifycallback(req",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{}}}],["authtwitchcallback",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["authtwitchcallback(@req",{"_index":741,"title":{},"body":{"controllers/AuthController.html":{}}}],["authtwitchcallback(req",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["available",{"_index":1265,"title":{},"body":{"controllers/ElementController.html":{},"modules.html":{}}}],["await",{"_index":124,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":2271,"title":{},"body":{"index.html":{}}}],["bad",{"_index":328,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":356,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AuthService.html":{}}}],["badrequestexception('email",{"_index":858,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":881,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('password",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('service",{"_index":886,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('unauthenticated",{"_index":846,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`no",{"_index":395,"title":{},"body":{"controllers/AreaController.html":{}}}],["base",{"_index":118,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["base.config",{"_index":1016,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["base64encodedemail",{"_index":1609,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["base_config",{"_index":1015,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["baseaction",{"_index":104,"title":{"injectables/BaseAction.html":{}},"body":{"injectables/ActionRegistry.html":{},"injectables/BaseAction.html":{},"injectables/BaseService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"coverage.html":{}}}],["baseaction:100",{"_index":1782,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{}}}],["baseaction:101",{"_index":1503,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{}}}],["baseaction:103",{"_index":1357,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["baseaction:104",{"_index":1536,"title":{},"body":{"injectables/GmailActionEmailSent.html":{}}}],["baseaction:105",{"_index":1524,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{}}}],["baseaction:16",{"_index":1361,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["baseaction:28",{"_index":1360,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["baseaction:30",{"_index":1362,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["baseaction:32",{"_index":1359,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["baseaction:36",{"_index":1358,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["basearea",{"_index":525,"title":{"injectables/BaseArea.html":{}},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"coverage.html":{}}}],["basereaction",{"_index":979,"title":{"injectables/BaseReaction.html":{}},"body":{"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"coverage.html":{}}}],["basereaction:15",{"_index":1549,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["basereaction:25",{"_index":1548,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["basereaction:27",{"_index":1581,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["basereaction:29",{"_index":1547,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["basereaction:31",{"_index":1580,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["basereaction:33",{"_index":1546,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["basereaction:35",{"_index":1579,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["baseservice",{"_index":988,"title":{"injectables/BaseService.html":{}},"body":{"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"coverage.html":{}}}],["baseservice:12",{"_index":1434,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["baseservice:13",{"_index":1432,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["baseservice:14",{"_index":1433,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["baseservice:15",{"_index":1435,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["baseservice:20",{"_index":1431,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["baseservice:30",{"_index":2049,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["baseservice:35",{"_index":2068,"title":{},"body":{"injectables/TwitchService.html":{}}}],["baseservice:55",{"_index":1430,"title":{},"body":{"injectables/GithubService.html":{}}}],["baseservice:9",{"_index":1436,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["baseservice:97",{"_index":1623,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["basic",{"_index":864,"title":{},"body":{"injectables/AuthService.html":{}}}],["baudelin",{"_index":1729,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["bearer",{"_index":1507,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["bigint",{"_index":1985,"title":{},"body":{"entities/ServiceToken.html":{}}}],["board",{"_index":2263,"title":{},"body":{"index.html":{}}}],["body",{"_index":333,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"controllers/ServiceController.html":{}}}],["body.actionid",{"_index":402,"title":{},"body":{"controllers/AreaController.html":{}}}],["body.active",{"_index":404,"title":{},"body":{"controllers/AreaController.html":{}}}],["body.color",{"_index":405,"title":{},"body":{"controllers/AreaController.html":{}}}],["body.description",{"_index":401,"title":{},"body":{"controllers/AreaController.html":{}}}],["body.name",{"_index":400,"title":{},"body":{"controllers/AreaController.html":{}}}],["body.parameter",{"_index":403,"title":{},"body":{"controllers/AreaController.html":{}}}],["body.reactions",{"_index":409,"title":{},"body":{"controllers/AreaController.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"classes/AreaDto.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateUserDto.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"entities/Service.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"injectables/TwitchService.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2285,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2283,"title":{},"body":{"modules.html":{}}}],["buffer.from(email",{"_index":1610,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["building",{"_index":2197,"title":{},"body":{"index.html":{}}}],["callbackurl",{"_index":1482,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["canactivate",{"_index":1680,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1684,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["card",{"_index":71,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["catch",{"_index":1558,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["change",{"_index":20,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AppController.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["changestatus",{"_index":298,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaService.html":{},"injectables/BaseArea.html":{}}}],["changestatus(@param('id",{"_index":436,"title":{},"body":{"controllers/AreaController.html":{}}}],["changestatus(id",{"_index":304,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaService.html":{}}}],["channel",{"_index":2235,"title":{},"body":{"index.html":{}}}],["charset=\"utf",{"_index":1606,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["check",{"_index":2221,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"classes/Status.html":{},"classes/Token.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"classes/Status.html":{},"classes/Token.html":{},"overview.html":{}}}],["classes/action",{"_index":86,"title":{},"body":{"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"modules/ServiceModule.html":{},"injectables/TwitchService.html":{},"coverage.html":{}}}],["classes/area",{"_index":379,"title":{},"body":{"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"coverage.html":{}}}],["classes/base",{"_index":912,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"coverage.html":{}}}],["classes/github",{"_index":1349,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["classes/gmail",{"_index":1500,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["classes/google.service",{"_index":1963,"title":{},"body":{"modules/ServiceModule.html":{}}}],["classes/google.service.ts",{"_index":1619,"title":{},"body":{"injectables/GoogleService.html":{},"coverage.html":{}}}],["classes/google.service.ts:20",{"_index":1621,"title":{},"body":{"injectables/GoogleService.html":{}}}],["classes/google.service.ts:41",{"_index":1622,"title":{},"body":{"injectables/GoogleService.html":{}}}],["classes/microsoft.service",{"_index":1966,"title":{},"body":{"modules/ServiceModule.html":{}}}],["classes/microsoft.service.ts",{"_index":1733,"title":{},"body":{"injectables/MicrosoftService.html":{},"coverage.html":{}}}],["classes/microsoft.service.ts:20",{"_index":1734,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["classes/microsoft.service.ts:41",{"_index":1735,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["classes/outlook",{"_index":1737,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"coverage.html":{}}}],["classes/reaction",{"_index":463,"title":{},"body":{"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"injectables/TwitchService.html":{},"coverage.html":{}}}],["classes/service",{"_index":536,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"coverage.html":{}}}],["classes/spotify",{"_index":1970,"title":{},"body":{"modules/ServiceModule.html":{},"injectables/SpotifyService.html":{},"coverage.html":{}}}],["classes/twitch.service",{"_index":1967,"title":{},"body":{"modules/ServiceModule.html":{}}}],["classes/twitch.service.ts",{"_index":2065,"title":{},"body":{"injectables/TwitchService.html":{},"coverage.html":{}}}],["classes/twitch.service.ts:12",{"_index":2066,"title":{},"body":{"injectables/TwitchService.html":{}}}],["classes/twitch.service.ts:31",{"_index":2067,"title":{},"body":{"injectables/TwitchService.html":{}}}],["client",{"_index":172,"title":{},"body":{"controllers/AppController.html":{}}}],["client_id",{"_index":1650,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["client_secret",{"_index":1652,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["clientid",{"_index":1478,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["clientsecret",{"_index":1480,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["cluster_actionregistrymodule",{"_index":140,"title":{},"body":{"modules/ActionRegistryModule.html":{},"overview.html":{}}}],["cluster_actionregistrymodule_exports",{"_index":142,"title":{},"body":{"modules/ActionRegistryModule.html":{},"overview.html":{}}}],["cluster_actionregistrymodule_imports",{"_index":141,"title":{},"body":{"modules/ActionRegistryModule.html":{},"overview.html":{}}}],["cluster_actionregistrymodule_providers",{"_index":143,"title":{},"body":{"modules/ActionRegistryModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_areamodule",{"_index":447,"title":{},"body":{"modules/AreaModule.html":{},"overview.html":{}}}],["cluster_areamodule_exports",{"_index":448,"title":{},"body":{"modules/AreaModule.html":{},"overview.html":{}}}],["cluster_areamodule_imports",{"_index":449,"title":{},"body":{"modules/AreaModule.html":{},"overview.html":{}}}],["cluster_areamodule_providers",{"_index":450,"title":{},"body":{"modules/AreaModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":759,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":761,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":760,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":762,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_elementmodule",{"_index":1288,"title":{},"body":{"modules/ElementModule.html":{},"overview.html":{}}}],["cluster_elementmodule_exports",{"_index":1290,"title":{},"body":{"modules/ElementModule.html":{},"overview.html":{}}}],["cluster_elementmodule_providers",{"_index":1289,"title":{},"body":{"modules/ElementModule.html":{}}}],["cluster_reactionregistrymodule",{"_index":1826,"title":{},"body":{"modules/ReactionRegistryModule.html":{},"overview.html":{}}}],["cluster_reactionregistrymodule_exports",{"_index":1828,"title":{},"body":{"modules/ReactionRegistryModule.html":{},"overview.html":{}}}],["cluster_reactionregistrymodule_imports",{"_index":1827,"title":{},"body":{"modules/ReactionRegistryModule.html":{}}}],["cluster_reactionregistrymodule_providers",{"_index":1829,"title":{},"body":{"modules/ReactionRegistryModule.html":{},"overview.html":{}}}],["cluster_servicemodule",{"_index":1954,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_exports",{"_index":1955,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_imports",{"_index":1957,"title":{},"body":{"modules/ServiceModule.html":{}}}],["cluster_servicemodule_providers",{"_index":1956,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2099,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2100,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2101,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["color",{"_index":56,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["column",{"_index":267,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"entities/Service.html":{},"entities/ServiceToken.html":{},"entities/User.html":{}}}],["column('json",{"_index":472,"title":{},"body":{"entities/AreaReaction.html":{}}}],["column({default",{"_index":273,"title":{},"body":{"entities/Area.html":{}}}],["column({type",{"_index":279,"title":{},"body":{"entities/Area.html":{},"entities/ServiceToken.html":{}}}],["come",{"_index":2224,"title":{},"body":{"index.html":{}}}],["common/constants/metadata",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["config/config.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["config/orm.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":776,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigsModule.html":{}}}],["configmodule.forroot",{"_index":1028,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["configservice",{"_index":233,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/ConfigsService.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{}}}],["configservice.get('app.back_url",{"_index":1483,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{}}}],["configservice.get('app.secret",{"_index":798,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('db.database",{"_index":1780,"title":{},"body":{"modules/OrmModule.html":{}}}],["configservice.get('db.host",{"_index":1774,"title":{},"body":{"modules/OrmModule.html":{}}}],["configservice.get('db.password",{"_index":1778,"title":{},"body":{"modules/OrmModule.html":{}}}],["configservice.get('db.port",{"_index":1776,"title":{},"body":{"modules/OrmModule.html":{}}}],["configservice.get('db.username",{"_index":1777,"title":{},"body":{"modules/OrmModule.html":{}}}],["configservice.get('github.client_id",{"_index":1479,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["configservice.get('github.client_secret",{"_index":1481,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["configservice.get('github.redirect_uri",{"_index":1484,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["configservice.get('google.callbackurl",{"_index":1668,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["configservice.get('google.clientid",{"_index":1666,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["configservice.get('google.clientsecret",{"_index":1667,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["configservice.get('ms.client_id",{"_index":1760,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["configservice.get('ms.client_secret",{"_index":1761,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["configservice.get('ms.redirect_uri",{"_index":1762,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["configservice.get('spotify.client_id",{"_index":2056,"title":{},"body":{"injectables/SpotifyStrategy.html":{}}}],["configservice.get('spotify.client_secret",{"_index":2057,"title":{},"body":{"injectables/SpotifyStrategy.html":{}}}],["configservice.get('spotify.redirect_uri",{"_index":2058,"title":{},"body":{"injectables/SpotifyStrategy.html":{}}}],["configservice.get('twitch.callbackurl",{"_index":2080,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["configservice.get('twitch.clientid",{"_index":2078,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["configservice.get('twitch.clientsecret",{"_index":2079,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["configsmodule",{"_index":187,"title":{"modules/ConfigsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigsModule.html":{},"modules.html":{},"overview.html":{}}}],["configsservice",{"_index":1031,"title":{"injectables/ConfigsService.html":{}},"body":{"injectables/ConfigsService.html":{},"coverage.html":{}}}],["connected",{"_index":1880,"title":{},"body":{"controllers/ServiceController.html":{}}}],["connexion",{"_index":1731,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{}}}],["consent",{"_index":1671,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["console.error('google",{"_index":1560,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{}}}],["console.error('microsoft",{"_index":1801,"title":{},"body":{"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["console.log('checking",{"_index":564,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["console.log('google",{"_index":1571,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{}}}],["console.log('microsoft",{"_index":1818,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["console.log('new",{"_index":903,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('refreshing",{"_index":560,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{}}}],["console.log('res",{"_index":569,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["console.log('triggering",{"_index":570,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["const",{"_index":122,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":95,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(areaservice",{"_index":518,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["constructor(areasreactionsrepository",{"_index":479,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["constructor(areasrepository",{"_index":578,"title":{},"body":{"injectables/AreaService.html":{}}}],["constructor(authservice",{"_index":1716,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":232,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConfigsService.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["constructor(dictdatagithubrepository",{"_index":1128,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["constructor(dictemailsgmailrepository",{"_index":1166,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["constructor(dictemailsoutlookrepository",{"_index":1199,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["constructor(elementservice",{"_index":96,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{}}}],["constructor(elementsrepository",{"_index":1304,"title":{},"body":{"injectables/ElementService.html":{}}}],["constructor(name",{"_index":920,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/ConfigsService.html":{},"controllers/ElementController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["constructor(reflector",{"_index":1681,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(serviceid",{"_index":1353,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["constructor(servicemanager",{"_index":1974,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["constructor(servicesrepository",{"_index":1935,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["constructor(servicestokensrepository",{"_index":1996,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["constructor(servicetokenservice",{"_index":1428,"title":{},"body":{"injectables/GithubService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["constructor(userservice",{"_index":1620,"title":{},"body":{"injectables/GoogleService.html":{}}}],["constructor(usersrepository",{"_index":2109,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["content",{"_index":1376,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/TwitchService.html":{}}}],["contenttype",{"_index":1809,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["context",{"_index":1408,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["context.getclass",{"_index":1690,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1689,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["continue",{"_index":1709,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["controller",{"_index":152,"title":{"controllers/AppController.html":{},"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{},"coverage.html":{}}}],["controller('areas",{"_index":384,"title":{},"body":{"controllers/AreaController.html":{}}}],["controller('auth",{"_index":705,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('services",{"_index":1903,"title":{},"body":{"controllers/ServiceController.html":{}}}],["controllers",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AreaController.html":{},"modules/AreaModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"overview.html":{}}}],["cookie",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["courses",{"_index":2242,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2131,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":323,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":1905,"title":{},"body":{"controllers/ServiceController.html":{}}}],["create(createareadto",{"_index":583,"title":{},"body":{"injectables/AreaService.html":{}}}],["create(createareareactiondto",{"_index":485,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["create(createdictemailsgmaildto",{"_index":1169,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["create(createdictemailsoutlookdto",{"_index":1202,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["create(createdictissuesgithubdto",{"_index":1131,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["create(createelementdto",{"_index":1308,"title":{},"body":{"injectables/ElementService.html":{}}}],["create(createservicedto",{"_index":1864,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{}}}],["create(createservicetokendto",{"_index":1999,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["create(createuserdto",{"_index":2111,"title":{},"body":{"injectables/UserService.html":{}}}],["createareadto",{"_index":43,"title":{"classes/CreateAreaDto.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/AreaService.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["createareadto.actionid",{"_index":601,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.active",{"_index":607,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.color",{"_index":613,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.description",{"_index":605,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.last_executed",{"_index":609,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.name",{"_index":604,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.parameter",{"_index":606,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareadto.userid",{"_index":603,"title":{},"body":{"injectables/AreaService.html":{}}}],["createareareactiondto",{"_index":370,"title":{"classes/CreateAreaReactionDto.html":{}},"body":{"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"classes/CreateAreaReactionDto.html":{},"coverage.html":{}}}],["createareareactiondto.areaid",{"_index":502,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["createareareactiondto.elementid",{"_index":500,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["createareareactiondto.order",{"_index":507,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["createareareactiondto.parameter_reaction",{"_index":505,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["created",{"_index":326,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"entities/User.html":{}}}],["createdictdatagithubdto",{"_index":1053,"title":{"classes/CreateDictDataGithubDto.html":{}},"body":{"classes/CreateDictDataGithubDto.html":{},"injectables/DictDataGithubService.html":{},"coverage.html":{}}}],["createdictemailsgmaildto",{"_index":1061,"title":{"classes/CreateDictEmailsGmailDto.html":{}},"body":{"classes/CreateDictEmailsGmailDto.html":{},"injectables/DictEmailsGmailService.html":{},"coverage.html":{}}}],["createdictemailsgmaildto.elementname",{"_index":1185,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["createdictemailsgmaildto.lastemailid",{"_index":1183,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["createdictemailsgmaildto.userid",{"_index":1181,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["createdictemailsoutlookdto",{"_index":1068,"title":{"classes/CreateDictEmailsOutlookDto.html":{}},"body":{"classes/CreateDictEmailsOutlookDto.html":{},"injectables/DictEmailsOutlookService.html":{},"coverage.html":{}}}],["createdictemailsoutlookdto.elementname",{"_index":1218,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["createdictemailsoutlookdto.lastemailid",{"_index":1216,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["createdictemailsoutlookdto.userid",{"_index":1214,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["createdictissuesgithubdto",{"_index":1133,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["createdictissuesgithubdto.elementname",{"_index":1152,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["createdictissuesgithubdto.lastdataid",{"_index":1150,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["createdictissuesgithubdto.userid",{"_index":1148,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["createdwithservice",{"_index":871,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["createelementdto",{"_index":931,"title":{"classes/CreateElementDto.html":{}},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"classes/CreateElementDto.html":{},"injectables/ElementService.html":{},"coverage.html":{}}}],["createelementdto.description",{"_index":1332,"title":{},"body":{"injectables/ElementService.html":{}}}],["createelementdto.name",{"_index":1331,"title":{},"body":{"injectables/ElementService.html":{}}}],["createelementdto.serviceid",{"_index":1329,"title":{},"body":{"injectables/ElementService.html":{}}}],["createelementdto.type",{"_index":1333,"title":{},"body":{"injectables/ElementService.html":{}}}],["createelementdto.url",{"_index":1334,"title":{},"body":{"injectables/ElementService.html":{}}}],["createnewarea",{"_index":299,"title":{},"body":{"controllers/AreaController.html":{}}}],["createnewarea(@body",{"_index":398,"title":{},"body":{"controllers/AreaController.html":{}}}],["createnewarea(body",{"_index":320,"title":{},"body":{"controllers/AreaController.html":{}}}],["createquerybuilder('element",{"_index":1342,"title":{},"body":{"injectables/ElementService.html":{}}}],["createrawemail",{"_index":1574,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["createrawemail(to",{"_index":1576,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["createservicedto",{"_index":1000,"title":{"classes/CreateServiceDto.html":{}},"body":{"injectables/BaseService.html":{},"classes/CreateServiceDto.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"classes/Status.html":{},"coverage.html":{}}}],["createservicedto.description",{"_index":1945,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["createservicedto.front_data",{"_index":1946,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["createservicedto.key_url",{"_index":1947,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["createservicedto.name",{"_index":1944,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["createservicedto.need_token",{"_index":1948,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["createservicetokendto",{"_index":1103,"title":{"classes/CreateServiceTokenDto.html":{}},"body":{"classes/CreateServiceTokenDto.html":{},"injectables/ServiceTokenService.html":{},"coverage.html":{}}}],["createservicetokendto.key",{"_index":2024,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["createservicetokendto.refresh_key",{"_index":2026,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["createservicetokendto.serviceid",{"_index":2021,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["createservicetokendto.time_expire",{"_index":2030,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["createservicetokendto.time_received",{"_index":2028,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["createservicetokendto.userid",{"_index":2022,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["createtoken",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(user",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":680,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.createdwithservice",{"_index":2125,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.email",{"_index":2122,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.lastname",{"_index":2121,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.password",{"_index":2123,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.surname",{"_index":2120,"title":{},"body":{"injectables/UserService.html":{}}}],["creation",{"_index":329,"title":{},"body":{"controllers/AreaController.html":{}}}],["cron",{"_index":533,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":522,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["cronexpression",{"_index":534,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["cronjob",{"_index":565,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseAction.html":{}}}],["current_time",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["data",{"_index":1803,"title":{},"body":{"injectables/OutlookReactionFlagEmail.html":{}}}],["database",{"_index":1779,"title":{},"body":{"modules/OrmModule.html":{}}}],["database.config",{"_index":1018,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["database_config",{"_index":1017,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["date",{"_index":54,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["date().gettime",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["date.now",{"_index":893,"title":{},"body":{"injectables/AuthService.html":{}}}],["de",{"_index":905,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decodedtoken",{"_index":722,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["decodedtoken.email",{"_index":847,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AppController.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaRegistry.html":{},"controllers/AuthController.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"entities/ServiceToken.html":{},"classes/Status.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["deeper",{"_index":2237,"title":{},"body":{"index.html":{}}}],["default",{"_index":112,"title":{},"body":{"injectables/ActionRegistry.html":{},"entities/Area.html":{},"injectables/AreaRegistry.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["definir",{"_index":1092,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["definir'})@column",{"_index":1837,"title":{},"body":{"entities/Service.html":{}}}],["delete",{"_index":336,"title":{},"body":{"controllers/AreaController.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"controllers/ServiceController.html":{},"coverage.html":{}}}],["delete(':id",{"_index":429,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ServiceController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":335,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ServiceController.html":{}}}],["deleteaction",{"_index":915,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["deleteaction(userid",{"_index":922,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["deletearea",{"_index":949,"title":{},"body":{"injectables/BaseArea.html":{}}}],["deleteareabyid",{"_index":300,"title":{},"body":{"controllers/AreaController.html":{}}}],["deleteareabyid(@param('id",{"_index":430,"title":{},"body":{"controllers/AreaController.html":{}}}],["deleteareabyid(id",{"_index":334,"title":{},"body":{"controllers/AreaController.html":{}}}],["deleted",{"_index":337,"title":{},"body":{"controllers/AreaController.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"controllers/ServiceController.html":{}}}],["deleted.ts",{"_index":1501,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/OutlookActionEmailDeleted.html":{},"coverage.html":{}}}],["deleted.ts:10",{"_index":1502,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/OutlookActionEmailDeleted.html":{}}}],["deleteurl",{"_index":1555,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{}}}],["deleting",{"_index":1561,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{}}}],["delimiter",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1418,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["description",{"_index":10,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"controllers/AuthController.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchService.html":{},"entities/User.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":2209,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2249,"title":{},"body":{"index.html":{}}}],["dictdatagithub",{"_index":1118,"title":{"entities/DictDataGithub.html":{}},"body":{"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"modules/OrmModule.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["dictdatagithub.dto",{"_index":1143,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["dictdatagithub.dto.ts",{"_index":1055,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{},"coverage.html":{}}}],["dictdatagithub.dto.ts:2",{"_index":1060,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{}}}],["dictdatagithub.dto.ts:3",{"_index":1059,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{}}}],["dictdatagithub.dto.ts:4",{"_index":1058,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{}}}],["dictdatagithub/dictdatagithub.service",{"_index":1367,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"modules/ServiceModule.html":{}}}],["dictdatagithub/entities/dictdatagithub.entity",{"_index":1971,"title":{},"body":{"modules/ServiceModule.html":{}}}],["dictdatagithubrepository",{"_index":1130,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["dictdatagithubservice",{"_index":1124,"title":{"injectables/DictDataGithubService.html":{}},"body":{"injectables/DictDataGithubService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"modules/ServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["dictemailsgmail",{"_index":1158,"title":{"entities/DictEmailsGmail.html":{}},"body":{"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"modules/OrmModule.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["dictemailsgmail.dto",{"_index":1177,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["dictemailsgmail.dto.ts",{"_index":1063,"title":{},"body":{"classes/CreateDictEmailsGmailDto.html":{},"coverage.html":{}}}],["dictemailsgmail.dto.ts:2",{"_index":1067,"title":{},"body":{"classes/CreateDictEmailsGmailDto.html":{}}}],["dictemailsgmail.dto.ts:3",{"_index":1066,"title":{},"body":{"classes/CreateDictEmailsGmailDto.html":{}}}],["dictemailsgmail.dto.ts:4",{"_index":1065,"title":{},"body":{"classes/CreateDictEmailsGmailDto.html":{}}}],["dictemailsgmail.elementname",{"_index":1184,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["dictemailsgmail.lastemailid",{"_index":1182,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["dictemailsgmail.userid",{"_index":1180,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["dictemailsgmail/dictemailsgmail.service",{"_index":1965,"title":{},"body":{"modules/ServiceModule.html":{}}}],["dictemailsgmail/entities/dictemailsgmail.entity",{"_index":1964,"title":{},"body":{"modules/ServiceModule.html":{}}}],["dictemailsgmailrepository",{"_index":1168,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["dictemailsgmailservice",{"_index":1164,"title":{"injectables/DictEmailsGmailService.html":{}},"body":{"injectables/DictEmailsGmailService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"modules/ServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["dictemailsoutlook",{"_index":1191,"title":{"entities/DictEmailsOutlook.html":{}},"body":{"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"modules/OrmModule.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["dictemailsoutlook.dto",{"_index":1210,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["dictemailsoutlook.dto.ts",{"_index":1070,"title":{},"body":{"classes/CreateDictEmailsOutlookDto.html":{},"coverage.html":{}}}],["dictemailsoutlook.dto.ts:2",{"_index":1073,"title":{},"body":{"classes/CreateDictEmailsOutlookDto.html":{}}}],["dictemailsoutlook.dto.ts:3",{"_index":1072,"title":{},"body":{"classes/CreateDictEmailsOutlookDto.html":{}}}],["dictemailsoutlook.dto.ts:4",{"_index":1071,"title":{},"body":{"classes/CreateDictEmailsOutlookDto.html":{}}}],["dictemailsoutlook.elementname",{"_index":1217,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["dictemailsoutlook.lastemailid",{"_index":1215,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["dictemailsoutlook.userid",{"_index":1213,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["dictemailsoutlook/dictemailsoutlook.service",{"_index":1783,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailSent.html":{},"modules/ServiceModule.html":{}}}],["dictemailsoutlook/entities/dictemailsoutlook.entity",{"_index":1968,"title":{},"body":{"modules/ServiceModule.html":{}}}],["dictemailsoutlookrepository",{"_index":1201,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["dictemailsoutlookservice",{"_index":1197,"title":{"injectables/DictEmailsOutlookService.html":{}},"body":{"injectables/DictEmailsOutlookService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"modules/ServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["dictissuesgithub",{"_index":1146,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["dictissuesgithub.elementname",{"_index":1151,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["dictissuesgithub.lastdataid",{"_index":1149,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["dictissuesgithub.userid",{"_index":1147,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["direction",{"_index":1386,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["disconnect",{"_index":1868,"title":{},"body":{"controllers/ServiceController.html":{}}}],["disconnectservicebyid",{"_index":1990,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["disconnectservicebyid(userid",{"_index":2001,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["disconnecttoservice",{"_index":1855,"title":{},"body":{"controllers/ServiceController.html":{}}}],["disconnecttoservice(@param('id",{"_index":1932,"title":{},"body":{"controllers/ServiceController.html":{}}}],["disconnecttoservice(id",{"_index":1867,"title":{},"body":{"controllers/ServiceController.html":{}}}],["discord",{"_index":2234,"title":{},"body":{"index.html":{}}}],["display_name",{"_index":2082,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["displayname",{"_index":1493,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/MsStrategy.html":{}}}],["displayname.split",{"_index":1496,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/MsStrategy.html":{}}}],["dive",{"_index":2236,"title":{},"body":{"index.html":{}}}],["docs",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["done",{"_index":1471,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{}}}],["done(null",{"_index":1498,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{}}}],["dto",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto.ts",{"_index":1724,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"coverage.html":{}}}],["dto.ts:13",{"_index":1830,"title":{},"body":{"classes/RegisterDto.html":{}}}],["dto.ts:16",{"_index":1832,"title":{},"body":{"classes/RegisterDto.html":{}}}],["dto.ts:19",{"_index":1833,"title":{},"body":{"classes/RegisterDto.html":{}}}],["dto.ts:22",{"_index":1831,"title":{},"body":{"classes/RegisterDto.html":{}}}],["dto.ts:27",{"_index":2062,"title":{},"body":{"classes/Token.html":{}}}],["dto.ts:5",{"_index":1726,"title":{},"body":{"classes/LoginDto.html":{}}}],["dto.ts:8",{"_index":1727,"title":{},"body":{"classes/LoginDto.html":{}}}],["dto/auth",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":362,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":2218,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":2198,"title":{},"body":{"index.html":{}}}],["element",{"_index":34,"title":{"entities/Element.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"entities/Area.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"modules/AuthModule.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"modules/OrmModule.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["element'})@apiresponse({status",{"_index":1249,"title":{},"body":{"controllers/ElementController.html":{}}}],["element'})@column",{"_index":1227,"title":{},"body":{"entities/Element.html":{}}}],["element'})@column({unique",{"_index":1231,"title":{},"body":{"entities/Element.html":{}}}],["element'})@primarygeneratedcolumn",{"_index":1229,"title":{},"body":{"entities/Element.html":{}}}],["element.controller",{"_index":1293,"title":{},"body":{"modules/ElementModule.html":{}}}],["element.description",{"_index":938,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/ElementService.html":{}}}],["element.dto",{"_index":932,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/ElementService.html":{}}}],["element.dto.ts",{"_index":1075,"title":{},"body":{"classes/CreateElementDto.html":{},"coverage.html":{}}}],["element.dto.ts:14",{"_index":1078,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:20",{"_index":1082,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:23",{"_index":1081,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:29",{"_index":1086,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:35",{"_index":1079,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.dto.ts:8",{"_index":1080,"title":{},"body":{"classes/CreateElementDto.html":{}}}],["element.id",{"_index":265,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{}}}],["element.initindb(this.elementservice",{"_index":125,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{}}}],["element.module",{"_index":151,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/ReactionRegistryModule.html":{}}}],["element.module.ts",{"_index":1292,"title":{},"body":{"modules/ElementModule.html":{}}}],["element.name",{"_index":936,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/ElementService.html":{}}}],["element.service",{"_index":120,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaReactionService.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/ReactionRegistry.html":{},"entities/Service.html":{}}}],["element.serviceid",{"_index":942,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{}}}],["element.type",{"_index":940,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/ElementService.html":{}}}],["element.url",{"_index":944,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/ElementService.html":{}}}],["elementcontroller",{"_index":1241,"title":{"controllers/ElementController.html":{}},"body":{"controllers/ElementController.html":{},"modules/ElementModule.html":{},"coverage.html":{}}}],["elementid",{"_index":64,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateElementDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["elementmodule",{"_index":144,"title":{"modules/ElementModule.html":{}},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["elementname",{"_index":1056,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["elementrepository",{"_index":481,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{}}}],["elements",{"_index":1254,"title":{},"body":{"controllers/ElementController.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{}}}],["elements'})@apiresponse({status",{"_index":1253,"title":{},"body":{"controllers/ElementController.html":{}}}],["elements/action",{"_index":460,"title":{},"body":{"modules/AreaModule.html":{},"injectables/BaseService.html":{},"injectables/GithubService.html":{},"modules/ServiceModule.html":{}}}],["elements/element.module",{"_index":459,"title":{},"body":{"modules/AreaModule.html":{},"modules/ServiceModule.html":{}}}],["elements/element.service",{"_index":1901,"title":{},"body":{"controllers/ServiceController.html":{}}}],["elements/entities/element.entity",{"_index":292,"title":{},"body":{"entities/Area.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{}}}],["elements/reaction",{"_index":462,"title":{},"body":{"modules/AreaModule.html":{},"modules/ServiceModule.html":{}}}],["elementservice",{"_index":97,"title":{"injectables/ElementService.html":{}},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"coverage.html":{},"overview.html":{}}}],["elementservice.create(element",{"_index":946,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{}}}],["elementservice.findbyname(this.name",{"_index":935,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{}}}],["elementsrepository",{"_index":1307,"title":{},"body":{"injectables/ElementService.html":{}}}],["email",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateElementDto.html":{},"classes/CreateUserDto.html":{},"entities/Element.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/RegisterDto.html":{},"injectables/SpotifyStrategy.html":{},"classes/Token.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["email.ts",{"_index":1544,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"coverage.html":{}}}],["email.ts:10",{"_index":1575,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["email.ts:9",{"_index":1545,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["email.ts:92",{"_index":1578,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["emailaddress",{"_index":1812,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["emaildata",{"_index":1601,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["emaildata['message']['body']['content",{"_index":1816,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["emaildata['message']['subject",{"_index":1815,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["emaildata['message']['torecipients'][0]['emailaddress']['address",{"_index":1817,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["emailparams",{"_index":1584,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["emailparams['content",{"_index":1590,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["emailparams['correspondent",{"_index":1592,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["emailparams['email_id",{"_index":1594,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["emailparams['subject",{"_index":1587,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["emails",{"_index":1512,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GoogleStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["emails.length",{"_index":1515,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["emails[0].bodypreview",{"_index":1529,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["emails[0].id",{"_index":1516,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["emails[0].sender.emailaddress.address",{"_index":1531,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["emails[0].subject",{"_index":1527,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["emails[0].value",{"_index":1674,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["emitter",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["enterprise",{"_index":2253,"title":{},"body":{"index.html":{}}}],["entities",{"_index":260,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"modules/OrmModule.html":{},"entities/Service.html":{},"entities/ServiceToken.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/area.entity",{"_index":456,"title":{},"body":{"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{}}}],["entities/areareaction.entity",{"_index":495,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["entities/dictdatagithub.entity",{"_index":1144,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["entities/dictemailsgmail.entity",{"_index":1178,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["entities/dictemailsoutlook.entity",{"_index":1211,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["entities/element.entity",{"_index":1270,"title":{},"body":{"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{}}}],["entities/service.entity",{"_index":1899,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{}}}],["entities/servicetoken.entity",{"_index":2018,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["entities/user.entity",{"_index":2104,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":259,"title":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"entities/Service.html":{},"entities/ServiceToken.html":{},"entities/User.html":{}},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"entities/Service.html":{},"entities/ServiceToken.html":{},"entities/User.html":{},"coverage.html":{}}}],["eq",{"_index":1788,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["error",{"_index":1559,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["error('element",{"_index":503,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/ServiceTokenService.html":{}}}],["error('service",{"_index":1330,"title":{},"body":{"injectables/ElementService.html":{}}}],["eventemittermodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":44,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"classes/Status.html":{},"classes/Token.html":{},"entities/User.html":{},"index.html":{}}}],["execaction",{"_index":916,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["execaction(userid",{"_index":924,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["execreaction",{"_index":981,"title":{},"body":{"injectables/BaseReaction.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["execreaction(userid",{"_index":983,"title":{},"body":{"injectables/BaseReaction.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["execreactions",{"_index":950,"title":{},"body":{"injectables/BaseArea.html":{}}}],["execreactions(areaid",{"_index":957,"title":{},"body":{"injectables/BaseArea.html":{}}}],["execut",{"_index":516,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["execution",{"_index":61,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["executioncontext",{"_index":1406,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["existindtoken",{"_index":895,"title":{},"body":{"injectables/AuthService.html":{}}}],["existing_issue_id",{"_index":1399,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["existingareas",{"_index":538,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["existingelements",{"_index":934,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{}}}],["existingservice",{"_index":1003,"title":{},"body":{"injectables/BaseService.html":{}}}],["existingservice.id",{"_index":1013,"title":{},"body":{"injectables/BaseService.html":{}}}],["existinguser",{"_index":857,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser.id",{"_index":889,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":860,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":2239,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":800,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":42,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["extends",{"_index":1352,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{}}}],["extractjwt",{"_index":1698,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(req",{"_index":1702,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":1699,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":397,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["failed'})@apibody({type",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{}}}],["failed'})@apiresponse({status",{"_index":330,"title":{},"body":{"controllers/AreaController.html":{}}}],["false",{"_index":127,"title":{},"body":{"injectables/ActionRegistry.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/JwtStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["fbbc04",{"_index":1627,"title":{},"body":{"injectables/GoogleService.html":{}}}],["few",{"_index":2222,"title":{},"body":{"index.html":{}}}],["ffffff",{"_index":70,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":1786,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["findactions",{"_index":1296,"title":{},"body":{"injectables/ElementService.html":{}}}],["findactionsinservicebyid",{"_index":1297,"title":{},"body":{"injectables/ElementService.html":{}}}],["findactionsinservicebyid(id",{"_index":1311,"title":{},"body":{"injectables/ElementService.html":{}}}],["findall",{"_index":573,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/ServiceManager.html":{},"injectables/UserService.html":{}}}],["findall(option",{"_index":585,"title":{},"body":{"injectables/AreaService.html":{}}}],["findallbyuser",{"_index":574,"title":{},"body":{"injectables/AreaService.html":{}}}],["findallbyuser(userid",{"_index":590,"title":{},"body":{"injectables/AreaService.html":{}}}],["findbyaction",{"_index":476,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["findbyaction(id",{"_index":488,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["findbyactioninfo",{"_index":477,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["findbyactioninfo(id",{"_index":490,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["findbyname",{"_index":1298,"title":{},"body":{"injectables/ElementService.html":{},"injectables/ServiceManager.html":{}}}],["findbyname(name",{"_index":1314,"title":{},"body":{"injectables/ElementService.html":{},"injectables/ServiceManager.html":{}}}],["findbyuserid",{"_index":1126,"title":{},"body":{"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{}}}],["findbyuserid(userid",{"_index":1135,"title":{},"body":{"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{}}}],["findbyuseridelementname",{"_index":1127,"title":{},"body":{"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{}}}],["findbyuseridelementname(userid",{"_index":1137,"title":{},"body":{"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{}}}],["findmanyoptions",{"_index":586,"title":{},"body":{"injectables/AreaService.html":{}}}],["findone",{"_index":575,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{}}}],["findone(@param('id",{"_index":1276,"title":{},"body":{"controllers/ElementController.html":{}}}],["findone(id",{"_index":592,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/ServiceManager.html":{}}}],["findone(options",{"_index":2003,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["findoneemail",{"_index":2107,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneemail(email",{"_index":2114,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneid",{"_index":2108,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneid(id",{"_index":2116,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneinfo",{"_index":576,"title":{},"body":{"injectables/AreaService.html":{}}}],["findoneinfo(id",{"_index":594,"title":{},"body":{"injectables/AreaService.html":{}}}],["findreactions",{"_index":1299,"title":{},"body":{"injectables/ElementService.html":{}}}],["findreactionsinservicebyid",{"_index":1300,"title":{},"body":{"injectables/ElementService.html":{}}}],["findreactionsinservicebyid(id",{"_index":1318,"title":{},"body":{"injectables/ElementService.html":{}}}],["finduseractions",{"_index":1301,"title":{},"body":{"injectables/ElementService.html":{}}}],["finduseractions(userid",{"_index":1320,"title":{},"body":{"injectables/ElementService.html":{}}}],["finduserreactions",{"_index":1302,"title":{},"body":{"injectables/ElementService.html":{}}}],["finduserreactions(userid",{"_index":1322,"title":{},"body":{"injectables/ElementService.html":{}}}],["firstvaluefrom",{"_index":1364,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/TwitchService.html":{}}}],["firstvaluefrom(this.httpservice.delete(deleteurl",{"_index":1800,"title":{},"body":{"injectables/OutlookReactionDeleteEmail.html":{}}}],["firstvaluefrom(this.httpservice.patch(pinurl",{"_index":1806,"title":{},"body":{"injectables/OutlookReactionFlagEmail.html":{}}}],["flag",{"_index":1563,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookReactionFlagEmail.html":{},"coverage.html":{}}}],["flagged",{"_index":1805,"title":{},"body":{"injectables/OutlookReactionFlagEmail.html":{}}}],["flagging",{"_index":1572,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["flagstatus",{"_index":1804,"title":{},"body":{"injectables/OutlookReactionFlagEmail.html":{}}}],["folder",{"_index":1551,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["follow",{"_index":2257,"title":{},"body":{"index.html":{}}}],["form",{"_index":1458,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["formdata",{"_index":1647,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["formdata.append",{"_index":1649,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["formdata.append('grant_type",{"_index":1654,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["formdata.append('refresh_token",{"_index":1655,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["formdata.append('scope",{"_index":1656,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["formdata.tostring",{"_index":1657,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["found",{"_index":318,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceTokenService.html":{}}}],["found'})@apibody({type",{"_index":354,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["found'})@apiresponse({type",{"_index":343,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["framework",{"_index":2196,"title":{},"body":{"index.html":{}}}],["front",{"_index":72,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["front_data",{"_index":990,"title":{},"body":{"injectables/BaseService.html":{},"classes/CreateServiceDto.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"entities/Service.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"injectables/TwitchService.html":{}}}],["front_url",{"_index":707,"title":{},"body":{"controllers/AuthController.html":{}}}],["full",{"_index":2252,"title":{},"body":{"index.html":{}}}],["function",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2190,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":391,"title":{},"body":{"controllers/AreaController.html":{}}}],["get(':id')@apioperation({summary",{"_index":340,"title":{},"body":{"controllers/AreaController.html":{}}}],["get(':id/actions",{"_index":1926,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/actions')@public()@apioperation({summary",{"_index":1872,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/elements",{"_index":1919,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/elements')@public()@apioperation({summary",{"_index":1883,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/reactions",{"_index":1928,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/reactions')@public()@apioperation({summary",{"_index":1886,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/status",{"_index":1930,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':id/status')@apioperation({summary",{"_index":1893,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':param",{"_index":1913,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get(':param')@public()@apioperation({summary",{"_index":1889,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get('about.json",{"_index":169,"title":{},"body":{"controllers/AppController.html":{}}}],["get('actions",{"_index":1278,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('actions')@public()@apioperation({summary",{"_index":1257,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('actions/me",{"_index":1280,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('actions/me')@apioperation({summary",{"_index":1264,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('connected",{"_index":1910,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get('connected')@apioperation({summary",{"_index":1879,"title":{},"body":{"controllers/ServiceController.html":{}}}],["get('elements",{"_index":1273,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('elements')@public()@apioperation({summary",{"_index":1252,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('elements/:id",{"_index":1275,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('elements/:id')@public()@apioperation({summary",{"_index":1248,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('github/callback",{"_index":744,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('google/callback",{"_index":718,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('microsoft/callback",{"_index":736,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('profile",{"_index":750,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('reactions",{"_index":1283,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('reactions')@public()@apioperation({summary",{"_index":1260,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('reactions/me",{"_index":1285,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('reactions/me')@apioperation({summary",{"_index":1268,"title":{},"body":{"controllers/ElementController.html":{}}}],["get('spotify/callback",{"_index":748,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('twitch/callback",{"_index":740,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apioperation({summary",{"_index":346,"title":{},"body":{"controllers/AreaController.html":{}}}],["get()@public()@apioperation({summary",{"_index":1875,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getaboutjson",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["getaboutjson(@req",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["getaboutjson(req",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["getactions",{"_index":229,"title":{},"body":{"injectables/AppService.html":{}}}],["getactions(serviceid",{"_index":236,"title":{},"body":{"injectables/AppService.html":{}}}],["getactionsinservicebyid",{"_index":1856,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getactionsinservicebyid(@param('id",{"_index":1927,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getactionsinservicebyid(id",{"_index":1871,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getall",{"_index":1243,"title":{},"body":{"controllers/ElementController.html":{}}}],["getallactions",{"_index":1244,"title":{},"body":{"controllers/ElementController.html":{}}}],["getallconnectedservices",{"_index":1991,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["getallconnectedservices(userid",{"_index":2006,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["getallreactions",{"_index":1245,"title":{},"body":{"controllers/ElementController.html":{}}}],["getallservices",{"_index":1857,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getareabyid",{"_index":301,"title":{},"body":{"controllers/AreaController.html":{}}}],["getareabyid(@param('id",{"_index":392,"title":{},"body":{"controllers/AreaController.html":{}}}],["getareabyid(id",{"_index":339,"title":{},"body":{"controllers/AreaController.html":{}}}],["getauthenticateoptions",{"_index":1404,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["getauthenticateoptions(context",{"_index":1405,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["getconnectedservices",{"_index":1858,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getconnectedservices(@req",{"_index":1911,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getconnectedservices(request",{"_index":1878,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getelement",{"_index":91,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["getelement(id",{"_index":101,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["getelementinservicebyid",{"_index":1859,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getelementinservicebyid(@param('id",{"_index":1920,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getelementinservicebyid(id",{"_index":1882,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getmany",{"_index":1347,"title":{},"body":{"injectables/ElementService.html":{}}}],["getmyactions",{"_index":1246,"title":{},"body":{"controllers/ElementController.html":{}}}],["getmyactions(@req",{"_index":1281,"title":{},"body":{"controllers/ElementController.html":{}}}],["getmyactions(request",{"_index":1263,"title":{},"body":{"controllers/ElementController.html":{}}}],["getmyreactions",{"_index":1247,"title":{},"body":{"controllers/ElementController.html":{}}}],["getmyreactions(@req",{"_index":1286,"title":{},"body":{"controllers/ElementController.html":{}}}],["getmyreactions(request",{"_index":1267,"title":{},"body":{"controllers/ElementController.html":{}}}],["getprofile",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getprofile(@req",{"_index":751,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(request",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["getreactions",{"_index":230,"title":{},"body":{"injectables/AppService.html":{}}}],["getreactions(serviceid",{"_index":238,"title":{},"body":{"injectables/AppService.html":{}}}],["getreactionsinservicebyid",{"_index":1860,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getreactionsinservicebyid(@param('id",{"_index":1929,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getreactionsinservicebyid(id",{"_index":1885,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getrefreshtokenserviceuser",{"_index":1992,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["getrefreshtokenserviceuser(userid",{"_index":2008,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["getservicebyid",{"_index":1861,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getservicebyid(@param('param",{"_index":1914,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getservicebyid(param",{"_index":1888,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getservicebyname",{"_index":1303,"title":{},"body":{"injectables/ElementService.html":{}}}],["getservicebyname(name",{"_index":1324,"title":{},"body":{"injectables/ElementService.html":{}}}],["getserviceid",{"_index":917,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["getservices",{"_index":231,"title":{},"body":{"injectables/AppService.html":{}}}],["getstatusservicebyid",{"_index":1862,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getstatusservicebyid(id",{"_index":1892,"title":{},"body":{"controllers/ServiceController.html":{}}}],["gettest",{"_index":1036,"title":{},"body":{"injectables/ConfigsService.html":{}}}],["getting",{"_index":2192,"title":{"index.html":{}},"body":{}}],["getuserarea",{"_index":302,"title":{},"body":{"controllers/AreaController.html":{}}}],["getuserarea(@req",{"_index":388,"title":{},"body":{"controllers/AreaController.html":{}}}],["getuserarea(request",{"_index":345,"title":{},"body":{"controllers/AreaController.html":{}}}],["github",{"_index":1369,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"dependencies.html":{}}}],["github.config",{"_index":1025,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["github2",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["githubactionissueassigned",{"_index":1348,"title":{"injectables/GithubActionIssueAssigned.html":{}},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubService.html":{},"coverage.html":{}}}],["githubauthguard",{"_index":699,"title":{"injectables/GithubAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/GithubAuthGuard.html":{},"coverage.html":{}}}],["githubconfig",{"_index":1024,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["githubrepositorystarred",{"_index":1413,"title":{"injectables/GithubRepositoryStarred.html":{}},"body":{"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"coverage.html":{}}}],["githubservice",{"_index":1427,"title":{"injectables/GithubService.html":{}},"body":{"injectables/GithubService.html":{},"modules/ServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["githubstrategy",{"_index":764,"title":{"injectables/GithubStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GithubStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":802,"title":{},"body":{"modules/AuthModule.html":{}}}],["gmail",{"_index":1077,"title":{},"body":{"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["gmailactionemaildeleted",{"_index":1499,"title":{"injectables/GmailActionEmailDeleted.html":{}},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["gmailactionemailreceived",{"_index":1521,"title":{"injectables/GmailActionEmailReceived.html":{}},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["gmailactionemailsent",{"_index":1533,"title":{"injectables/GmailActionEmailSent.html":{}},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["gmailreactiondeleteemail",{"_index":1543,"title":{"injectables/GmailReactionDeleteEmail.html":{}},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["gmailreactionflagemail",{"_index":1562,"title":{"injectables/GmailReactionFlagEmail.html":{}},"body":{"injectables/GmailReactionFlagEmail.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["gmailreactionsendemail",{"_index":1573,"title":{"injectables/GmailReactionSendEmail.html":{}},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"coverage.html":{}}}],["google",{"_index":1098,"title":{},"body":{"classes/CreateServiceDto.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"entities/Service.html":{},"classes/Status.html":{},"dependencies.html":{}}}],["google.config",{"_index":1020,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["google_config",{"_index":1019,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["googleauthcallback",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleauthcallback(@req",{"_index":719,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleauthcallback(req",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleauthguard",{"_index":688,"title":{"injectables/GoogleAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/GoogleAuthGuard.html":{},"coverage.html":{}}}],["googlecalendar",{"_index":1090,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["googleservice",{"_index":1618,"title":{"injectables/GoogleService.html":{}},"body":{"injectables/GoogleService.html":{},"modules/ServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["googlestrategy",{"_index":765,"title":{"injectables/GoogleStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["graph",{"_index":2245,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":2267,"title":{},"body":{"index.html":{}}}],["guards/github",{"_index":700,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/google",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.guard",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["guards/ms",{"_index":695,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/spotify",{"_index":702,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/twitch",{"_index":698,"title":{},"body":{"controllers/AuthController.html":{}}}],["hands",{"_index":2238,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2225,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":2094,"title":{},"body":{"entities/User.html":{}}}],["hashedpassword",{"_index":865,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":1373,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/TwitchService.html":{}}}],["hello",{"_index":1598,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["help",{"_index":2250,"title":{},"body":{"index.html":{}}}],["here",{"_index":2273,"title":{},"body":{"index.html":{}}}],["hi",{"_index":1599,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["host",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"modules/OrmModule.html":{}}}],["html",{"_index":1810,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["httpcode",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":709,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":1962,"title":{},"body":{"modules/ServiceModule.html":{}}}],["https://api.github.com/issues",{"_index":1371,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["https://api.github.com/user/starred",{"_index":1417,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["https://github.com/login/oauth/access_token?client_id=${this.configservice.get('github.client_id')}&client_secret=${this.configservice.get('github.client_secret')}&grant_type=refresh_token&refresh_token=${refresh_token",{"_index":1454,"title":{},"body":{"injectables/GithubService.html":{}}}],["https://gmail.googleapis.com/gmail/v1/users/me/messages",{"_index":1506,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{}}}],["https://gmail.googleapis.com/gmail/v1/users/me/messages/send",{"_index":1583,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["https://google/send_mail",{"_index":1083,"title":{},"body":{"classes/CreateElementDto.html":{},"entities/Element.html":{}}}],["https://graph.microsoft.com/v1.0/me/mailfolders/deleteditems/messages",{"_index":1785,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{}}}],["https://graph.microsoft.com/v1.0/me/mailfolders/inbox/messages",{"_index":37,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["https://graph.microsoft.com/v1.0/me/mailfolders/sentitems/messages",{"_index":1796,"title":{},"body":{"injectables/OutlookActionEmailSent.html":{}}}],["https://graph.microsoft.com/v1.0/me/messages",{"_index":1798,"title":{},"body":{"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["https://graph.microsoft.com/v1.0/me/sendmail",{"_index":1807,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["https://id.twitch.tv/oauth2/token",{"_index":2072,"title":{},"body":{"injectables/TwitchService.html":{}}}],["https://login.microsoftonline.com/common",{"_index":1764,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["https://login.microsoftonline.com/common/oauth2/v2.0/token",{"_index":1748,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["https://mail.google.com",{"_index":1669,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["https://nestjs.com",{"_index":2279,"title":{},"body":{"index.html":{}}}],["https://oauth2.googleapis.com/token",{"_index":1642,"title":{},"body":{"injectables/GoogleService.html":{}}}],["https://www.googleapis.com/auth/gmail.modify",{"_index":1645,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{}}}],["https://www.googleapis.com/auth/gmail.readonly",{"_index":1644,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{}}}],["https://www.googleapis.com/auth/gmail.send",{"_index":1646,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{}}}],["httpservice",{"_index":1354,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["httpstatus",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["icon",{"_index":1440,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["ignoreerrors",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreexpiration",{"_index":1704,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":537,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1564,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ConfigsModule.html":{},"modules/ElementModule.html":{},"modules/OrmModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{}}}],["in.'})@apiresponse({status",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{}}}],["in:inbox",{"_index":1553,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{}}}],["in:sent",{"_index":1538,"title":{},"body":{"injectables/GmailActionEmailSent.html":{}}}],["in:trash",{"_index":1511,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{}}}],["inbox",{"_index":1505,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["inbox_content",{"_index":1528,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["inbox_correspondent",{"_index":1530,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["inbox_email_id",{"_index":1532,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["inbox_subject",{"_index":1526,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["includegrantedscopes",{"_index":1672,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":341,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["informations",{"_index":1250,"title":{},"body":{"controllers/ElementController.html":{}}}],["inherited",{"_index":1356,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["initindb",{"_index":918,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["initindb(elementservice",{"_index":927,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["initindb(services",{"_index":992,"title":{},"body":{"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["inject",{"_index":803,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrmModule.html":{}}}],["injectable",{"_index":82,"title":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":494,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["injectrepository(area",{"_index":498,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{}}}],["injectrepository(areareaction",{"_index":496,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["injectrepository(dictdatagithub",{"_index":1145,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["injectrepository(dictemailsgmail",{"_index":1179,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["injectrepository(dictemailsoutlook",{"_index":1212,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["injectrepository(element",{"_index":497,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/ElementService.html":{}}}],["injectrepository(service",{"_index":1327,"title":{},"body":{"injectables/ElementService.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{}}}],["injectrepository(servicetoken",{"_index":2019,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["injectrepository(user",{"_index":600,"title":{},"body":{"injectables/AreaService.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["innerjoin('element.service",{"_index":1343,"title":{},"body":{"injectables/ElementService.html":{}}}],["innerjoin('service.servicetoken",{"_index":1344,"title":{},"body":{"injectables/ElementService.html":{}}}],["installcompile",{"_index":2208,"title":{},"body":{"index.html":{}}}],["interact",{"_index":2246,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["is:unread",{"_index":1525,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{}}}],["is_public_key",{"_index":1686,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":951,"title":{},"body":{"injectables/BaseArea.html":{}}}],["isargon2hash",{"_index":901,"title":{},"body":{"injectables/AuthService.html":{}}}],["isconnected",{"_index":1993,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["isconnected(userid",{"_index":2010,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["isglobal",{"_index":1030,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["ismatch",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnan(number(param",{"_index":1915,"title":{},"body":{"controllers/ServiceController.html":{}}}],["ispublic",{"_index":1687,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isread",{"_index":1787,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["issue",{"_index":1350,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubService.html":{},"coverage.html":{}}}],["issueassignedid",{"_index":1395,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["issues",{"_index":1389,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["issues.length",{"_index":1393,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["issues[0].id.tostring",{"_index":1396,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["job",{"_index":2260,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2262,"title":{},"body":{"index.html":{}}}],["join",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"index.html":{}}}],["join('\\n",{"_index":1608,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["join(__dirname",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["jour",{"_index":909,"title":{},"body":{"injectables/AuthService.html":{}}}],["json",{"_index":283,"title":{},"body":{"entities/Area.html":{}}}],["jsonwebtoken",{"_index":2168,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":1693,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":366,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ElementController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ServiceController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1703,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":774,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":795,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":1696,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtservice",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":766,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":2276,"title":{},"body":{"index.html":{}}}],["key",{"_index":888,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateServiceTokenDto.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{}}}],["key.includes('content",{"_index":1589,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["key.includes('correspondent",{"_index":1591,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["key.includes('email_id",{"_index":1593,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["key.includes('subject",{"_index":1586,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["key_url",{"_index":1008,"title":{},"body":{"injectables/BaseService.html":{},"classes/CreateServiceDto.html":{},"entities/Service.html":{},"injectables/ServiceManager.html":{},"classes/Status.html":{}}}],["know",{"_index":1894,"title":{},"body":{"controllers/ServiceController.html":{}}}],["l\\'utilisateur",{"_index":911,"title":{},"body":{"injectables/AuthService.html":{}}}],["last",{"_index":1550,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["last_executed",{"_index":53,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["lastdataid",{"_index":1057,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["lastemailid",{"_index":1064,"title":{},"body":{"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["lastemailid.lastemailid",{"_index":1517,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["lastissueid",{"_index":1391,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["lastissueid.lastdataid",{"_index":1397,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{}}}],["lastname",{"_index":869,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"classes/LoginDto.html":{},"injectables/MsStrategy.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{}}}],["laststarredrepositoryid",{"_index":1420,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["laststarredrepositoryid.lastdataid",{"_index":1424,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["le",{"_index":910,"title":{},"body":{"injectables/AuthService.html":{}}}],["learn",{"_index":2229,"title":{},"body":{"index.html":{}}}],["legend",{"_index":135,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":2282,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2265,"title":{},"body":{"index.html":{}}}],["linked",{"_index":31,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/Element.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["linkedin",{"_index":2258,"title":{},"body":{"index.html":{}}}],["list",{"_index":348,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["literal",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1029,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["local",{"_index":1721,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":1712,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":767,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":1708,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logged",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":712,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginbody",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["login?results=failed",{"_index":726,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginbody",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":655,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"coverage.html":{}}}],["logindto})@apiresponse({type",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":2259,"title":{},"body":{"index.html":{}}}],["loop",{"_index":2255,"title":{},"body":{"index.html":{}}}],["mail.readwrite",{"_index":1750,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{}}}],["mail.send",{"_index":1751,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{}}}],["manager.service",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{}}}],["manager.service.ts",{"_index":1934,"title":{},"body":{"injectables/ServiceManager.html":{},"coverage.html":{}}}],["manager.service.ts:14",{"_index":1938,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manager.service.ts:25",{"_index":1943,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manager.service.ts:29",{"_index":1939,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manager.service.ts:33",{"_index":1941,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manager.service.ts:37",{"_index":1940,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manager.service.ts:41",{"_index":1942,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manager.service.ts:8",{"_index":1936,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["manytoone",{"_index":288,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/Element.html":{},"entities/ServiceToken.html":{}}}],["manytoone(undefined",{"_index":264,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/Element.html":{},"entities/ServiceToken.html":{}}}],["map",{"_index":115,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["match",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":76,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlisteners",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["maxresults",{"_index":1509,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{}}}],["message",{"_index":1808,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["metadata",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":90,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["mettre",{"_index":908,"title":{},"body":{"injectables/AuthService.html":{}}}],["microsoft",{"_index":1744,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"dependencies.html":{}}}],["microsoftservice",{"_index":1732,"title":{"injectables/MicrosoftService.html":{}},"body":{"injectables/MicrosoftService.html":{},"modules/ServiceModule.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":2189,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2264,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2212,"title":{},"body":{"index.html":{}}}],["models/areas/area.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["models/areas/entities/area.entity",{"_index":1767,"title":{},"body":{"modules/OrmModule.html":{}}}],["models/areasreactions/entities/areareaction.entity",{"_index":1768,"title":{},"body":{"modules/OrmModule.html":{}}}],["models/dictdatagithub/entities/dictdatagithub.entity",{"_index":1771,"title":{},"body":{"modules/OrmModule.html":{}}}],["models/dictemailsoutlook/entities/dictemailsoutlook.entity",{"_index":1769,"title":{},"body":{"modules/OrmModule.html":{}}}],["models/elements/element.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["models/elements/element.service",{"_index":244,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthModule.html":{}}}],["models/elements/entities/element.entity",{"_index":791,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrmModule.html":{}}}],["models/services/entities/service.entity",{"_index":788,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrmModule.html":{}}}],["models/services/service",{"_index":242,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["models/services/service.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["models/servicestokens/entities/servicetoken.entity",{"_index":787,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrmModule.html":{}}}],["models/servicestokens/servicetoken.service",{"_index":785,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/users/entities/user.entity",{"_index":789,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OrmModule.html":{}}}],["models/users/user.module",{"_index":773,"title":{},"body":{"modules/AuthModule.html":{}}}],["models/users/user.service",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["modify",{"_index":1566,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["modifyurl",{"_index":1565,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["module",{"_index":131,"title":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ConfigsModule.html":{},"modules/ElementModule.html":{},"modules/OrmModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ConfigsModule.html":{},"modules/ElementModule.html":{},"modules/OrmModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":133,"title":{"modules.html":{}},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ConfigsModule.html":{},"modules/ElementModule.html":{},"modules/OrmModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["montype",{"_index":1340,"title":{},"body":{"injectables/ElementService.html":{}}}],["more",{"_index":2230,"title":{},"body":{"index.html":{}}}],["mot",{"_index":904,"title":{},"body":{"injectables/AuthService.html":{}}}],["ms_config",{"_index":1021,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["msauthcallback",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{}}}],["msauthcallback(@req",{"_index":737,"title":{},"body":{"controllers/AuthController.html":{}}}],["msauthcallback(req",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["msauthguard",{"_index":694,"title":{"injectables/MsAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/MsAuthGuard.html":{},"coverage.html":{}}}],["msstrategy",{"_index":768,"title":{"injectables/MsStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MsStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["myśliwiec",{"_index":2277,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["name'})@apiresponse({status",{"_index":1890,"title":{},"body":{"controllers/ServiceController.html":{}}}],["name.familyname",{"_index":1676,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["name.givenname",{"_index":1675,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["nathan",{"_index":1728,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["nathan@test.com",{"_index":1725,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["need",{"_index":1845,"title":{},"body":{"entities/Service.html":{},"index.html":{}}}],["need_token",{"_index":249,"title":{},"body":{"injectables/AppService.html":{},"injectables/BaseService.html":{},"classes/CreateServiceDto.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"entities/Service.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"injectables/TwitchService.html":{}}}],["needcronjob",{"_index":919,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["needed",{"_index":1084,"title":{},"body":{"classes/CreateElementDto.html":{},"entities/Element.html":{}}}],["nest",{"_index":2202,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2281,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":2227,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":1363,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"modules/ServiceModule.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":117,"title":{},"body":{"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":241,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":778,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":780,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/AreaRegistry.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":41,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"controllers/AuthController.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"classes/LoginDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"classes/Status.html":{},"classes/Token.html":{},"entities/User.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":454,"title":{},"body":{"modules/AreaModule.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"modules/AuthModule.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"modules/OrmModule.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceTokenService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":114,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["newarea",{"_index":427,"title":{},"body":{"controllers/AreaController.html":{}}}],["newareaaction",{"_index":399,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaService.html":{}}}],["newareareaction",{"_index":410,"title":{},"body":{"controllers/AreaController.html":{}}}],["newlistener",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["newpassword",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{}}}],["newservice",{"_index":1010,"title":{},"body":{"injectables/BaseService.html":{}}}],["newservice.id",{"_index":1012,"title":{},"body":{"injectables/BaseService.html":{}}}],["newtoken",{"_index":887,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser",{"_index":861,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":2195,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2207,"title":{},"body":{"index.html":{}}}],["null",{"_index":1700,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["nullable",{"_index":1852,"title":{},"body":{"entities/Service.html":{},"entities/User.html":{}}}],["number",{"_index":26,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceTokenDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["number(param",{"_index":1916,"title":{},"body":{"controllers/ServiceController.html":{}}}],["oauth2",{"_index":1665,"title":{},"body":{"injectables/GoogleStrategy.html":{},"dependencies.html":{}}}],["objarea",{"_index":541,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["objarea.execaction",{"_index":552,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["objarea.needcronjob",{"_index":551,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["object",{"_index":1101,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/Status.html":{}}}],["object.keys(parameters).foreach((key",{"_index":1585,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["offer",{"_index":2261,"title":{},"body":{"index.html":{}}}],["official",{"_index":2240,"title":{},"body":{"index.html":{}}}],["offline",{"_index":1670,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["offline_access",{"_index":1749,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{}}}],["oldarea",{"_index":623,"title":{},"body":{"injectables/AreaService.html":{}}}],["oldarea.active",{"_index":624,"title":{},"body":{"injectables/AreaService.html":{}}}],["onetomany",{"_index":289,"title":{},"body":{"entities/Area.html":{},"entities/Element.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":270,"title":{},"body":{"entities/Area.html":{},"entities/Element.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["onmoduleinit",{"_index":517,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["open",{"_index":2266,"title":{},"body":{"index.html":{}}}],["option",{"_index":588,"title":{},"body":{"injectables/AreaService.html":{}}}],["optional",{"_index":100,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["options",{"_index":2005,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["order",{"_index":60,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["orderby",{"_index":1789,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["ormmodule",{"_index":188,"title":{"modules/OrmModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrmModule.html":{},"modules.html":{},"overview.html":{}}}],["out",{"_index":147,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["outlook",{"_index":1784,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["outlookactionemaildeleted",{"_index":1740,"title":{"injectables/OutlookActionEmailDeleted.html":{}},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"coverage.html":{}}}],["outlookactionemailreceived",{"_index":1736,"title":{"injectables/OutlookActionEmailReceived.html":{}},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailReceived.html":{},"coverage.html":{}}}],["outlookactionemailsent",{"_index":1741,"title":{"injectables/OutlookActionEmailSent.html":{}},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailSent.html":{},"coverage.html":{}}}],["outlookreactiondeleteemail",{"_index":1742,"title":{"injectables/OutlookReactionDeleteEmail.html":{}},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"coverage.html":{}}}],["outlookreactionflagemail",{"_index":1743,"title":{"injectables/OutlookReactionFlagEmail.html":{}},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookReactionFlagEmail.html":{},"coverage.html":{}}}],["outlookreactionsendemail",{"_index":1739,"title":{"injectables/OutlookReactionSendEmail.html":{}},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookReactionSendEmail.html":{},"coverage.html":{}}}],["overview",{"_index":2286,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2152,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":357,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["param('id",{"_index":418,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ServiceController.html":{}}}],["param('token",{"_index":1907,"title":{},"body":{"controllers/ServiceController.html":{}}}],["parameter",{"_index":48,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/BaseArea.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["parameter_reaction",{"_index":59,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["parameters",{"_index":99,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["parameters['inbox_email_id",{"_index":1554,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["parameters[key",{"_index":1588,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["params",{"_index":1384,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["params.get('access_token",{"_index":1462,"title":{},"body":{"injectables/GithubService.html":{}}}],["params.get('refresh_token",{"_index":1464,"title":{},"body":{"injectables/GithubService.html":{}}}],["parseintpipe",{"_index":358,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["parser",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2251,"title":{},"body":{"index.html":{}}}],["passe",{"_index":906,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":1477,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":779,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1475,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1466,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["password",{"_index":711,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/OrmModule.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"entities/User.html":{}}}],["password'})@apiresponse({status",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":1710,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":1711,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per_page",{"_index":1387,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["pg",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["photos",{"_index":1673,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["photos[0].value",{"_index":1677,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["picture",{"_index":22,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"injectables/GoogleStrategy.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/TwitchStrategy.html":{}}}],["pinurl",{"_index":1802,"title":{},"body":{"injectables/OutlookReactionFlagEmail.html":{}}}],["please",{"_index":2233,"title":{},"body":{"index.html":{}}}],["port",{"_index":1775,"title":{},"body":{"modules/OrmModule.html":{}}}],["post",{"_index":23,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"controllers/AuthController.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"controllers/ServiceController.html":{}}}],["post('login",{"_index":710,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":714,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiexcludeendpoint",{"_index":1865,"title":{},"body":{"controllers/ServiceController.html":{}}}],["post()@apioperation({summary",{"_index":322,"title":{},"body":{"controllers/AreaController.html":{}}}],["postgres",{"_index":1773,"title":{},"body":{"modules/OrmModule.html":{}}}],["prefix",{"_index":296,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{}}}],["previousparams",{"_index":958,"title":{},"body":{"injectables/BaseArea.html":{}}}],["primarygeneratedcolumn",{"_index":277,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"entities/Service.html":{},"entities/ServiceToken.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn()@apiproperty({example",{"_index":1839,"title":{},"body":{"entities/Service.html":{}}}],["private",{"_index":88,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseArea.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":2214,"title":{},"body":{"index.html":{}}}],["profile",{"_index":21,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"controllers/AuthController.html":{},"classes/CreateAreaDto.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["profile'})@apiresponse({status",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile_image_url",{"_index":2083,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["progressive",{"_index":2194,"title":{},"body":{"index.html":{}}}],["project",{"_index":2205,"title":{},"body":{"index.html":{}}}],["promise",{"_index":487,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsStrategy.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["promise.all([actionsp",{"_index":1925,"title":{},"body":{"controllers/ServiceController.html":{}}}],["promise.all([tmp1",{"_index":426,"title":{},"body":{"controllers/AreaController.html":{}}}],["prompt",{"_index":1491,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"entities/Area.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"entities/DictEmailsGmail.html":{},"entities/DictEmailsOutlook.html":{},"entities/Element.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchService.html":{},"entities/User.html":{},"properties.html":{}}}],["protected",{"_index":933,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["provide",{"_index":804,"title":{},"body":{"modules/AuthModule.html":{}}}],["provided",{"_index":883,"title":{},"body":{"injectables/AuthService.html":{}}}],["provider",{"_index":1494,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["providerid",{"_index":1495,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"controllers/ElementController.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"controllers/ServiceController.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('about.json",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('login')@apioperation({summary",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apioperation({summary",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(githubauthguard)@apiexcludeendpoint()@get('github/callback",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(googleauthguard)@apiexcludeendpoint()@get('google/callback",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(msauthguard)@apiexcludeendpoint()@get('microsoft/callback",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(spotifyauthguard)@apiexcludeendpoint()@get('spotify/callback",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(twitchauthguard)@apiexcludeendpoint()@get('twitch/callback",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":359,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{}}}],["put(':id",{"_index":417,"title":{},"body":{"controllers/AreaController.html":{}}}],["put(':id')@apioperation({summary",{"_index":352,"title":{},"body":{"controllers/AreaController.html":{}}}],["put(':id/status",{"_index":434,"title":{},"body":{"controllers/AreaController.html":{}}}],["put(':id/status')@apioperation({summary",{"_index":305,"title":{},"body":{"controllers/AreaController.html":{}}}],["put('password",{"_index":756,"title":{},"body":{"controllers/AuthController.html":{}}}],["put('password')@apiexcludeendpoint",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["put('profile",{"_index":753,"title":{},"body":{"controllers/AuthController.html":{}}}],["put('profile')@apibearerauth('access",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{}}}],["put()@apiexcludeendpoint",{"_index":1897,"title":{},"body":{"controllers/ServiceController.html":{}}}],["q",{"_index":1510,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{}}}],["questions",{"_index":2231,"title":{},"body":{"index.html":{}}}],["raw",{"_index":1602,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["rawemail",{"_index":1596,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["reaction",{"_index":74,"title":{"classes/Reaction.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/BaseArea.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/Element.html":{},"injectables/ElementService.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"modules/ReactionRegistryModule.html":{},"coverage.html":{}}}],["reaction(element",{"_index":63,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["reaction.description",{"_index":258,"title":{},"body":{"injectables/AppService.html":{}}}],["reaction.elementid",{"_index":413,"title":{},"body":{"controllers/AreaController.html":{}}}],["reaction.execreaction(this.userid",{"_index":978,"title":{},"body":{"injectables/BaseArea.html":{}}}],["reaction.name",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["reaction.order",{"_index":412,"title":{},"body":{"controllers/AreaController.html":{}}}],["reaction.parameter_reaction",{"_index":411,"title":{},"body":{"controllers/AreaController.html":{}}}],["reaction.service",{"_index":1002,"title":{},"body":{"injectables/BaseService.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{}}}],["reaction.service.ts",{"_index":980,"title":{},"body":{"injectables/BaseReaction.html":{},"coverage.html":{}}}],["reaction.service.ts:15",{"_index":986,"title":{},"body":{"injectables/BaseReaction.html":{}}}],["reaction.service.ts:29",{"_index":987,"title":{},"body":{"injectables/BaseReaction.html":{}}}],["reaction.service.ts:30",{"_index":985,"title":{},"body":{"injectables/BaseReaction.html":{}}}],["reaction.service.ts:31",{"_index":984,"title":{},"body":{"injectables/BaseReaction.html":{}}}],["reaction.service.ts:6",{"_index":982,"title":{},"body":{"injectables/BaseReaction.html":{}}}],["reaction1",{"_index":1630,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["reaction1.registerelement",{"_index":1635,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["reaction2",{"_index":1632,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["reaction2.registerelement",{"_index":1636,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["reaction3",{"_index":1633,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["reaction3.registerelement",{"_index":1637,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["reactiondto",{"_index":57,"title":{"classes/ReactionDto.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["reactionregistry",{"_index":519,"title":{"injectables/ReactionRegistry.html":{}},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"overview.html":{}}}],["reactionregistrymodule",{"_index":451,"title":{"modules/ReactionRegistryModule.html":{}},"body":{"modules/AreaModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["reactions",{"_index":69,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/AppService.html":{},"classes/AreaDto.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"controllers/ElementController.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"controllers/ServiceController.html":{}}}],["reactions'})@apiresponse({status",{"_index":1261,"title":{},"body":{"controllers/ElementController.html":{}}}],["reactionsp",{"_index":1923,"title":{},"body":{"controllers/ServiceController.html":{}}}],["read",{"_index":2059,"title":{},"body":{"injectables/SpotifyStrategy.html":{},"index.html":{}}}],["read:org",{"_index":1488,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["read:user",{"_index":1489,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["readonly",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"injectables/BaseArea.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["real",{"_index":2247,"title":{},"body":{"index.html":{}}}],["received",{"_index":1426,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["received.ts",{"_index":1522,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/OutlookActionEmailReceived.html":{},"coverage.html":{}}}],["received.ts:10",{"_index":1523,"title":{},"body":{"injectables/GmailActionEmailReceived.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["receiveddatetime",{"_index":1790,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["redirecturl",{"_index":728,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1682,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["refresh",{"_index":882,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_key",{"_index":891,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateServiceTokenDto.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{}}}],["refresh_token",{"_index":1452,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["refreshtoken",{"_index":1497,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["register",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":715,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerbody",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(user",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerbody",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":668,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"coverage.html":{}}}],["registerdto})@apiresponse({type",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["registereduser",{"_index":850,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerelement",{"_index":93,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{}}}],["registerelement(area",{"_index":527,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registerelement(element",{"_index":106,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{}}}],["registerservice",{"_index":1973,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["registerservice(service",{"_index":1975,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["registerservicetoken",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerservicetoken(user",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{}}}],["registry.module",{"_index":461,"title":{},"body":{"modules/AreaModule.html":{},"modules/ServiceModule.html":{}}}],["registry.module.ts",{"_index":148,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/ReactionRegistryModule.html":{}}}],["registry.service",{"_index":150,"title":{},"body":{"modules/ActionRegistryModule.html":{},"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["registry.service.ts",{"_index":87,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{},"coverage.html":{}}}],["registry.service.ts:10",{"_index":107,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["registry.service.ts:12",{"_index":521,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:19",{"_index":102,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["registry.service.ts:20",{"_index":530,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:22",{"_index":526,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:23",{"_index":110,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["registry.service.ts:29",{"_index":528,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:49",{"_index":524,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:53",{"_index":529,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:59",{"_index":523,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["registry.service.ts:6",{"_index":98,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["registry.service.ts:8",{"_index":116,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["relations",{"_index":513,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/ServiceTokenService.html":{}}}],["remove",{"_index":577,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/ServiceManager.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":596,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/ServiceManager.html":{},"injectables/UserService.html":{}}}],["removebyaction",{"_index":478,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["removebyaction(id",{"_index":492,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["removelabelids",{"_index":1569,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["removelistener",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["replace",{"_index":1615,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["replace(/\\+/g",{"_index":1612,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["replace(/\\//g",{"_index":1613,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["replaceaccesstoken",{"_index":1994,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["replaceaccesstoken(userid",{"_index":2012,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["replacerefreshtoken",{"_index":1995,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["replacerefreshtoken(userid",{"_index":2014,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["repo",{"_index":1486,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["repository",{"_index":480,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["req",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"injectables/JwtStrategy.html":{},"controllers/ServiceController.html":{}}}],["req.cookies",{"_index":1701,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies['access_token",{"_index":721,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.hostname",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["req.query.state",{"_index":729,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":321,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"controllers/ServiceController.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["request.query.state",{"_index":1412,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["request.user.userid",{"_index":389,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ServiceController.html":{}}}],["requestbody",{"_index":1567,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["required",{"_index":387,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["required'})@apibody({type",{"_index":331,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["required'})@apiresponse({status",{"_index":315,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ServiceController.html":{}}}],["required'})@apiresponse({type",{"_index":349,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["res",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"injectables/AreaRegistry.html":{},"controllers/AuthController.html":{}}}],["res.json",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["res.redirect(`${redirecturl",{"_index":734,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.redirect(this.front_url",{"_index":725,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":727,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":146,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resource",{"_index":317,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["resources",{"_index":2223,"title":{},"body":{"index.html":{}}}],["response",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"controllers/ServiceController.html":{},"injectables/TwitchService.html":{}}}],["response.data",{"_index":1390,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["response.data.access_token",{"_index":1658,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["response.data.messages",{"_index":1513,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{}}}],["response.data.value",{"_index":1792,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["ressource",{"_index":309,"title":{},"body":{"controllers/AreaController.html":{}}}],["results",{"_index":75,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["retrieved",{"_index":342,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["return",{"_index":126,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsAuthGuard.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":103,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"injectables/UserService.html":{}}}],["rootpath",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1085,"title":{},"body":{"classes/CreateElementDto.html":{},"entities/Element.html":{},"index.html":{}}}],["rxjs",{"_index":1365,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/TwitchService.html":{},"dependencies.html":{}}}],["savetosentitems",{"_index":1814,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["scalable",{"_index":2199,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":1485,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["scopes",{"_index":1643,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["secret",{"_index":797,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1705,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select_account",{"_index":1492,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["send",{"_index":1076,"title":{},"body":{"classes/CreateElementDto.html":{},"entities/Element.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookReactionSendEmail.html":{},"coverage.html":{}}}],["sending",{"_index":1604,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["sent",{"_index":1537,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["sent.ts",{"_index":1534,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailSent.html":{},"coverage.html":{}}}],["sent.ts:10",{"_index":1535,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["sent_content",{"_index":1540,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["sent_correspondent",{"_index":1541,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["sent_email_id",{"_index":1542,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["sent_subject",{"_index":1539,"title":{},"body":{"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["sentdatetime",{"_index":1797,"title":{},"body":{"injectables/OutlookActionEmailSent.html":{}}}],["server",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["serveroot",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":32,"title":{"entities/Service.html":{}},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/AppService.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"injectables/TwitchService.html":{},"entities/User.html":{},"coverage.html":{}}}],["service'})@apiresponse({status",{"_index":1869,"title":{},"body":{"controllers/ServiceController.html":{}}}],["service'})@column",{"_index":1235,"title":{},"body":{"entities/Element.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["service'})@column({unique",{"_index":1843,"title":{},"body":{"entities/Service.html":{}}}],["service.controller",{"_index":1961,"title":{},"body":{"modules/ServiceModule.html":{}}}],["service.description",{"_index":248,"title":{},"body":{"injectables/AppService.html":{},"injectables/BaseService.html":{},"injectables/ServiceManager.html":{}}}],["service.dto",{"_index":1001,"title":{},"body":{"injectables/BaseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{}}}],["service.dto.ts",{"_index":1088,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/Status.html":{},"coverage.html":{}}}],["service.dto.ts:11",{"_index":1091,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:14",{"_index":1093,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:17",{"_index":1100,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:23",{"_index":1097,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:28",{"_index":2061,"title":{},"body":{"classes/Status.html":{}}}],["service.dto.ts:5",{"_index":1099,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.front_data",{"_index":1005,"title":{},"body":{"injectables/BaseService.html":{},"injectables/ServiceManager.html":{}}}],["service.id",{"_index":1233,"title":{},"body":{"entities/Element.html":{},"injectables/ElementService.html":{},"entities/ServiceToken.html":{}}}],["service.initindb(this.servicemanager",{"_index":1976,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["service.key_url",{"_index":1007,"title":{},"body":{"injectables/BaseService.html":{},"injectables/ServiceManager.html":{}}}],["service.name",{"_index":247,"title":{},"body":{"injectables/AppService.html":{},"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"injectables/ServiceManager.html":{}}}],["service.need_token",{"_index":250,"title":{},"body":{"injectables/AppService.html":{},"injectables/BaseService.html":{},"injectables/ServiceManager.html":{}}}],["service.service",{"_index":1437,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["service.service.ts",{"_index":989,"title":{},"body":{"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/SpotifyService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":998,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:13",{"_index":996,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:14",{"_index":997,"title":{},"body":{"injectables/BaseService.html":{},"injectables/GithubService.html":{}}}],["service.service.ts:15",{"_index":999,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:20",{"_index":993,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:26",{"_index":2048,"title":{},"body":{"injectables/SpotifyService.html":{}}}],["service.service.ts:33",{"_index":1429,"title":{},"body":{"injectables/GithubService.html":{}}}],["service.service.ts:38",{"_index":995,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:9",{"_index":991,"title":{},"body":{"injectables/BaseService.html":{},"injectables/SpotifyService.html":{}}}],["service.storenewtoken(this.userid",{"_index":969,"title":{},"body":{"injectables/BaseArea.html":{}}}],["servicecontroller",{"_index":1853,"title":{"controllers/ServiceController.html":{}},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["serviceid",{"_index":13,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/AppService.html":{},"classes/AreaDto.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceTokenDto.html":{},"entities/Element.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["servicemanager",{"_index":234,"title":{"injectables/ServiceManager.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"overview.html":{}}}],["servicemodule",{"_index":189,"title":{"modules/ServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["serviceprovider",{"_index":884,"title":{},"body":{"injectables/AuthService.html":{}}}],["serviceprovider.id",{"_index":890,"title":{},"body":{"injectables/AuthService.html":{}}}],["serviceregistry",{"_index":520,"title":{"injectables/ServiceRegistry.html":{}},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"overview.html":{}}}],["servicerepository",{"_index":1305,"title":{},"body":{"injectables/ElementService.html":{}}}],["services",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["services'})@apiresponse({status",{"_index":1876,"title":{},"body":{"controllers/ServiceController.html":{}}}],["services.create(service",{"_index":1011,"title":{},"body":{"injectables/BaseService.html":{}}}],["services.findbyname(this.name",{"_index":1004,"title":{},"body":{"injectables/BaseService.html":{}}}],["services/entities/service.entity",{"_index":457,"title":{},"body":{"modules/AreaModule.html":{},"entities/Element.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{}}}],["services/github",{"_index":746,"title":{},"body":{"controllers/AuthController.html":{}}}],["services/google",{"_index":731,"title":{},"body":{"controllers/AuthController.html":{}}}],["services/microsoft",{"_index":738,"title":{},"body":{"controllers/AuthController.html":{}}}],["services/service.module",{"_index":458,"title":{},"body":{"modules/AreaModule.html":{}}}],["services/twitch",{"_index":742,"title":{},"body":{"controllers/AuthController.html":{}}}],["servicesmanager",{"_index":1904,"title":{},"body":{"controllers/ServiceController.html":{}}}],["servicesrepository",{"_index":1937,"title":{},"body":{"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{}}}],["servicestokens/entities/servicetoken.entity",{"_index":1851,"title":{},"body":{"entities/Service.html":{},"modules/ServiceModule.html":{},"entities/User.html":{}}}],["servicestokens/servicetoken.service",{"_index":1366,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{}}}],["servicestokensrepository",{"_index":1998,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["servicetoken",{"_index":786,"title":{"entities/ServiceToken.html":{}},"body":{"modules/AuthModule.html":{},"injectables/ElementService.html":{},"modules/OrmModule.html":{},"entities/Service.html":{},"modules/ServiceModule.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"entities/User.html":{},"coverage.html":{}}}],["servicetoken.dto",{"_index":2017,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["servicetoken.dto.ts",{"_index":1105,"title":{},"body":{"classes/CreateServiceTokenDto.html":{},"coverage.html":{}}}],["servicetoken.dto.ts:2",{"_index":1106,"title":{},"body":{"classes/CreateServiceTokenDto.html":{}}}],["servicetoken.dto.ts:3",{"_index":1107,"title":{},"body":{"classes/CreateServiceTokenDto.html":{}}}],["servicetoken.dto.ts:4",{"_index":1110,"title":{},"body":{"classes/CreateServiceTokenDto.html":{}}}],["servicetoken.dto.ts:5",{"_index":1109,"title":{},"body":{"classes/CreateServiceTokenDto.html":{}}}],["servicetoken.dto.ts:6",{"_index":1111,"title":{},"body":{"classes/CreateServiceTokenDto.html":{}}}],["servicetoken.dto.ts:7",{"_index":1108,"title":{},"body":{"classes/CreateServiceTokenDto.html":{}}}],["servicetoken.key",{"_index":2023,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["servicetoken.refresh_key",{"_index":2025,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["servicetoken.service",{"_index":1849,"title":{},"body":{"entities/Service.html":{},"injectables/ServiceTokenService.html":{}}}],["servicetoken.time_expire",{"_index":2029,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["servicetoken.time_received",{"_index":2027,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["servicetoken.user",{"_index":2031,"title":{},"body":{"injectables/ServiceTokenService.html":{},"entities/User.html":{}}}],["servicetokens",{"_index":2085,"title":{},"body":{"entities/User.html":{}}}],["servicetokenservice",{"_index":769,"title":{"injectables/ServiceTokenService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(is_public_key",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":2206,"title":{},"body":{"index.html":{}}}],["si",{"_index":1095,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["side",{"_index":2200,"title":{},"body":{"index.html":{}}}],["signinservice",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinservice(user",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":799,"title":{},"body":{"modules/AuthModule.html":{}}}],["sort",{"_index":1385,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"modules/AreaModule.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"modules/ConfigsModule.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"modules/ElementModule.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"modules/ServiceModule.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":2269,"title":{},"body":{"index.html":{}}}],["spotify",{"_index":2050,"title":{},"body":{"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"dependencies.html":{}}}],["spotify.config",{"_index":1027,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["spotifyauthguard",{"_index":701,"title":{"injectables/SpotifyAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/SpotifyAuthGuard.html":{},"coverage.html":{}}}],["spotifyconfig",{"_index":1026,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["spotifyid",{"_index":2060,"title":{},"body":{"injectables/SpotifyStrategy.html":{}}}],["spotifyservice",{"_index":1958,"title":{"injectables/SpotifyService.html":{}},"body":{"modules/ServiceModule.html":{},"injectables/SpotifyService.html":{},"coverage.html":{},"overview.html":{}}}],["spotifystrategy",{"_index":770,"title":{"injectables/SpotifyStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SpotifyStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../jwt.strategy.ts",{"_index":2295,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":2191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../metadata.ts",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":228,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:14",{"_index":240,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:29",{"_index":237,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:42",{"_index":239,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":235,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:101",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:124",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:147",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:170",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:199",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:212",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:219",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:70",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:78",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":772,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:136",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:140",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:155",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:59",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:65",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:96",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":1723,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"coverage.html":{}}}],["src/auth/guards/github",{"_index":1401,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/google",{"_index":1616,"title":{},"body":{"injectables/GoogleAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard",{"_index":367,"title":{},"body":{"controllers/AreaController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":1678,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts:12",{"_index":1685,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/guards/jwt.guard.ts:7",{"_index":1683,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/guards/local",{"_index":1713,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/ms",{"_index":1755,"title":{},"body":{"injectables/MsAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/spotify",{"_index":2046,"title":{},"body":{"injectables/SpotifyAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/twitch",{"_index":2063,"title":{},"body":{"injectables/TwitchAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/github.strategy.ts",{"_index":1465,"title":{},"body":{"injectables/GithubStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/github.strategy.ts:20",{"_index":1473,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["src/auth/strategies/github.strategy.ts:7",{"_index":1468,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["src/auth/strategies/google.strategy.ts",{"_index":1659,"title":{},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/google.strategy.ts:29",{"_index":1662,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/auth/strategies/google.strategy.ts:36",{"_index":1664,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/auth/strategies/google.strategy.ts:7",{"_index":1661,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1692,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/strategies/jwt.strategy.ts:13",{"_index":1694,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:33",{"_index":1697,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1715,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":1719,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":1717,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/ms.strategy.ts",{"_index":1757,"title":{},"body":{"injectables/MsStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/ms.strategy.ts:20",{"_index":1759,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["src/auth/strategies/ms.strategy.ts:7",{"_index":1758,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["src/auth/strategies/spotify.strategy.ts",{"_index":2053,"title":{},"body":{"injectables/SpotifyStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/spotify.strategy.ts:19",{"_index":2055,"title":{},"body":{"injectables/SpotifyStrategy.html":{}}}],["src/auth/strategies/spotify.strategy.ts:7",{"_index":2054,"title":{},"body":{"injectables/SpotifyStrategy.html":{}}}],["src/auth/strategies/twitch.strategy.ts",{"_index":2075,"title":{},"body":{"injectables/TwitchStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/twitch.strategy.ts:17",{"_index":2077,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["src/auth/strategies/twitch.strategy.ts:7",{"_index":2076,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["src/common/constants/metadata",{"_index":1271,"title":{},"body":{"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["src/common/constants/metadata.ts",{"_index":2140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config.module.ts",{"_index":1014,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["src/config/config.service.ts",{"_index":1032,"title":{},"body":{"injectables/ConfigsService.html":{},"coverage.html":{}}}],["src/config/config.service.ts:5",{"_index":1035,"title":{},"body":{"injectables/ConfigsService.html":{}}}],["src/config/config.service.ts:8",{"_index":1037,"title":{},"body":{"injectables/ConfigsService.html":{}}}],["src/config/orm.module.ts",{"_index":1766,"title":{},"body":{"modules/OrmModule.html":{}}}],["src/main.ts",{"_index":2142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/areas/area",{"_index":515,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"coverage.html":{}}}],["src/models/areas/area.controller.ts",{"_index":295,"title":{},"body":{"controllers/AreaController.html":{},"coverage.html":{}}}],["src/models/areas/area.controller.ts:124",{"_index":355,"title":{},"body":{"controllers/AreaController.html":{}}}],["src/models/areas/area.controller.ts:171",{"_index":338,"title":{},"body":{"controllers/AreaController.html":{}}}],["src/models/areas/area.controller.ts:190",{"_index":319,"title":{},"body":{"controllers/AreaController.html":{}}}],["src/models/areas/area.controller.ts:51",{"_index":350,"title":{},"body":{"controllers/AreaController.html":{}}}],["src/models/areas/area.controller.ts:69",{"_index":344,"title":{},"body":{"controllers/AreaController.html":{}}}],["src/models/areas/area.controller.ts:90",{"_index":332,"title":{},"body":{"controllers/AreaController.html":{}}}],["src/models/areas/area.module.ts",{"_index":452,"title":{},"body":{"modules/AreaModule.html":{}}}],["src/models/areas/area.service.ts",{"_index":572,"title":{},"body":{"injectables/AreaService.html":{},"coverage.html":{}}}],["src/models/areas/area.service.ts:10",{"_index":580,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:20",{"_index":584,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:43",{"_index":591,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:56",{"_index":587,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:60",{"_index":593,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:64",{"_index":595,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:77",{"_index":599,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:81",{"_index":597,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/area.service.ts:85",{"_index":582,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/models/areas/dto/create",{"_index":6,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"coverage.html":{}}}],["src/models/areas/entities/area.entity.ts",{"_index":261,"title":{},"body":{"entities/Area.html":{},"coverage.html":{}}}],["src/models/areas/entities/area.entity.ts:15",{"_index":278,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:18",{"_index":282,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:21",{"_index":276,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:24",{"_index":284,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:27",{"_index":269,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:30",{"_index":281,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:33",{"_index":286,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:36",{"_index":287,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:39",{"_index":268,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:42",{"_index":266,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:45",{"_index":272,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areas/entities/area.entity.ts:48",{"_index":275,"title":{},"body":{"entities/Area.html":{}}}],["src/models/areasreactions/areareaction.service",{"_index":531,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{}}}],["src/models/areasreactions/areareaction.service.ts",{"_index":475,"title":{},"body":{"injectables/AreaReactionService.html":{},"coverage.html":{}}}],["src/models/areasreactions/areareaction.service.ts:10",{"_index":483,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["src/models/areasreactions/areareaction.service.ts:20",{"_index":486,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["src/models/areasreactions/areareaction.service.ts:42",{"_index":489,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["src/models/areasreactions/areareaction.service.ts:49",{"_index":491,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["src/models/areasreactions/areareaction.service.ts:57",{"_index":493,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["src/models/areasreactions/dto/create",{"_index":1047,"title":{},"body":{"classes/CreateAreaReactionDto.html":{},"coverage.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts",{"_index":465,"title":{},"body":{"entities/AreaReaction.html":{},"coverage.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts:11",{"_index":473,"title":{},"body":{"entities/AreaReaction.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts:14",{"_index":471,"title":{},"body":{"entities/AreaReaction.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts:17",{"_index":468,"title":{},"body":{"entities/AreaReaction.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts:20",{"_index":469,"title":{},"body":{"entities/AreaReaction.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts:23",{"_index":467,"title":{},"body":{"entities/AreaReaction.html":{}}}],["src/models/areasreactions/entities/areareaction.entity.ts:8",{"_index":470,"title":{},"body":{"entities/AreaReaction.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts",{"_index":1125,"title":{},"body":{"injectables/DictDataGithubService.html":{},"coverage.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:14",{"_index":1132,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:25",{"_index":1134,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:29",{"_index":1139,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:33",{"_index":1136,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:37",{"_index":1138,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:47",{"_index":1140,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:51",{"_index":1142,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dictdatagithub.service.ts:8",{"_index":1129,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["src/models/dictdatagithub/dto/create",{"_index":1054,"title":{},"body":{"classes/CreateDictDataGithubDto.html":{},"coverage.html":{}}}],["src/models/dictdatagithub/entities/dictdatagithub.entity.ts",{"_index":1119,"title":{},"body":{"entities/DictDataGithub.html":{},"coverage.html":{}}}],["src/models/dictdatagithub/entities/dictdatagithub.entity.ts:12",{"_index":1122,"title":{},"body":{"entities/DictDataGithub.html":{}}}],["src/models/dictdatagithub/entities/dictdatagithub.entity.ts:15",{"_index":1120,"title":{},"body":{"entities/DictDataGithub.html":{}}}],["src/models/dictdatagithub/entities/dictdatagithub.entity.ts:6",{"_index":1121,"title":{},"body":{"entities/DictDataGithub.html":{}}}],["src/models/dictdatagithub/entities/dictdatagithub.entity.ts:9",{"_index":1123,"title":{},"body":{"entities/DictDataGithub.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service",{"_index":1504,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts",{"_index":1165,"title":{},"body":{"injectables/DictEmailsGmailService.html":{},"coverage.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:14",{"_index":1170,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:25",{"_index":1171,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:29",{"_index":1174,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:33",{"_index":1172,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:37",{"_index":1173,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:47",{"_index":1175,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:51",{"_index":1176,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dictemailsgmail.service.ts:8",{"_index":1167,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["src/models/dictemailsgmail/dto/create",{"_index":1062,"title":{},"body":{"classes/CreateDictEmailsGmailDto.html":{},"coverage.html":{}}}],["src/models/dictemailsgmail/entities/dictemailsgmail.entity",{"_index":1770,"title":{},"body":{"modules/OrmModule.html":{}}}],["src/models/dictemailsgmail/entities/dictemailsgmail.entity.ts",{"_index":1159,"title":{},"body":{"entities/DictEmailsGmail.html":{},"coverage.html":{}}}],["src/models/dictemailsgmail/entities/dictemailsgmail.entity.ts:12",{"_index":1162,"title":{},"body":{"entities/DictEmailsGmail.html":{}}}],["src/models/dictemailsgmail/entities/dictemailsgmail.entity.ts:15",{"_index":1160,"title":{},"body":{"entities/DictEmailsGmail.html":{}}}],["src/models/dictemailsgmail/entities/dictemailsgmail.entity.ts:6",{"_index":1161,"title":{},"body":{"entities/DictEmailsGmail.html":{}}}],["src/models/dictemailsgmail/entities/dictemailsgmail.entity.ts:9",{"_index":1163,"title":{},"body":{"entities/DictEmailsGmail.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service",{"_index":1738,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailReceived.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts",{"_index":1198,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{},"coverage.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:14",{"_index":1203,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:25",{"_index":1204,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:29",{"_index":1207,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:33",{"_index":1205,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:37",{"_index":1206,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:47",{"_index":1208,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:51",{"_index":1209,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dictemailsoutlook.service.ts:8",{"_index":1200,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["src/models/dictemailsoutlook/dto/create",{"_index":1069,"title":{},"body":{"classes/CreateDictEmailsOutlookDto.html":{},"coverage.html":{}}}],["src/models/dictemailsoutlook/entities/dictemailsoutlook.entity.ts",{"_index":1192,"title":{},"body":{"entities/DictEmailsOutlook.html":{},"coverage.html":{}}}],["src/models/dictemailsoutlook/entities/dictemailsoutlook.entity.ts:12",{"_index":1195,"title":{},"body":{"entities/DictEmailsOutlook.html":{}}}],["src/models/dictemailsoutlook/entities/dictemailsoutlook.entity.ts:15",{"_index":1193,"title":{},"body":{"entities/DictEmailsOutlook.html":{}}}],["src/models/dictemailsoutlook/entities/dictemailsoutlook.entity.ts:6",{"_index":1194,"title":{},"body":{"entities/DictEmailsOutlook.html":{}}}],["src/models/dictemailsoutlook/entities/dictemailsoutlook.entity.ts:9",{"_index":1196,"title":{},"body":{"entities/DictEmailsOutlook.html":{}}}],["src/models/elements/action",{"_index":85,"title":{},"body":{"injectables/ActionRegistry.html":{},"modules/ActionRegistryModule.html":{},"injectables/AreaRegistry.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/TwitchService.html":{},"coverage.html":{}}}],["src/models/elements/dto/create",{"_index":1074,"title":{},"body":{"classes/CreateElementDto.html":{},"coverage.html":{}}}],["src/models/elements/element.controller.ts",{"_index":1242,"title":{},"body":{"controllers/ElementController.html":{},"coverage.html":{}}}],["src/models/elements/element.controller.ts:29",{"_index":1256,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/models/elements/element.controller.ts:42",{"_index":1251,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/models/elements/element.controller.ts:54",{"_index":1259,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/models/elements/element.controller.ts:69",{"_index":1266,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/models/elements/element.controller.ts:81",{"_index":1262,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/models/elements/element.controller.ts:96",{"_index":1269,"title":{},"body":{"controllers/ElementController.html":{}}}],["src/models/elements/element.module.ts",{"_index":1291,"title":{},"body":{"modules/ElementModule.html":{}}}],["src/models/elements/element.service.ts",{"_index":1295,"title":{},"body":{"injectables/ElementService.html":{},"coverage.html":{}}}],["src/models/elements/element.service.ts:17",{"_index":1309,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:35",{"_index":1313,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:39",{"_index":1316,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:43",{"_index":1315,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:47",{"_index":1325,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:57",{"_index":1326,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:61",{"_index":1312,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:68",{"_index":1319,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:75",{"_index":1310,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:79",{"_index":1321,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:9",{"_index":1306,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:90",{"_index":1317,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/element.service.ts:94",{"_index":1323,"title":{},"body":{"injectables/ElementService.html":{}}}],["src/models/elements/entities/element.entity.ts",{"_index":1224,"title":{},"body":{"entities/Element.html":{},"coverage.html":{}}}],["src/models/elements/entities/element.entity.ts:17",{"_index":1230,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:24",{"_index":1232,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:31",{"_index":1228,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:34",{"_index":1234,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:38",{"_index":1236,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:41",{"_index":1226,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:44",{"_index":1225,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:51",{"_index":1238,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/entities/element.entity.ts:58",{"_index":1239,"title":{},"body":{"entities/Element.html":{}}}],["src/models/elements/reaction",{"_index":532,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"modules/ReactionRegistryModule.html":{},"injectables/TwitchService.html":{},"coverage.html":{}}}],["src/models/services/dto/create",{"_index":1087,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/Status.html":{},"coverage.html":{}}}],["src/models/services/entities/service.entity.ts",{"_index":1834,"title":{},"body":{"entities/Service.html":{},"coverage.html":{}}}],["src/models/services/entities/service.entity.ts:10",{"_index":1840,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:14",{"_index":1844,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:21",{"_index":1835,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:25",{"_index":1838,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:29",{"_index":1848,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:36",{"_index":1842,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:39",{"_index":1836,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/entities/service.entity.ts:42",{"_index":1850,"title":{},"body":{"entities/Service.html":{}}}],["src/models/services/service",{"_index":535,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{},"coverage.html":{}}}],["src/models/services/service.controller.ts",{"_index":1854,"title":{},"body":{"controllers/ServiceController.html":{},"coverage.html":{}}}],["src/models/services/service.controller.ts:111",{"_index":1884,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:128",{"_index":1874,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:141",{"_index":1887,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:150",{"_index":1895,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:167",{"_index":1870,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:43",{"_index":1866,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:49",{"_index":1898,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:64",{"_index":1877,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:79",{"_index":1881,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.controller.ts:93",{"_index":1891,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/models/services/service.module.ts",{"_index":1960,"title":{},"body":{"modules/ServiceModule.html":{}}}],["src/models/servicestokens/dto/create",{"_index":1104,"title":{},"body":{"classes/CreateServiceTokenDto.html":{},"coverage.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts",{"_index":1980,"title":{},"body":{"entities/ServiceToken.html":{},"coverage.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:11",{"_index":1982,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:14",{"_index":1983,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:17",{"_index":1987,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:20",{"_index":1986,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:23",{"_index":1988,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:26",{"_index":1984,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/entities/servicetoken.entity.ts:8",{"_index":1981,"title":{},"body":{"entities/ServiceToken.html":{}}}],["src/models/servicestokens/servicetoken.service",{"_index":1624,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts",{"_index":1989,"title":{},"body":{"injectables/ServiceTokenService.html":{},"coverage.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:10",{"_index":1997,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:103",{"_index":2009,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:114",{"_index":2004,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:118",{"_index":2016,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:20",{"_index":2000,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:44",{"_index":2007,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:53",{"_index":2011,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:60",{"_index":2002,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:73",{"_index":2013,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/servicestokens/servicetoken.service.ts:88",{"_index":2015,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["src/models/users/dto/create",{"_index":703,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/models/users/entities/user.entity",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/models/users/entities/user.entity.ts",{"_index":2084,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/models/users/entities/user.entity.ts:10",{"_index":2091,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:14",{"_index":2098,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:18",{"_index":2093,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:25",{"_index":2089,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:29",{"_index":2096,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:33",{"_index":2087,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:36",{"_index":2097,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/entities/user.entity.ts:39",{"_index":2086,"title":{},"body":{"entities/User.html":{}}}],["src/models/users/user.module.ts",{"_index":2102,"title":{},"body":{"modules/UserModule.html":{}}}],["src/models/users/user.service",{"_index":1625,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["src/models/users/user.service.ts",{"_index":2106,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/models/users/user.service.ts:14",{"_index":2112,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/users/user.service.ts:25",{"_index":2113,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/users/user.service.ts:29",{"_index":2117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/users/user.service.ts:33",{"_index":2115,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/users/user.service.ts:37",{"_index":2118,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/users/user.service.ts:41",{"_index":2119,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/users/user.service.ts:8",{"_index":2110,"title":{},"body":{"injectables/UserService.html":{}}}],["starred",{"_index":1416,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{}}}],["starred.ts",{"_index":1414,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{},"coverage.html":{}}}],["starred.ts:10",{"_index":1415,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["starred_repository_id",{"_index":1425,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["starredrepository",{"_index":1419,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["starredrepository.length",{"_index":1421,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["starredrepository[0].id.tostring",{"_index":1423,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["starredrepositoryid",{"_index":1422,"title":{},"body":{"injectables/GithubRepositoryStarred.html":{}}}],["start",{"_index":2210,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2213,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2215,"title":{},"body":{"index.html":{}}}],["started",{"_index":2193,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2204,"title":{},"body":{"index.html":{}}}],["state",{"_index":1409,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["statements",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":306,"title":{"classes/Status.html":{}},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"classes/CreateServiceDto.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{},"classes/Status.html":{},"coverage.html":{}}}],["stay",{"_index":2254,"title":{},"body":{"index.html":{}}}],["storenewtoken",{"_index":952,"title":{},"body":{"injectables/BaseArea.html":{},"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["storenewtoken(userid",{"_index":994,"title":{},"body":{"injectables/BaseService.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["strategies/github.strategy",{"_index":792,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/google.strategy",{"_index":783,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt.strategy",{"_index":782,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":781,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/ms.strategy",{"_index":784,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/spotify.strategy",{"_index":793,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/twitch.strategy",{"_index":790,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1476,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"classes/AreaDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1577,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["successfully",{"_index":386,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["successfully.'})@apiresponse({status",{"_index":311,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["successfully.'})@apiresponse({type",{"_index":1255,"title":{},"body":{"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["summary",{"_index":385,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["super",{"_index":1368,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{}}}],["super.canactivate(context",{"_index":1691,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":2232,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":867,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"classes/LoginDto.html":{},"injectables/MsStrategy.html":{},"classes/RegisterDto.html":{},"classes/Token.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{}}}],["svg",{"_index":2284,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1781,"title":{},"body":{"modules/OrmModule.html":{}}}],["table",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1034,"title":{},"body":{"injectables/ConfigsService.html":{},"index.html":{}}}],["test:covresources",{"_index":2220,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2219,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2216,"title":{},"body":{"index.html":{}}}],["text/html",{"_index":1605,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["thanks",{"_index":2268,"title":{},"body":{"index.html":{}}}],["this.actionregistry",{"_index":550,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.actionregistry.getelement(this.actionid",{"_index":964,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.actionregistry.registerelement(this",{"_index":1372,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["this.actions.delete(id",{"_index":130,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{}}}],["this.actions.get(id",{"_index":129,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{}}}],["this.actions.push(action1",{"_index":1450,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.actions.push(action2",{"_index":1451,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.actions.push(action3",{"_index":1638,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.actions.set(tmp.id",{"_index":128,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{}}}],["this.active",{"_index":966,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.appservice.getservices",{"_index":180,"title":{},"body":{"controllers/AppController.html":{}}}],["this.areareactionservice",{"_index":547,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areareactionservice.create(newareareaction",{"_index":416,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areareactionservice.findbyaction(areaid",{"_index":973,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.areareactionservice.removebyaction(areaaction.id",{"_index":431,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areareactionservice.removebyaction(id",{"_index":425,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.arearegistry.getelement(id).changestatus",{"_index":437,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.arearegistry.registerelement(areacreate",{"_index":408,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.arearegistry.registerelement(newarea",{"_index":428,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.arearegistry.unregisterelement(areaaction.id",{"_index":433,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.arearepository.findone",{"_index":501,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["this.areas",{"_index":557,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areas.delete(id",{"_index":556,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areas.get(id",{"_index":554,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areas.get(id).deletearea",{"_index":555,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areas.set(area.id",{"_index":553,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areaservice.changestatus(id",{"_index":438,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areaservice.create(newareaaction",{"_index":407,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areaservice.findall",{"_index":539,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.areaservice.findallbyuser(userid",{"_index":390,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areaservice.findone(id",{"_index":420,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areaservice.findoneinfo(id",{"_index":393,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areaservice.remove(areaaction.id",{"_index":432,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areaservice.update(id",{"_index":423,"title":{},"body":{"controllers/AreaController.html":{}}}],["this.areasreactionsrepository.delete",{"_index":514,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["this.areasreactionsrepository.find",{"_index":511,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["this.areasreactionsrepository.save(area_reaction",{"_index":510,"title":{},"body":{"injectables/AreaReactionService.html":{}}}],["this.areasrepository.delete(id",{"_index":622,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.areasrepository.find",{"_index":615,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.areasrepository.find(option",{"_index":618,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.areasrepository.findone",{"_index":620,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.areasrepository.findoneby",{"_index":619,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.areasrepository.save(area",{"_index":614,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.areasrepository.update(id",{"_index":621,"title":{},"body":{"injectables/AreaService.html":{}}}],["this.authservice.getprofile(request.user",{"_index":752,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(loginbody",{"_index":713,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerbody",{"_index":716,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signinservice(req.user",{"_index":724,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.updatepassword(body.password",{"_index":758,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.updateprofile(body",{"_index":755,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1722,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('app.front_url",{"_index":708,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('app.test",{"_index":1038,"title":{},"body":{"injectables/ConfigsService.html":{}}}],["this.configservice.get('google.clientid",{"_index":1651,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.configservice.get('google.clientsecret",{"_index":1653,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.configservice.get('ms.client_id",{"_index":1753,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["this.configservice.get('ms.client_secret",{"_index":1754,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["this.configservice.get('twitch.clientid",{"_index":2073,"title":{},"body":{"injectables/TwitchService.html":{}}}],["this.configservice.get('twitch.clientsecret",{"_index":2074,"title":{},"body":{"injectables/TwitchService.html":{}}}],["this.createrawemail",{"_index":1597,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["this.createtoken(userdb",{"_index":876,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtoken(userinfo",{"_index":856,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cronjob",{"_index":947,"title":{},"body":{"injectables/BaseAction.html":{}}}],["this.description",{"_index":939,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{}}}],["this.dictdatagithubrepository.delete(id",{"_index":1156,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["this.dictdatagithubrepository.find",{"_index":1154,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["this.dictdatagithubrepository.findoneby",{"_index":1155,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["this.dictdatagithubrepository.save(dictissuesgithub",{"_index":1153,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["this.dictdatagithubrepository.update",{"_index":1157,"title":{},"body":{"injectables/DictDataGithubService.html":{}}}],["this.dictdatagithubservice",{"_index":1446,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.dictdatagithubservice.create",{"_index":1400,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["this.dictdatagithubservice.findbyuseridelementname",{"_index":1392,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["this.dictdatagithubservice.update(userid",{"_index":1398,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{}}}],["this.dictemailsgmailrepository.delete(id",{"_index":1189,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["this.dictemailsgmailrepository.find",{"_index":1187,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["this.dictemailsgmailrepository.findoneby",{"_index":1188,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["this.dictemailsgmailrepository.save(dictemailsgmail",{"_index":1186,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["this.dictemailsgmailrepository.update",{"_index":1190,"title":{},"body":{"injectables/DictEmailsGmailService.html":{}}}],["this.dictemailsgmailservice",{"_index":1628,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.dictemailsgmailservice.create",{"_index":1520,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{}}}],["this.dictemailsgmailservice.findbyuseridelementname",{"_index":1514,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{}}}],["this.dictemailsgmailservice.update(userid",{"_index":1518,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{}}}],["this.dictemailsoutlookrepository.delete(id",{"_index":1222,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["this.dictemailsoutlookrepository.find",{"_index":1220,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["this.dictemailsoutlookrepository.findoneby",{"_index":1221,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["this.dictemailsoutlookrepository.save(dictemailsoutlook",{"_index":1219,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["this.dictemailsoutlookrepository.update",{"_index":1223,"title":{},"body":{"injectables/DictEmailsOutlookService.html":{}}}],["this.dictemailsoutlookservice",{"_index":1747,"title":{},"body":{"injectables/MicrosoftService.html":{}}}],["this.dictemailsoutlookservice.create",{"_index":1795,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["this.dictemailsoutlookservice.findbyuseridelementname",{"_index":1793,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["this.dictemailsoutlookservice.update(userid",{"_index":1794,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["this.elementrepository.findone",{"_index":499,"title":{},"body":{"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{}}}],["this.elementservice.findactions",{"_index":1279,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.findactionsinservicebyid(id",{"_index":1922,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.elementservice.findactionsinservicebyid(serviceid",{"_index":253,"title":{},"body":{"injectables/AppService.html":{}}}],["this.elementservice.findall",{"_index":1274,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.findone(id",{"_index":1277,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.findreactions",{"_index":1284,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.findreactionsinservicebyid(id",{"_index":1924,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.elementservice.findreactionsinservicebyid(serviceid",{"_index":256,"title":{},"body":{"injectables/AppService.html":{}}}],["this.elementservice.finduseractions(request.user.userid",{"_index":1282,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementservice.finduserreactions(request.user.userid",{"_index":1287,"title":{},"body":{"controllers/ElementController.html":{}}}],["this.elementsrepository",{"_index":1341,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.elementsrepository.delete(id",{"_index":1338,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.elementsrepository.find",{"_index":1336,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.elementsrepository.findby",{"_index":1339,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.elementsrepository.findoneby",{"_index":1337,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.elementsrepository.save(element",{"_index":1335,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.front_data",{"_index":1006,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.front_url",{"_index":730,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.getactions(service.id",{"_index":251,"title":{},"body":{"injectables/AppService.html":{}}}],["this.getreactions(service.id",{"_index":252,"title":{},"body":{"injectables/AppService.html":{}}}],["this.getrequest(context",{"_index":1411,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/MsAuthGuard.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/TwitchAuthGuard.html":{}}}],["this.httpservice",{"_index":1444,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.httpservice.delete(deleteurl",{"_index":1557,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{}}}],["this.httpservice.get",{"_index":1799,"title":{},"body":{"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["this.httpservice.get(this.url",{"_index":1388,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["this.httpservice.post(modifyurl",{"_index":1570,"title":{},"body":{"injectables/GmailReactionFlagEmail.html":{}}}],["this.httpservice.post(this.url",{"_index":1603,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["this.httpservice.post(url",{"_index":1455,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["this.jwtservice.decode(accesstoken",{"_index":723,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign(payload",{"_index":845,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.login(user",{"_index":852,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.name",{"_index":937,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{}}}],["this.need_token",{"_index":1009,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.parameter",{"_index":971,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.reactionregistry",{"_index":548,"title":{},"body":{"injectables/AreaRegistry.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.reactionregistry.getelement(areareaction.elementid",{"_index":974,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.reactionregistry.registerelement(this",{"_index":1552,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["this.reactions.push(reaction1",{"_index":1639,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.reactions.push(reaction2",{"_index":1640,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.reactions.push(reaction3",{"_index":1641,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1688,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.register(user",{"_index":851,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.registerelement(area",{"_index":540,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.registerservicetoken(user",{"_index":853,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.serviceid",{"_index":943,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/TwitchService.html":{}}}],["this.servicemanager.findall",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["this.servicemanager.findbyname(user.provider",{"_index":885,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.serviceregistry",{"_index":549,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["this.serviceregistry.getelement(action.getserviceid",{"_index":968,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.serviceregistry.getelement(reaction.getserviceid",{"_index":975,"title":{},"body":{"injectables/BaseArea.html":{}}}],["this.serviceregistry.registerservice(this",{"_index":1443,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["this.servicerepository.findone",{"_index":1328,"title":{},"body":{"injectables/ElementService.html":{}}}],["this.services.delete(id",{"_index":1979,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["this.services.get(id",{"_index":1978,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["this.services.set(tmp.id",{"_index":1977,"title":{},"body":{"injectables/ServiceRegistry.html":{}}}],["this.servicesmanager.create(createservicedto",{"_index":1906,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicesmanager.findall",{"_index":1909,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicesmanager.findbyname(param",{"_index":1918,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicesmanager.findone(id",{"_index":1917,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicesmanager.updatetoken(token",{"_index":1908,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicesrepository.delete(id",{"_index":1953,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["this.servicesrepository.find",{"_index":1951,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["this.servicesrepository.findone",{"_index":2020,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicesrepository.findoneby",{"_index":1952,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["this.servicesrepository.save(service",{"_index":1949,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["this.servicesrepository.update(id",{"_index":1950,"title":{},"body":{"injectables/ServiceManager.html":{}}}],["this.servicestokensrepository.existsby",{"_index":2037,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicestokensrepository.find",{"_index":2034,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicestokensrepository.findone",{"_index":2038,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicestokensrepository.findone(options",{"_index":2040,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicestokensrepository.remove(servicetoken",{"_index":2039,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicestokensrepository.save(servicetoken",{"_index":2032,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicestokensrepository.update(id",{"_index":2041,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["this.servicetokenservice",{"_index":1445,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.servicetokenservice.create(newtoken",{"_index":897,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.servicetokenservice.disconnectservicebyid(request.user.id",{"_index":1933,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicetokenservice.findone",{"_index":896,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["this.servicetokenservice.getallconnectedservices(parseint(userid",{"_index":1912,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicetokenservice.getrefreshtokenserviceuser",{"_index":1453,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["this.servicetokenservice.isconnected(userid",{"_index":1931,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.servicetokenservice.replaceaccesstoken",{"_index":1461,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["this.servicetokenservice.replacerefreshtoken",{"_index":1463,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.servicetokenservice.update(existindtoken.id",{"_index":898,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.type",{"_index":941,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{}}}],["this.url",{"_index":945,"title":{},"body":{"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["this.userservice",{"_index":1631,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{}}}],["this.userservice.findoneid(payload.userid",{"_index":1706,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.findoneid(userid",{"_index":1595,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["this.usersrepository.delete(id",{"_index":2129,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.find",{"_index":2127,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.findone",{"_index":602,"title":{},"body":{"injectables/AreaService.html":{},"injectables/ServiceTokenService.html":{}}}],["this.usersrepository.findoneby",{"_index":2128,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.save(user",{"_index":2126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.update(id",{"_index":2130,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersservice.create(newuser",{"_index":875,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findoneemail(email",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findoneemail(user.email",{"_index":849,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.update(existinguser.id",{"_index":907,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateuser(email",{"_index":855,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":394,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ServiceTokenService.html":{}}}],["time",{"_index":2248,"title":{},"body":{"index.html":{}}}],["time_expire",{"_index":894,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateServiceTokenDto.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{}}}],["time_received",{"_index":892,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateServiceTokenDto.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{}}}],["timestamp",{"_index":280,"title":{},"body":{"entities/Area.html":{}}}],["tmp",{"_index":123,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["tmp1",{"_index":422,"title":{},"body":{"controllers/AreaController.html":{}}}],["tmp2",{"_index":424,"title":{},"body":{"controllers/AreaController.html":{}}}],["todo",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":383,"title":{"classes/Token.html":{}},"body":{"controllers/AreaController.html":{},"injectables/AreaRegistry.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceTokenService.html":{},"classes/Token.html":{},"coverage.html":{}}}],["token')@apioperation({summary",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["token'})@column",{"_index":1847,"title":{},"body":{"entities/Service.html":{}}}],["token.access_token",{"_index":733,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.key",{"_index":2042,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["token.refresh_key",{"_index":2043,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["token.service",{"_index":2036,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["token.time_expire",{"_index":2044,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["token.time_received",{"_index":2045,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["top",{"_index":1791,"title":{},"body":{"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{}}}],["torecipients",{"_index":1811,"title":{},"body":{"injectables/OutlookReactionSendEmail.html":{}}}],["tostring('base64",{"_index":1611,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{}}}],["touch",{"_index":2274,"title":{},"body":{"index.html":{}}}],["trash_email_id",{"_index":1519,"title":{},"body":{"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookReactionDeleteEmail.html":{}}}],["trigger",{"_index":566,"title":{},"body":{"injectables/AreaRegistry.html":{}}}],["true",{"_index":49,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"modules/AppModule.html":{},"classes/AreaDto.html":{},"injectables/AreaRegistry.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigsModule.html":{},"classes/CreateAreaDto.html":{},"classes/CreateServiceDto.html":{},"entities/Element.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MicrosoftService.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"entities/Service.html":{},"injectables/ServiceRegistry.html":{},"injectables/SpotifyService.html":{},"classes/Status.html":{},"injectables/TwitchService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":51,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"classes/CreateAreaDto.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{}}}],["try",{"_index":1556,"title":{},"body":{"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["twitch",{"_index":2069,"title":{},"body":{"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"dependencies.html":{}}}],["twitch.config",{"_index":1023,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["twitch_config",{"_index":1022,"title":{},"body":{"modules/ConfigsModule.html":{}}}],["twitchauthguard",{"_index":697,"title":{"injectables/TwitchAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/TwitchAuthGuard.html":{},"coverage.html":{}}}],["twitchservice",{"_index":1959,"title":{"injectables/TwitchService.html":{}},"body":{"modules/ServiceModule.html":{},"injectables/TwitchService.html":{},"coverage.html":{},"overview.html":{}}}],["twitchstrategy",{"_index":771,"title":{"injectables/TwitchStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/TwitchStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["twitter",{"_index":2280,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"injectables/ConfigsService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateAreaReactionDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateElementDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceTokenDto.html":{},"classes/CreateUserDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubAuthGuard.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MicrosoftService.html":{},"injectables/MsAuthGuard.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"classes/RegisterDto.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"injectables/ServiceRegistry.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyAuthGuard.html":{},"injectables/SpotifyService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Status.html":{},"classes/Token.html":{},"injectables/TwitchAuthGuard.html":{},"injectables/TwitchService.html":{},"injectables/TwitchStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2293,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":290,"title":{},"body":{"entities/Area.html":{},"entities/AreaReaction.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaService.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"entities/Element.html":{},"injectables/ElementService.html":{},"entities/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":453,"title":{},"body":{"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/OrmModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":1972,"title":{},"body":{"modules/ServiceModule.html":{}}}],["typeormmodule.forfeature([area",{"_index":464,"title":{},"body":{"modules/AreaModule.html":{}}}],["typeormmodule.forfeature([element",{"_index":1294,"title":{},"body":{"modules/ElementModule.html":{}}}],["typeormmodule.forfeature([servicetoken",{"_index":794,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2105,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":1772,"title":{},"body":{"modules/OrmModule.html":{}}}],["typescript",{"_index":2203,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":313,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["unauthorizedexception",{"_index":360,"title":{},"body":{"controllers/AreaController.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["unauthorizedexception('please",{"_index":1707,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":105,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/AreaRegistry.html":{},"classes/CreateAreaDto.html":{},"controllers/ElementController.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceRegistry.html":{}}}],["unique",{"_index":1240,"title":{},"body":{"entities/Element.html":{},"entities/Service.html":{},"entities/User.html":{}}}],["unit",{"_index":2217,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":108,"title":{},"body":{"injectables/ActionRegistry.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AreaController.html":{},"injectables/AreaReactionService.html":{},"injectables/AreaRegistry.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"controllers/ElementController.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/ReactionRegistry.html":{},"controllers/ServiceController.html":{},"injectables/ServiceRegistry.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["unlicensed",{"_index":2292,"title":{},"body":{"properties.html":{}}}],["unregisterelement",{"_index":94,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["unregisterelement(id",{"_index":109,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["update",{"_index":353,"title":{},"body":{"controllers/AreaController.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":598,"title":{},"body":{"injectables/AreaService.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["update(userid",{"_index":1141,"title":{},"body":{"injectables/DictDataGithubService.html":{},"injectables/DictEmailsGmailService.html":{},"injectables/DictEmailsOutlookService.html":{}}}],["updateareabyid",{"_index":303,"title":{},"body":{"controllers/AreaController.html":{}}}],["updateareabyid(id",{"_index":351,"title":{},"body":{"controllers/AreaController.html":{}}}],["updated",{"_index":310,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{}}}],["updatepassword",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["updatepassword(@body",{"_index":757,"title":{},"body":{"controllers/AuthController.html":{}}}],["updatepassword(body",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["updatepassword(newpassword",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["updateprofile(@body",{"_index":754,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateprofile(body",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateprofile(user",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateresult",{"_index":1900,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{}}}],["updates",{"_index":2256,"title":{},"body":{"index.html":{}}}],["updatetoken",{"_index":1863,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{}}}],["updatetoken(token",{"_index":1896,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceManager.html":{}}}],["url",{"_index":15,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"classes/AreaDto.html":{},"injectables/BaseAction.html":{},"injectables/BaseReaction.html":{},"classes/CreateAreaDto.html":{},"classes/CreateElementDto.html":{},"entities/Element.html":{},"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"injectables/TwitchService.html":{}}}],["urlencoded",{"_index":1459,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["urlsearchparams",{"_index":1648,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["urlsearchparams(response.data",{"_index":1460,"title":{},"body":{"injectables/GithubService.html":{}}}],["use",{"_index":1089,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["usefactory",{"_index":796,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrmModule.html":{}}}],["useguards",{"_index":361,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["useguards(githubauthguard",{"_index":743,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(googleauthguard",{"_index":717,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":380,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["useguards(jwtauthguard)@get('profile')@apibearerauth('access",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(msauthguard",{"_index":735,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(spotifyauthguard",{"_index":747,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(twitchauthguard",{"_index":739,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":263,"title":{"entities/User.html":{}},"body":{"entities/Area.html":{},"controllers/AreaController.html":{},"modules/AreaModule.html":{},"injectables/AreaService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ElementController.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubStrategy.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MsStrategy.html":{},"modules/OrmModule.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/RegisterDto.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyStrategy.html":{},"classes/Token.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user'})@apiresponse({status",{"_index":347,"title":{},"body":{"controllers/AreaController.html":{},"controllers/AuthController.html":{},"controllers/ElementController.html":{},"controllers/ServiceController.html":{}}}],["user'})@column",{"_index":2092,"title":{},"body":{"entities/User.html":{}}}],["user'})@column({nullable",{"_index":2095,"title":{},"body":{"entities/User.html":{}}}],["user'})@column({unique",{"_index":2088,"title":{},"body":{"entities/User.html":{}}}],["user'})@primarygeneratedcolumn",{"_index":2090,"title":{},"body":{"entities/User.html":{}}}],["user.accesstoken",{"_index":879,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.createdwithservice",{"_index":2124,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":704,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1112,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":1117,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":1115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":1114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":1113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":844,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":285,"title":{},"body":{"entities/Area.html":{},"injectables/AuthService.html":{},"entities/ServiceToken.html":{}}}],["user.lastname",{"_index":870,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":862,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.provider",{"_index":877,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.read",{"_index":1752,"title":{},"body":{"injectables/MicrosoftService.html":{},"injectables/MsStrategy.html":{}}}],["user.refreshtoken",{"_index":880,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":2103,"title":{},"body":{"modules/UserModule.html":{}}}],["user.surname",{"_index":868,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user:email",{"_index":1487,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["user:follow",{"_index":1490,"title":{},"body":{"injectables/GithubStrategy.html":{}}}],["user:read:email",{"_index":2081,"title":{},"body":{"injectables/TwitchStrategy.html":{}}}],["userdb",{"_index":874,"title":{},"body":{"injectables/AuthService.html":{}}}],["userexists",{"_index":848,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":55,"title":{},"body":{"classes/Action.html":{},"classes/ActionDto.html":{},"entities/Area.html":{},"controllers/AreaController.html":{},"classes/AreaDto.html":{},"injectables/AreaService.html":{},"injectables/AuthService.html":{},"injectables/BaseAction.html":{},"injectables/BaseArea.html":{},"injectables/BaseReaction.html":{},"injectables/BaseService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDictDataGithubDto.html":{},"classes/CreateDictEmailsGmailDto.html":{},"classes/CreateDictEmailsOutlookDto.html":{},"classes/CreateServiceTokenDto.html":{},"entities/DictDataGithub.html":{},"injectables/DictDataGithubService.html":{},"entities/DictEmailsGmail.html":{},"injectables/DictEmailsGmailService.html":{},"entities/DictEmailsOutlook.html":{},"injectables/DictEmailsOutlookService.html":{},"injectables/ElementService.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GithubService.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/GmailReactionDeleteEmail.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"classes/Reaction.html":{},"classes/ReactionDto.html":{},"controllers/ServiceController.html":{},"injectables/ServiceTokenService.html":{},"injectables/SpotifyService.html":{},"injectables/TwitchService.html":{}}}],["userinfo",{"_index":854,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodule",{"_index":763,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":1720,"title":{},"body":{"injectables/LocalStrategy.html":{},"modules/OrmModule.html":{}}}],["userprincipalname",{"_index":1765,"title":{},"body":{"injectables/MsStrategy.html":{}}}],["users/entities/user.entity",{"_index":291,"title":{},"body":{"entities/Area.html":{},"modules/AreaModule.html":{},"injectables/AreaService.html":{},"modules/ServiceModule.html":{},"entities/ServiceToken.html":{},"injectables/ServiceTokenService.html":{}}}],["users/user.module",{"_index":1969,"title":{},"body":{"modules/ServiceModule.html":{}}}],["users/user.service",{"_index":1582,"title":{},"body":{"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionSendEmail.html":{}}}],["userservice",{"_index":812,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/GoogleService.html":{},"injectables/JwtStrategy.html":{},"injectables/MicrosoftService.html":{},"injectables/OutlookReactionSendEmail.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservices",{"_index":2033,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["userservices.map((token",{"_index":2035,"title":{},"body":{"injectables/ServiceTokenService.html":{}}}],["usersrepository",{"_index":579,"title":{},"body":{"injectables/AreaService.html":{},"injectables/ServiceTokenService.html":{},"injectables/UserService.html":{}}}],["usersservice",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["usevalue",{"_index":805,"title":{},"body":{"modules/AuthModule.html":{}}}],["using",{"_index":863,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GmailReactionFlagEmail.html":{},"injectables/GmailReactionSendEmail.html":{},"injectables/OutlookReactionDeleteEmail.html":{},"injectables/OutlookReactionFlagEmail.html":{},"injectables/OutlookReactionSendEmail.html":{},"entities/User.html":{},"index.html":{}}}],["utilise",{"_index":1096,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["utilise'})@column({nullable",{"_index":1841,"title":{},"body":{"entities/Service.html":{}}}],["validate",{"_index":1467,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["validate(_accesstoken",{"_index":1469,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{},"injectables/TwitchStrategy.html":{}}}],["validate(payload",{"_index":1695,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1718,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":113,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/AreaRegistry.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2296,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbosememoryleak",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["verifycallback",{"_index":1472,"title":{},"body":{"injectables/GithubStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/MsStrategy.html":{},"injectables/SpotifyStrategy.html":{}}}],["version",{"_index":1380,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"properties.html":{}}}],["video",{"_index":2241,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2228,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2243,"title":{},"body":{"index.html":{}}}],["void",{"_index":111,"title":{},"body":{"injectables/ActionRegistry.html":{},"injectables/BaseArea.html":{},"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"injectables/GmailActionEmailDeleted.html":{},"injectables/GmailActionEmailReceived.html":{},"injectables/GmailActionEmailSent.html":{},"injectables/OutlookActionEmailDeleted.html":{},"injectables/OutlookActionEmailReceived.html":{},"injectables/OutlookActionEmailSent.html":{},"injectables/ReactionRegistry.html":{},"injectables/ServiceRegistry.html":{}}}],["voir",{"_index":1094,"title":{},"body":{"classes/CreateServiceDto.html":{},"entities/Service.html":{},"classes/Status.html":{}}}],["watch",{"_index":2211,"title":{},"body":{"index.html":{}}}],["website",{"_index":2278,"title":{},"body":{"index.html":{}}}],["where('servicetoken.userid",{"_index":1345,"title":{},"body":{"injectables/ElementService.html":{}}}],["wildcard",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["working",{"_index":2226,"title":{},"body":{"index.html":{}}}],["www",{"_index":1457,"title":{},"body":{"injectables/GithubService.html":{},"injectables/GoogleService.html":{},"injectables/MicrosoftService.html":{},"injectables/TwitchService.html":{}}}],["x",{"_index":1378,"title":{},"body":{"injectables/GithubActionIssueAssigned.html":{},"injectables/GithubRepositoryStarred.html":{},"index.html":{}}}],["yes",{"_index":589,"title":{},"body":{"injectables/AreaService.html":{}}}],["you'd",{"_index":2272,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":145,"title":{},"body":{"modules/ActionRegistryModule.html":{},"modules/AppModule.html":{},"modules/AreaModule.html":{},"modules/AuthModule.html":{},"modules/ElementModule.html":{},"modules/ReactionRegistryModule.html":{},"modules/ServiceModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                serviceId\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Change my profile picture when I post a picture', description: 'The description of the action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Action1', description: 'The name of the action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the linked service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'action', description: 'The type of the element (action/reaction)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages', description: 'The url of the element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:137\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  last_executed: Date;\n  userId: number;\n  color: string;\n}\n\nexport class ReactionDto {\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class AreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the area_action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    example: 3,\n    description: 'The id of the linked action(element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [ReactionDto],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [ReactionDto];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\nexport class ActionDto {\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Action {\n  @ApiProperty({ example: 1, description: 'The id of the action' })\n  id: number;\n\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Reaction {\n  @ApiProperty({ example: 1, description: 'The id of the area_reaction' })\n  id: number;\n\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class Area {\n  @ApiProperty({ example: 1, description: 'The id of the area' })\n  id: number;\n\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    type: Number,\n    description: 'The linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [Reaction],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [Reaction];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionDto.html":{"url":"classes/ActionDto.html","title":"class - ActionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                serviceId\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Change my profile picture when I post a picture', description: 'The description of the action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Action1', description: 'The name of the action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the linked service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'action', description: 'The type of the element (action/reaction)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages', description: 'The url of the element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:105\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  last_executed: Date;\n  userId: number;\n  color: string;\n}\n\nexport class ReactionDto {\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class AreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the area_action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    example: 3,\n    description: 'The id of the linked action(element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [ReactionDto],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [ReactionDto];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\nexport class ActionDto {\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Action {\n  @ApiProperty({ example: 1, description: 'The id of the action' })\n  id: number;\n\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Reaction {\n  @ApiProperty({ example: 1, description: 'The id of the area_reaction' })\n  id: number;\n\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class Area {\n  @ApiProperty({ example: 1, description: 'The id of the area' })\n  id: number;\n\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    type: Number,\n    description: 'The linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [Reaction],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [Reaction];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionRegistry.html":{"url":"injectables/ActionRegistry.html","title":"injectable - ActionRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/action-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getElement\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                unregisterElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementService: ElementService)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/action-registry.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementService\n                                                  \n                                                        \n                                                                        ElementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/action-registry.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseAction | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement(element: BaseAction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/action-registry.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            BaseAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregisterElement\n                        \n                    \n                \n            \n            \n                \nunregisterElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/action-registry.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/models/elements/action-classes/action-registry.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseAction } from './base-action.service';\nimport { ElementService } from '../element.service';\n\n@Injectable()\nexport class ActionRegistry {\n  constructor(private elementService: ElementService) {}\n  private actions = new Map();\n\n  async registerElement(element: BaseAction) {\n    const tmp = await element.initInDb(this.elementService);\n    if (!tmp) {\n      return false;\n    }\n    this.actions.set(tmp.id, element);\n    return true;\n  }\n\n  getElement(id: number): BaseAction | undefined {\n    return this.actions.get(id);\n  }\n\n  unregisterElement(id: number) {\n    this.actions.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionRegistryModule.html":{"url":"modules/ActionRegistryModule.html","title":"module - ActionRegistryModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionRegistryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionRegistryModule\n\n\n\ncluster_ActionRegistryModule_imports\n\n\n\ncluster_ActionRegistryModule_exports\n\n\n\ncluster_ActionRegistryModule_providers\n\n\n\n\nElementModule\n\nElementModule\n\n\n\nActionRegistryModule\n\nActionRegistryModule\n\nActionRegistryModule -->\n\nElementModule->ActionRegistryModule\n\n\n\n\n\nActionRegistry \n\nActionRegistry \n\nActionRegistry  -->\n\nActionRegistryModule->ActionRegistry \n\n\n\n\n\nActionRegistry\n\nActionRegistry\n\nActionRegistryModule -->\n\nActionRegistry->ActionRegistryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/elements/action-classes/action-registry.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActionRegistry\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ElementModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionRegistry\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ActionRegistry } from './action-registry.service';\nimport { ElementModule } from '../element.module';\n\n@Module({\n  imports: [ElementModule],\n  providers: [ActionRegistry],\n  exports: [ActionRegistry],\n})\nexport class ActionRegistryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getAboutJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAboutJson\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAboutJson(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('about.json')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { Public } from './common/constants/metadata';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Public()\n  @Get('about.json')\n  async getAboutJson(@Req() req, @Res() res: Response) {\n    return res.json({\n      client: {\n        // TODO:\n        // Change host\n        host: req.hostname,\n      },\n      server: {\n        current_time: new Date().getTime(),\n        services: await this.appService.getServices(),\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAreaModule\n\nAreaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAreaModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigsModule\n\nConfigsModule\n\nAppModule -->\n\nConfigsModule->AppModule\n\n\n\n\n\nElementModule\n\nElementModule\n\nAppModule -->\n\nElementModule->AppModule\n\n\n\n\n\nOrmModule\n\nOrmModule\n\nAppModule -->\n\nOrmModule->AppModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AreaModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConfigsModule\n                        \n                        \n                            ElementModule\n                        \n                        \n                            OrmModule\n                        \n                        \n                            ServiceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigsModule } from './config/config.module';\nimport { AuthController } from './auth/auth.controller';\nimport { AuthModule } from './auth/auth.module';\nimport { OrmModule } from './config/orm.module';\nimport { JwtService } from '@nestjs/jwt';\nimport { ServiceModule } from './models/services/service.module';\nimport { ElementModule } from './models/elements/element.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AreaModule } from './models/areas/area.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ConfigsModule,\n    OrmModule,\n    ServiceModule,\n    ElementModule,\n    AuthModule,\n    AreaModule,\n    EventEmitterModule.forRoot({\n      wildcard: false,\n      delimiter: '.',\n      newListener: true,\n      removeListener: true,\n      maxListeners: 10,\n      verboseMemoryLeak: true,\n      ignoreErrors: false,\n    }),\n    ScheduleModule.forRoot(),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      serveRoot: '/docs',\n    }),\n  ],\n  controllers: [AppController, AuthController],\n  providers: [AppService, JwtService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getActions\n                            \n                            \n                                    Async\n                                getReactions\n                            \n                            \n                                    Async\n                                getServices\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, serviceManager: ServiceManager, elementService: ElementService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceManager\n                                                  \n                                                        \n                                                                        ServiceManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementService\n                                                  \n                                                        \n                                                                        ElementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActions(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReactions(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getServices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ServiceManager } from './models/services/service-manager.service';\nimport { ElementService } from './models/elements/element.service';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private readonly configService: ConfigService,\n    private serviceManager: ServiceManager,\n    private elementService: ElementService,\n  ) {}\n\n  async getServices() {\n    const services = await this.serviceManager.findAll();\n    const results = [];\n    for (const service of services) {\n      results.push({\n        name: service.name,\n        description: service.description,\n        need_token: service.need_token,\n        actions: await this.getActions(service.id),\n        reactions: await this.getReactions(service.id),\n      });\n    }\n    return results;\n  }\n\n  async getActions(serviceId: number) {\n    const actions =\n      await this.elementService.findActionsInServiceById(serviceId);\n    const results = [];\n    for (const action of actions) {\n      results.push({\n        name: action.name,\n        description: action.description,\n      });\n    }\n    return results;\n  }\n\n  async getReactions(serviceId: number) {\n    const reactions =\n      await this.elementService.findReactionsInServiceById(serviceId);\n    const results = [];\n    for (const reaction of reactions) {\n      results.push({\n        name: reaction.name,\n        description: reaction.description,\n      });\n    }\n    return results;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Area.html":{"url":"entities/Area.html","title":"entity - Area","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/entities/area.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                actionId\n                            \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                areaReaction\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_executed\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameter\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Element\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, element => element.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaReaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AreaReaction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, areaReaction => areaReaction.area)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: '#000000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_executed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/entities/area.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { User } from '../../users/entities/user.entity';\nimport { Element } from '../../elements/entities/element.entity';\nimport { AreaReaction } from '../../areasReactions/entities/areaReaction.entity';\n\n@Entity()\nexport class Area {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column({ type: 'json' })\n  parameter: any;\n\n  @Column()\n  active: boolean;\n\n  @Column({ type: 'timestamp' })\n  last_executed: Date;\n\n  @ManyToOne(() => User, (user) => user.id)\n  user: User;\n\n  @Column()\n  userId: number;\n\n  @Column()\n  actionId: number;\n\n  @ManyToOne(() => Element, (element) => element.id)\n  action: Element;\n\n  @OneToMany(() => AreaReaction, (areaReaction) => areaReaction.area)\n  areaReaction: AreaReaction[];\n\n  @Column({ default: '#000000' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AreaController.html":{"url":"controllers/AreaController.html","title":"controller - AreaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AreaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/area.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                areas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                changeStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createNewArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAreaById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAreaById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateAreaById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeStatus(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/status')@ApiOperation({summary: 'Change status of area (active/desactive)'})@ApiResponse({status: 200, description: 'Ressource updated successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({status: 404, description: 'Resource not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area.controller.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createNewArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewArea(body: AreaDto, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new area'})@ApiResponse({status: 201, description: 'Ressource created successfully.'})@ApiResponse({status: 400, description: 'Bad request: creation failed'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiBody({type: AreaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            AreaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAreaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAreaById(id: number, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete an area'})@ApiResponse({status: 200, description: 'Ressource deleted successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({status: 404, description: 'Resource not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area.controller.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAreaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAreaById(id: number, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get information about an area'})@ApiResponse({status: 200, description: 'Information retrieved successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: Area})\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUserArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserArea(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all areas created by the user'})@ApiResponse({status: 200, description: 'List of areas retrieved successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateAreaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAreaById(id: number, body: AreaDto, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update an area'})@ApiResponse({status: 200, description: 'Ressource updated successfully.'})@ApiResponse({status: 400, description: 'Bad request: update failed'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiBody({type: AreaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area.controller.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AreaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Req,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { Area, AreaDto, CreateAreaDto } from './dto/create-area.dto';\nimport { AreaService } from './area.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt.guard';\nimport { AreaReactionService } from '../areasReactions/areaReaction.service';\nimport { CreateAreaReactionDto } from '../areasReactions/dto/create-areaReaction.dto';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AreaRegistry } from './area-classes/area-registry.service';\n\n@UseGuards(JwtAuthGuard)\n@ApiTags('Areas')\n@ApiBearerAuth('access-token')\n@Controller('areas')\nexport class AreaController {\n  constructor(\n    private readonly areaService: AreaService,\n    private readonly areaReactionService: AreaReactionService,\n    private readonly areaRegistry: AreaRegistry,\n  ) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Get all areas created by the user' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of areas retrieved successfully.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ type: [Area] })\n  async getUserArea(@Req() request) {\n    const userId = request.user.userId;\n    const areas = await this.areaService.findAllByUser(userId);\n    return areas;\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get information about an area' })\n  @ApiResponse({\n    status: 200,\n    description: 'Information retrieved successfully.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: Area })\n  async getAreaById(@Param('id', ParseIntPipe) id: number, @Req() request) {\n    const userId = request.user.userId;\n    const area = await this.areaService.findOneInfo(id);\n    if (!area) {\n      throw new BadRequestException(`No area with id ${id}`);\n    }\n    if (userId != area.userId) {\n      throw UnauthorizedException;\n    }\n    return area;\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new area' })\n  @ApiResponse({ status: 201, description: 'Ressource created successfully.' })\n  @ApiResponse({ status: 400, description: 'Bad request: creation failed' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiBody({ type: AreaDto })\n  async createNewArea(@Body() body: AreaDto, @Req() request) {\n    const newAreaAction: CreateAreaDto = {\n      name: body.name,\n      description: body.description,\n      actionId: body.actionId,\n      parameter: body.parameter,\n      active: body.active,\n      last_executed: new Date(),\n      userId: request.user.userId,\n      color: body.color,\n    };\n    const areaCreate = await this.areaService.create(newAreaAction);\n    await this.areaRegistry.registerElement(areaCreate);\n    for (const reaction of body.reactions) {\n      const newAreaReaction: CreateAreaReactionDto = {\n        parameter_reaction: reaction.parameter_reaction,\n        order: reaction.order,\n        elementId: reaction.elementId,\n        areaId: areaCreate.id,\n      };\n      await this.areaReactionService.create(newAreaReaction);\n    }\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update an area' })\n  @ApiResponse({ status: 200, description: 'Ressource updated successfully.' })\n  @ApiResponse({ status: 400, description: 'Bad request: update failed' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiBody({ type: AreaDto })\n  async updateAreaById(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: AreaDto,\n    @Req() request,\n  ) {\n    const userId = request.user.userId;\n    const areaAction = await this.areaService.findOne(id);\n    if (!areaAction) {\n      throw new BadRequestException(`No area with id ${id}`);\n    }\n    if (userId != areaAction.userId) {\n      throw UnauthorizedException;\n    }\n    const newAreaAction: CreateAreaDto = {\n      name: body.name,\n      description: body.description,\n      actionId: body.actionId,\n      parameter: body.parameter,\n      active: body.active,\n      last_executed: new Date(),\n      userId: request.user.userId,\n      color: body.color,\n    };\n    const tmp1 = this.areaService.update(id, newAreaAction);\n    const tmp2 = this.areaReactionService.removeByAction(id);\n    await Promise.all([tmp1, tmp2]);\n    const newArea = await this.areaService.findOne(id);\n    this.areaRegistry.registerElement(newArea);\n    for (const reaction of body.reactions) {\n      const newAreaReaction: CreateAreaReactionDto = {\n        parameter_reaction: reaction.parameter_reaction,\n        order: reaction.order,\n        elementId: reaction.elementId,\n        areaId: id,\n      };\n      await this.areaReactionService.create(newAreaReaction);\n    }\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete an area' })\n  @ApiResponse({ status: 200, description: 'Ressource deleted successfully.' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  async deleteAreaById(@Param('id', ParseIntPipe) id: number, @Req() request) {\n    const userId = request.user.userId;\n    const areaAction = await this.areaService.findOne(id);\n    if (userId != areaAction.userId) {\n      throw UnauthorizedException;\n    }\n    await this.areaReactionService.removeByAction(areaAction.id);\n    await this.areaService.remove(areaAction.id);\n    await this.areaRegistry.unregisterElement(areaAction.id);\n  }\n\n  @Put(':id/status')\n  @ApiOperation({ summary: 'Change status of area (active/desactive)' })\n  @ApiResponse({ status: 200, description: 'Ressource updated successfully.' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  async changeStatus(@Param('id', ParseIntPipe) id: number) {\n    this.areaRegistry.getElement(id).changeStatus();\n    return await this.areaService.changeStatus(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AreaDto.html":{"url":"classes/AreaDto.html","title":"class - AreaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AreaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actionId\n                            \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameter\n                            \n                            \n                                    \n                                reactions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 3, description: 'The id of the linked action(element)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, description: 'active the area (true/false)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '#FFFFFF', description: 'color of the card (front)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Change my profile picture when I post a picture', description: 'The description of the area'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Area1', description: 'The name of the area'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'The parameter of the area_action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [ReactionDto]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'The reactions linked to this action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  last_executed: Date;\n  userId: number;\n  color: string;\n}\n\nexport class ReactionDto {\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class AreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the area_action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    example: 3,\n    description: 'The id of the linked action(element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [ReactionDto],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [ReactionDto];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\nexport class ActionDto {\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Action {\n  @ApiProperty({ example: 1, description: 'The id of the action' })\n  id: number;\n\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Reaction {\n  @ApiProperty({ example: 1, description: 'The id of the area_reaction' })\n  id: number;\n\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class Area {\n  @ApiProperty({ example: 1, description: 'The id of the area' })\n  id: number;\n\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    type: Number,\n    description: 'The linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [Reaction],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [Reaction];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AreaModule.html":{"url":"modules/AreaModule.html","title":"module - AreaModule","body":"\n                   \n\n\n\n\n    Modules\n    AreaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AreaModule\n\n\n\ncluster_AreaModule_exports\n\n\n\ncluster_AreaModule_imports\n\n\n\ncluster_AreaModule_providers\n\n\n\n\nActionRegistryModule\n\nActionRegistryModule\n\n\n\nAreaModule\n\nAreaModule\n\nAreaModule -->\n\nActionRegistryModule->AreaModule\n\n\n\n\n\nElementModule\n\nElementModule\n\nAreaModule -->\n\nElementModule->AreaModule\n\n\n\n\n\nReactionRegistryModule\n\nReactionRegistryModule\n\nAreaModule -->\n\nReactionRegistryModule->AreaModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAreaModule -->\n\nServiceModule->AreaModule\n\n\n\n\n\nAreaReactionService \n\nAreaReactionService \n\nAreaReactionService  -->\n\nAreaModule->AreaReactionService \n\n\n\n\n\nAreaRegistry \n\nAreaRegistry \n\nAreaRegistry  -->\n\nAreaModule->AreaRegistry \n\n\n\n\n\nAreaService \n\nAreaService \n\nAreaService  -->\n\nAreaModule->AreaService \n\n\n\n\n\nAreaReactionService\n\nAreaReactionService\n\nAreaModule -->\n\nAreaReactionService->AreaModule\n\n\n\n\n\nAreaRegistry\n\nAreaRegistry\n\nAreaModule -->\n\nAreaRegistry->AreaModule\n\n\n\n\n\nAreaService\n\nAreaService\n\nAreaModule -->\n\nAreaService->AreaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/areas/area.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AreaReactionService\n                        \n                        \n                            AreaRegistry\n                        \n                        \n                            AreaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AreaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionRegistryModule\n                        \n                        \n                            ElementModule\n                        \n                        \n                            ReactionRegistryModule\n                        \n                        \n                            ServiceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AreaReactionService\n                        \n                        \n                            AreaRegistry\n                        \n                        \n                            AreaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AreaService } from './area.service';\nimport { AreaController } from './area.controller';\nimport { Area } from './entities/area.entity';\nimport { Element } from '../elements/entities/element.entity';\nimport { User } from '../users/entities/user.entity';\nimport { AreaReactionService } from '../areasReactions/areaReaction.service';\nimport { AreaReaction } from '../areasReactions/entities/areaReaction.entity';\nimport { Service } from '../services/entities/service.entity';\nimport { ServiceModule } from '../services/service.module';\nimport { ElementModule } from '../elements/element.module';\nimport { AreaRegistry } from './area-classes/area-registry.service';\nimport { ActionRegistryModule } from '../elements/action-classes/action-registry.module';\nimport { ReactionRegistryModule } from '../elements/reaction-classes/reaction-registry.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Area, Element, User, AreaReaction, Service]),\n    ServiceModule,\n    ElementModule,\n    ActionRegistryModule,\n    ReactionRegistryModule,\n  ],\n  providers: [AreaService, AreaReactionService, AreaRegistry],\n  controllers: [AreaController],\n  exports: [AreaService, AreaReactionService, AreaRegistry],\n})\nexport class AreaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AreaReaction.html":{"url":"entities/AreaReaction.html","title":"entity - AreaReaction","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AreaReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areasReactions/entities/areaReaction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                element\n                            \n                            \n                                    \n                                elementId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                order\n                            \n                            \n                                    \n                                parameter_reaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, area => area.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/entities/areaReaction.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Element\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, element => element.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/entities/areaReaction.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/entities/areaReaction.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/entities/areaReaction.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/entities/areaReaction.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameter_reaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('json')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/entities/areaReaction.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';\nimport { Element } from '../../elements/entities/element.entity';\nimport { Area } from '../../areas/entities/area.entity';\n\n@Entity()\nexport class AreaReaction {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('json')\n  parameter_reaction: any;\n\n  @Column()\n  order: number;\n\n  @ManyToOne(() => Element, (element) => element.id)\n  element: Element;\n\n  @Column()\n  elementId: number;\n\n  @ManyToOne(() => Area, (area) => area.id)\n  area: Area;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaReactionService.html":{"url":"injectables/AreaReactionService.html","title":"injectable - AreaReactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaReactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areasReactions/areaReaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByAction\n                            \n                            \n                                    Async\n                                findByActionInfo\n                            \n                            \n                                    Async\n                                removeByAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AreasReactionsRepository: Repository, ElementRepository: Repository, AreaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/areasReactions/areaReaction.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AreasReactionsRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ElementRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AreaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAreaReactionDto: CreateAreaReactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areasReactions/areaReaction.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAreaReactionDto\n                                            \n                                                            CreateAreaReactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByAction(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areasReactions/areaReaction.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByActionInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByActionInfo(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areasReactions/areaReaction.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeByAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeByAction(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areasReactions/areaReaction.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAreaReactionDto } from './dto/create-areaReaction.dto';\nimport { AreaReaction } from './entities/areaReaction.entity';\nimport { Element } from '../elements/entities/element.entity';\nimport { Area } from '../areas/entities/area.entity';\n\n@Injectable()\nexport class AreaReactionService {\n  constructor(\n    @InjectRepository(AreaReaction)\n    private readonly AreasReactionsRepository: Repository,\n    @InjectRepository(Element)\n    private readonly ElementRepository: Repository,\n    @InjectRepository(Area)\n    private readonly AreaRepository: Repository,\n  ) {}\n\n  async create(\n    createAreaReactionDto: CreateAreaReactionDto,\n  ): Promise {\n    const element = await this.ElementRepository.findOne({\n      where: { id: createAreaReactionDto.elementId },\n    });\n    const area = await this.AreaRepository.findOne({\n      where: { id: createAreaReactionDto.areaId },\n    });\n    if (!element || !area) {\n      throw new Error('Element nor area not found');\n    }\n\n    const area_reaction = new AreaReaction();\n    area_reaction.parameter_reaction = createAreaReactionDto.parameter_reaction;\n    area_reaction.order = createAreaReactionDto.order;\n    area_reaction.element = element;\n    area_reaction.area = area;\n\n    return this.AreasReactionsRepository.save(area_reaction);\n  }\n\n  async findByAction(id: number) {\n    return await this.AreasReactionsRepository.find({\n      where: { area: { id: id } },\n      order: { order: 'ASC' },\n    });\n  }\n\n  async findByActionInfo(id: number) {\n    return await this.AreasReactionsRepository.find({\n      where: { area: { id: id } },\n      order: { order: 'ASC' },\n      relations: ['element', 'element.service'],\n    });\n  }\n\n  async removeByAction(id: number) {\n    await this.AreasReactionsRepository.delete({ area: { id: id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistry.html":{"url":"injectables/AreaRegistry.html","title":"injectable - AreaRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/area-classes/area-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                areas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                execut\n                            \n                            \n                                getElement\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                unregisterElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaService: AreaService, areaReactionService: AreaReactionService, reactionRegistry: ReactionRegistry, actionRegistry: ActionRegistry, serviceRegistry: ServiceRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/areas/area-classes/area-registry.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaService\n                                                  \n                                                        \n                                                                        AreaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaReactionService\n                                                  \n                                                        \n                                                                        AreaReactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        execut\n                        \n                    \n                \n            \n            \n                \n                        \n                    execut()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_30_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/models/areas/area-classes/area-registry.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/area-registry.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseArea | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/area-registry.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement(area: Area)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/area-registry.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unregisterElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/area-registry.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/models/areas/area-classes/area-registry.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { BaseArea } from './base-area.service';\nimport { AreaService } from '../area.service';\nimport { Area } from '../entities/area.entity';\nimport { AreaReactionService } from 'src/models/areasReactions/areaReaction.service';\nimport { ReactionRegistry } from 'src/models/elements/reaction-classes/reaction-registry.service';\nimport { ActionRegistry } from 'src/models/elements/action-classes/action-registry.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ServiceRegistry } from 'src/models/services/service-classes/service-registry.service';\n\n@Injectable()\nexport class AreaRegistry implements OnModuleInit {\n  constructor(\n    private readonly areaService: AreaService,\n    private readonly areaReactionService: AreaReactionService,\n    private readonly reactionRegistry: ReactionRegistry,\n    private readonly actionRegistry: ActionRegistry,\n    private readonly serviceRegistry: ServiceRegistry,\n  ) {}\n  private areas = new Map();\n\n  async onModuleInit() {\n    const existingAreas = await this.areaService.findAll();\n    for (const area of existingAreas) {\n      this.registerElement(area);\n    }\n  }\n\n  async registerElement(area: Area) {\n    const objArea = new BaseArea(\n      area.name,\n      area.description,\n      area.parameter,\n      area.active,\n      area.userId,\n      area.actionId,\n      this.areaReactionService,\n      this.reactionRegistry,\n      this.serviceRegistry,\n      this.actionRegistry,\n    );\n    if (!objArea.needCronjob()) {\n      objArea.execAction();\n    }\n    this.areas.set(area.id, objArea);\n    return true;\n  }\n\n  getElement(id: number): BaseArea | undefined {\n    return this.areas.get(id);\n  }\n\n  async unregisterElement(id: number) {\n    await this.areas.get(id).deleteArea();\n    this.areas.delete(id);\n  }\n\n  @Cron(CronExpression.EVERY_30_SECONDS)\n  async execut() {\n    for (const area of this.areas) {\n      if (area[1].needCronjob() && area[1].isActive()) {\n        console.log('Refreshing access token for actionw');\n        await area[1].storeNewToken();\n        console.log('Checking cronjob trigger for area: ' + area[1].name);\n        const res = await area[1].execAction();\n        console.log('RES:', res);\n        if (res) {\n          console.log('Triggering reactions for area: ' + area[1].name);\n          await area[1].execReactions(area[0], res);\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaService.html":{"url":"injectables/AreaService.html","title":"injectable - AreaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/area.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeStatus\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneInfo\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AreasRepository: Repository, ElementRepository: Repository, UsersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/areas/area.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AreasRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ElementRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UsersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeStatus(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAreaDto: CreateAreaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAreaDto\n                                            \n                                                            CreateAreaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(option?: FindManyOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            FindManyOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneInfo(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, newAreaAction: CreateAreaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newAreaAction\n                                            \n                                                            CreateAreaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindManyOptions, Repository } from 'typeorm';\nimport { CreateAreaDto } from './dto/create-area.dto';\nimport { Area } from './entities/area.entity';\nimport { Element } from '../elements/entities/element.entity';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class AreaService {\n  constructor(\n    @InjectRepository(Area)\n    private readonly AreasRepository: Repository,\n    @InjectRepository(Element)\n    private readonly ElementRepository: Repository,\n    @InjectRepository(User)\n    private readonly UsersRepository: Repository,\n  ) {}\n\n  async create(createAreaDto: CreateAreaDto): Promise {\n    const element = await this.ElementRepository.findOne({\n      where: { id: createAreaDto.actionId },\n    });\n    const user = await this.UsersRepository.findOne({\n      where: { id: createAreaDto.userId },\n    });\n    if (!element || !user) {\n      throw new Error('Element nor user not found');\n    }\n\n    const area = new Area();\n    area.name = createAreaDto.name;\n    area.description = createAreaDto.description;\n    area.parameter = createAreaDto.parameter;\n    area.active = createAreaDto.active;\n    area.last_executed = createAreaDto.last_executed;\n    area.user = user;\n    area.action = element;\n    area.color = createAreaDto.color;\n    return this.AreasRepository.save(area);\n  }\n\n  async findAllByUser(userId: number) {\n    return await this.AreasRepository.find({\n      where: { userId: userId },\n      relations: [\n        'action',\n        'action.service',\n        'areaReaction',\n        'areaReaction.element',\n        'areaReaction.element.service',\n      ],\n    });\n  }\n\n  async findAll(option?: FindManyOptions) {\n    return await this.AreasRepository.find(option);\n  }\n\n  async findOne(id: number): Promise {\n    return await this.AreasRepository.findOneBy({ id: id });\n  }\n\n  async findOneInfo(id: number): Promise {\n    return await this.AreasRepository.findOne({\n      where: { id: id },\n      relations: [\n        'action',\n        'action.service',\n        'areaReaction',\n        'areaReaction.element',\n        'areaReaction.element.service',\n      ],\n    });\n  }\n\n  async update(id: number, newAreaAction: CreateAreaDto) {\n    await this.AreasRepository.update(id, newAreaAction);\n  }\n\n  async remove(id: number): Promise {\n    await this.AreasRepository.delete(id);\n  }\n\n  async changeStatus(id: number) {\n    const oldArea = await this.AreasRepository.findOneBy({ id: id });\n    await this.AreasRepository.update(id, { active: !oldArea.active });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                authGithubCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                authSpotifyCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                authTwitchCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                googleAuthCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                msAuthCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        authGithubCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    authGithubCallback(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(GithubAuthGuard)@ApiExcludeEndpoint()@Get('github/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        authSpotifyCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    authSpotifyCallback(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(SpotifyAuthGuard)@ApiExcludeEndpoint()@Get('spotify/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        authTwitchCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    authTwitchCallback(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(TwitchAuthGuard)@ApiExcludeEndpoint()@Get('twitch/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Get the user profile'})@ApiResponse({status: 200, description: 'Profile retrieved successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({type: User})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        googleAuthCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleAuthCallback(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(GoogleAuthGuard)@ApiExcludeEndpoint()@Get('google/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginBody: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('login')@ApiOperation({summary: 'Login a user'})@ApiResponse({status: 200, description: 'The user has successfully logged in.'})@ApiResponse({status: 401, description: 'Unauthorized: Invalid password'})@ApiResponse({status: 404, description: 'User not found'})@ApiBody({type: LoginDto})@ApiResponse({type: Token})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginBody\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        msAuthCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    msAuthCallback(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(MsAuthGuard)@ApiExcludeEndpoint()@Get('microsoft/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerBody: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiOperation({summary: 'Register a new user'})@ApiResponse({status: 201, description: 'User created successfully.'})@ApiResponse({status: 400, description: 'Bad request: registration failed'})@ApiBody({type: RegisterDto})@ApiResponse({type: Token})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerBody\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('password')@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(body: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('profile')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Update the user profile'})@ApiResponse({status: 200, description: 'Profile updated successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiBody({type: RegisterDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Put,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Response } from 'express';\nimport { JwtAuthGuard } from './guards/jwt.guard';\nimport { Public } from '../common/constants/metadata';\nimport { GoogleAuthGuard } from './guards/google-auth.guard';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiExcludeEndpoint,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { LoginDto, RegisterDto, Token } from './dto/auth-dto';\nimport { MsAuthGuard } from './guards/ms-auth.guard';\nimport { User } from 'src/models/users/entities/user.entity';\nimport { TwitchAuthGuard } from './guards/twitch-auth.guard';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { GithubAuthGuard } from './guards/github-auth.guard';\nimport { SpotifyAuthGuard } from './guards/spotify-auth.guard';\nimport { CreateUserDto } from 'src/models/users/dto/create-user.dto';\n\n@Controller('auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  front_url = this.configService.get('app.front_url');\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  @ApiOperation({ summary: 'Login a user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has successfully logged in.',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized: Invalid password' })\n  @ApiResponse({ status: 404, description: 'User not found' })\n  @ApiBody({ type: LoginDto })\n  @ApiResponse({ type: Token })\n  async login(@Body() loginBody: LoginDto) {\n    return await this.authService.login(loginBody);\n  }\n\n  @Public()\n  @Post('register')\n  @ApiOperation({ summary: 'Register a new user' })\n  @ApiResponse({ status: 201, description: 'User created successfully.' })\n  @ApiResponse({ status: 400, description: 'Bad request: registration failed' })\n  @ApiBody({ type: RegisterDto })\n  @ApiResponse({ type: Token })\n  async register(@Body() registerBody: RegisterDto) {\n    return await this.authService.register(registerBody);\n  }\n\n  @Public()\n  @UseGuards(GoogleAuthGuard)\n  @ApiExcludeEndpoint()\n  @Get('google/callback')\n  async googleAuthCallback(@Req() req, @Res() res: Response) {\n    const accessToken = req.cookies['access_token'];\n    const decodedToken = this.jwtService.decode(accessToken);\n    const token = await this.authService.signInService(req.user, decodedToken);\n    if (!token) {\n      res.redirect(this.front_url + '/login?results=failed');\n      return res.status(HttpStatus.OK).send();\n    }\n    let redirectUrl: string;\n    if (decodedToken) {\n      redirectUrl = req.query.state || this.front_url + '/services/google';\n    } else {\n      redirectUrl = this.front_url + '/login';\n      redirectUrl += '?access_token=' + token.access_token;\n    }\n    res.redirect(`${redirectUrl}`);\n    return res.status(HttpStatus.OK).send();\n  }\n\n  @Public()\n  @UseGuards(MsAuthGuard)\n  @ApiExcludeEndpoint()\n  @Get('microsoft/callback')\n  async msAuthCallback(@Req() req, @Res() res: Response) {\n    const accessToken = req.cookies['access_token'];\n    const decodedToken = this.jwtService.decode(accessToken);\n    const token = await this.authService.signInService(req.user, decodedToken);\n    if (!token) {\n      res.redirect(this.front_url + '/login?results=failed');\n      return res.status(HttpStatus.OK).send();\n    }\n    let redirectUrl;\n    if (decodedToken) {\n      redirectUrl = req.query.state || this.front_url + '/services/microsoft';\n    } else {\n      redirectUrl = this.front_url + '/login';\n      redirectUrl += '?access_token=' + token.access_token;\n    }\n    res.redirect(`${redirectUrl}`);\n    return res.status(HttpStatus.OK).send();\n  }\n\n  @Public()\n  @UseGuards(TwitchAuthGuard)\n  @ApiExcludeEndpoint()\n  @Get('twitch/callback')\n  async authTwitchCallback(@Req() req, @Res() res: Response) {\n    const accessToken = req.cookies['access_token'];\n    const decodedToken = this.jwtService.decode(accessToken);\n    const token = await this.authService.signInService(req.user, decodedToken);\n    if (!token) {\n      res.redirect(this.front_url + '/login?results=failed');\n      return res.status(HttpStatus.OK).send();\n    }\n    let redirectUrl;\n    if (decodedToken) {\n      redirectUrl = req.query.state || this.front_url + '/services/twitch';\n    } else {\n      redirectUrl = this.front_url + '/login';\n      redirectUrl += '?access_token=' + token.access_token;\n    }\n    res.redirect(`${redirectUrl}`);\n    return res.status(HttpStatus.OK).send();\n  }\n\n  @Public()\n  @UseGuards(GithubAuthGuard)\n  @ApiExcludeEndpoint()\n  @Get('github/callback')\n  async authGithubCallback(@Req() req, @Res() res: Response) {\n    const accessToken = req.cookies['access_token'];\n    const decodedToken = this.jwtService.decode(accessToken);\n    const token = await this.authService.signInService(req.user, decodedToken);\n    if (!token) {\n      res.redirect(this.front_url + '/login?results=failed');\n      return res.status(HttpStatus.OK).send();\n    }\n    let redirectUrl;\n    if (decodedToken) {\n      redirectUrl = req.query.state || this.front_url + '/services/github';\n    } else {\n      redirectUrl = this.front_url + '/login';\n      redirectUrl += '?access_token=' + token.access_token;\n    }\n    res.redirect(`${redirectUrl}`);\n    return res.status(HttpStatus.OK).send();\n  }\n\n  @Public()\n  @UseGuards(SpotifyAuthGuard)\n  @ApiExcludeEndpoint()\n  @Get('spotify/callback')\n  async authSpotifyCallback(@Req() req, @Res() res: Response) {\n    const accessToken = req.cookies['access_token'];\n    const decodedToken = this.jwtService.decode(accessToken);\n    const token = await this.authService.signInService(req.user, decodedToken);\n    if (!token) {\n      res.redirect(this.front_url + '/login?results=failed');\n      return res.status(HttpStatus.OK).send();\n    }\n    let redirectUrl;\n    if (decodedToken) {\n      redirectUrl = req.query.state || this.front_url + '/services/github';\n    } else {\n      redirectUrl = this.front_url + '/login';\n      redirectUrl += '?access_token=' + token.access_token;\n    }\n    res.redirect(`${redirectUrl}`);\n    return res.status(HttpStatus.OK).send();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Get the user profile' })\n  @ApiResponse({ status: 200, description: 'Profile retrieved successfully.' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ type: User })\n  async getProfile(@Req() request) {\n    return await this.authService.getProfile(request.user);\n  }\n\n  @Put('profile')\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Update the user profile' })\n  @ApiResponse({ status: 200, description: 'Profile updated successfully.' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiBody({ type: RegisterDto })\n  async updateProfile(@Body() body: CreateUserDto) {\n    return await this.authService.updateProfile(body);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Put('password')\n  @ApiExcludeEndpoint()\n  updatePassword(@Body() body: { password: string }) {\n    return this.authService.updatePassword(body.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nServiceModule\n\nServiceModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nServiceModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nElementService\n\nElementService\n\nAuthModule -->\n\nElementService->AuthModule\n\n\n\n\n\nGithubStrategy\n\nGithubStrategy\n\nAuthModule -->\n\nGithubStrategy->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMsStrategy\n\nMsStrategy\n\nAuthModule -->\n\nMsStrategy->AuthModule\n\n\n\n\n\nServiceTokenService\n\nServiceTokenService\n\nAuthModule -->\n\nServiceTokenService->AuthModule\n\n\n\n\n\nSpotifyStrategy\n\nSpotifyStrategy\n\nAuthModule -->\n\nSpotifyStrategy->AuthModule\n\n\n\n\n\nTwitchStrategy\n\nTwitchStrategy\n\nAuthModule -->\n\nTwitchStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            ElementService\n                        \n                        \n                            GithubStrategy\n                        \n                        \n                            GoogleStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MsStrategy\n                        \n                        \n                            ServiceTokenService\n                        \n                        \n                            SpotifyStrategy\n                        \n                        \n                            TwitchStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServiceModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UserModule } from '../models/users/user.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JwtAuthGuard } from './guards/jwt.guard';\nimport { GoogleStrategy } from './strategies/google.strategy';\nimport { ServiceModule } from '../models/services/service.module';\nimport { MsStrategy } from './strategies/ms.strategy';\nimport { ServiceTokenService } from '../models/servicesTokens/serviceToken.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ServiceToken } from '../models/servicesTokens/entities/serviceToken.entity';\nimport { Service } from '../models/services/entities/service.entity';\nimport { User } from '../models/users/entities/user.entity';\nimport { TwitchStrategy } from './strategies/twitch.strategy';\nimport { ElementService } from '../models/elements/element.service';\nimport { Element } from '../models/elements/entities/element.entity';\nimport { GithubStrategy } from './strategies/github.strategy';\nimport { SpotifyStrategy } from './strategies/spotify.strategy';\n\n@Module({\n  imports: [\n    UserModule,\n    ServiceModule,\n    PassportModule,\n    TypeOrmModule.forFeature([ServiceToken, Service, User, Element]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('app.secret'),\n        signOptions: { expiresIn: '3h' },\n        global: true,\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useValue: JwtAuthGuard,\n    },\n    LocalStrategy,\n    JwtStrategy,\n    GoogleStrategy,\n    MsStrategy,\n    TwitchStrategy,\n    GithubStrategy,\n    SpotifyStrategy,\n    ServiceTokenService,\n    ElementService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createToken\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                registerServiceToken\n                            \n                            \n                                    Async\n                                signInService\n                            \n                            \n                                updatePassword\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService, serviceTokenService: ServiceTokenService, serviceManager: ServiceManager)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceManager\n                                                  \n                                                        \n                                                                        ServiceManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createToken\n                        \n                    \n                \n            \n            \n                \ncreateToken(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { access_token: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerServiceToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerServiceToken(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInService\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInService(user: any, decodedToken: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(newPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(user: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UserService } from '../models/users/user.service';\nimport { ServiceTokenService } from '../models/servicesTokens/serviceToken.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as argon2 from 'argon2';\nimport { User } from '../models/users/entities/user.entity';\nimport { ServiceManager } from '../models/services/service-manager.service';\nimport { CreateUserDto } from 'src/models/users/dto/create-user.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private jwtService: JwtService,\n    private serviceTokenService: ServiceTokenService,\n    private serviceManager: ServiceManager,\n  ) {}\n\n  async validateUser(email: string, password: string): Promise {\n    const user: User = await this.usersService.findOneEmail(email);\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    if (!password) {\n      return user;\n    }\n    const isMatch: boolean = await argon2.verify(user.password, password);\n    if (!isMatch) {\n      throw new BadRequestException('Password does not match');\n    }\n    return user;\n  }\n\n  createToken(user: any) {\n    const payload = { email: user.email, userId: user.id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async signInService(user: any, decodedToken: any) {\n    if (!user) {\n      throw new BadRequestException('Unauthenticated');\n    }\n    if (decodedToken) {\n      user.email = decodedToken.email;\n    }\n    const userExists = await this.usersService.findOneEmail(user.email);\n    let registeredUser;\n    if (!userExists) {\n      registeredUser = await this.register(user);\n    } else {\n      registeredUser = await this.login(user);\n    }\n    await this.registerServiceToken(user);\n    return registeredUser;\n  }\n\n  async login(user: { email: string; password: string }) {\n    const { email, password } = user;\n    const userInfo = await this.validateUser(email, password);\n    return this.createToken(userInfo);\n  }\n\n  async register(user: any) {\n    const existingUser = await this.usersService.findOneEmail(user.email);\n    if (existingUser) {\n      throw new BadRequestException('email already exists');\n    }\n    let newUser;\n    if (user.password) {\n      // Using basic email / password auth\n      const hashedPassword = await argon2.hash(user.password);\n      newUser = {\n        ...user,\n        password: hashedPassword,\n        surname: user.surname,\n        lastname: user.lastname,\n        createdWithService: false,\n      };\n    } else {\n      // Using 20auth auth\n      const hashedPassword = await argon2.hash(user.email);\n      newUser = {\n        ...user,\n        password: hashedPassword,\n        surname: user.surname,\n        lastname: user.lastname,\n        createdWithService: true,\n      };\n    }\n    const userDb = await this.usersService.create(newUser);\n    return this.createToken(userDb);\n  }\n\n  async registerServiceToken(user: any) {\n    if (!user.provider) {\n      return; // No 2Oauth login\n    }\n    if (!user.accessToken || !user.refreshToken) {\n      throw new BadRequestException('No access nor refresh token provided');\n    }\n\n    const existingUser = await this.usersService.findOneEmail(user.email);\n    if (!existingUser) {\n      throw new BadRequestException('User not found');\n    }\n\n    const serviceProvider = await this.serviceManager.findByName(user.provider);\n    if (!serviceProvider) {\n      throw new BadRequestException('Service not found');\n    }\n\n    const newToken = {\n      key: user.accessToken,\n      userId: existingUser.id,\n      serviceId: serviceProvider.id,\n      refresh_key: user.refreshToken,\n      time_received: Date.now(),\n      time_expire: Date.now(),\n    };\n\n    const existindToken = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: existingUser.id },\n        service: { id: serviceProvider.id },\n      },\n    });\n    if (!existindToken) {\n      return this.serviceTokenService.create(newToken);\n    } else {\n      return this.serviceTokenService.update(existindToken.id, newToken);\n    }\n  }\n\n  async getProfile(user: any) {\n    return await this.usersService.findOneEmail(user.email);\n  }\n\n  async updateProfile(user: CreateUserDto) {\n    const existingUser = await this.usersService.findOneEmail(user.email);\n    if (!existingUser) {\n      throw new BadRequestException('User not found');\n    }\n    const argon2HashRegex = /^\\$argon2(id|i|d)\\$.+$/;\n    const isArgon2Hash = argon2HashRegex.test(user.password);\n    if (!isArgon2Hash) {\n      console.log('new mot de passe');\n      user.password = await argon2.hash(user.password);\n    }\n    await this.usersService.update(existingUser.id, user);\n  }\n\n  // TODO\n  updatePassword(newPassword) {\n    return `mettre à jour le mot de passe de l\\'utilisateur: ${newPassword}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseAction.html":{"url":"injectables/BaseAction.html","title":"injectable - BaseAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/base-action.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                deleteAction\n                            \n                            \n                                    Abstract\n                                execAction\n                            \n                            \n                                    Abstract\n                                getServiceId\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                            \n                                    Abstract\n                                registerElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, type: string, serviceId: number, url: string, cronjob: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/base-action.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cronjob\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/base-action.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/base-action.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getServiceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServiceId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/base-action.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/base-action.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/base-action.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/action-classes/base-action.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ElementService } from '../element.service';\nimport { CreateElementDto } from '../dto/create-element.dto';\n\n@Injectable()\nexport abstract class BaseAction {\n  constructor(\n    protected name: string,\n    protected description: string,\n    protected type: string,\n    protected serviceId: number,\n    protected url: string,\n    protected cronjob: boolean,\n  ) {}\n\n  async initInDb(elementService: ElementService) {\n    const existingElements = await elementService.findByName(this.name);\n    if (!existingElements) {\n      const element = new CreateElementDto();\n      element.name = this.name;\n      element.description = this.description;\n      element.type = this.type;\n      element.serviceId = this.serviceId;\n      element.url = this.url;\n      return await elementService.create(element);\n    }\n    return existingElements;\n  }\n\n  needCronjob() {\n    return this.cronjob;\n  }\n\n  abstract registerElement();\n  abstract getServiceId();\n  abstract execAction(userId: number, parameters: any);\n  abstract deleteAction(userId: number);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseArea.html":{"url":"injectables/BaseArea.html","title":"injectable - BaseArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/area-classes/base-area.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStatus\n                            \n                            \n                                    Async\n                                deleteArea\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                    Async\n                                execReactions\n                            \n                            \n                                isActive\n                            \n                            \n                                needCronjob\n                            \n                            \n                                    Async\n                                storeNewToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, parameter: any, active: boolean, userId: number, actionId: number, areaReactionService: AreaReactionService, reactionRegistry: ReactionRegistry, serviceRegistry: ServiceRegistry, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/areas/area-classes/base-area.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaReactionService\n                                                  \n                                                        \n                                                                        AreaReactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReactions(areaId: number, previousParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                areaId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                previousParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/areas/area-classes/base-area.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areas/area-classes/base-area.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AreaReactionService } from 'src/models/areasReactions/areaReaction.service';\nimport { ActionRegistry } from 'src/models/elements/action-classes/action-registry.service';\nimport { ReactionRegistry } from 'src/models/elements/reaction-classes/reaction-registry.service';\nimport { ServiceRegistry } from 'src/models/services/service-classes/service-registry.service';\n\n@Injectable()\nexport class BaseArea {\n  constructor(\n    public name: string,\n    private description: string,\n    private parameter: any,\n    private active: boolean,\n    private userId: number,\n    private actionId: number,\n    private readonly areaReactionService: AreaReactionService,\n    private readonly reactionRegistry: ReactionRegistry,\n    private readonly serviceRegistry: ServiceRegistry,\n    private readonly actionRegistry: ActionRegistry,\n  ) {}\n\n  async deleteArea() {\n    const action = this.actionRegistry.getElement(this.actionId);\n    await action.deleteAction(this.userId);\n  }\n\n  isActive() {\n    return this.active;\n  }\n\n  changeStatus() {\n    this.active = !this.active;\n  }\n\n  needCronjob() {\n    const action = this.actionRegistry.getElement(this.actionId);\n    return action.needCronjob();\n  }\n\n  async storeNewToken() {\n    const action = this.actionRegistry.getElement(this.actionId);\n    const service = this.serviceRegistry.getElement(action.getServiceId());\n    await service.storeNewToken(this.userId);\n  }\n\n  async execAction() {\n    const action = this.actionRegistry.getElement(this.actionId);\n    return await action.execAction(this.userId, this.parameter);\n  }\n\n  async execReactions(areaId: number, previousParams: any) {\n    const areaReactions = await this.areaReactionService.findByAction(areaId);\n    for (const areaReaction of areaReactions) {\n      const reaction = this.reactionRegistry.getElement(areaReaction.elementId);\n      const service = this.serviceRegistry.getElement(reaction.getServiceId());\n      console.log('Refreshing access token for service: ', service.name);\n      await service.storeNewToken(this.userId);\n      const allParams = {\n        ...previousParams,\n        ...areaReaction.parameter_reaction,\n      };\n      previousParams = await reaction.execReaction(this.userId, allParams);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseReaction.html":{"url":"injectables/BaseReaction.html","title":"injectable - BaseReaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/base-reaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                execReaction\n                            \n                            \n                                    Abstract\n                                getServiceId\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                    Abstract\n                                registerElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, type: string, serviceId: number, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/base-reaction.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/base-reaction.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getServiceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServiceId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/base-reaction.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/base-reaction.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/base-reaction.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ElementService } from '../element.service';\nimport { CreateElementDto } from '../dto/create-element.dto';\n\n@Injectable()\nexport abstract class BaseReaction {\n  constructor(\n    protected name: string,\n    protected description: string,\n    protected type: string,\n    protected serviceId: number,\n    protected url: string,\n  ) {}\n\n  async initInDb(elementService: ElementService) {\n    const existingElements = await elementService.findByName(this.name);\n    if (!existingElements) {\n      const element = new CreateElementDto();\n      element.name = this.name;\n      element.description = this.description;\n      element.type = this.type;\n      element.serviceId = this.serviceId;\n      element.url = this.url;\n      return await elementService.create(element);\n    }\n    return existingElements;\n  }\n\n  abstract registerElement();\n  abstract getServiceId();\n  abstract execReaction(userId: number, parameters: any);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/base-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                front_data\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                need_token\n                            \n                            \n                                    Protected\n                                serviceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                    Abstract\n                                storeNewToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(name: string, description: string, front_data: string, need_token: boolean, actions: BaseAction[], reactions: BaseReaction[])\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/base-service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        front_data\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        need_token\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        BaseAction[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactions\n                                                  \n                                                        \n                                                                        BaseReaction[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(services: ServiceManager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/base-service.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                            ServiceManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/base-service.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/services/service-classes/base-service.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/services/service-classes/base-service.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/services/service-classes/base-service.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/models/services/service-classes/base-service.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/services/service-classes/base-service.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ServiceManager } from '../service-manager.service';\nimport { CreateServiceDto } from '../dto/create-service.dto';\nimport { BaseAction } from '../../elements/action-classes/base-action.service';\nimport { BaseReaction } from 'src/models/elements/reaction-classes/base-reaction.service';\n\n@Injectable()\nexport abstract class BaseService {\n  protected serviceId: number;\n\n  protected constructor(\n    public name: string,\n    public description: string,\n    public front_data: string,\n    public need_token: boolean,\n    protected actions: BaseAction[],\n    protected reactions: BaseReaction[],\n  ) {}\n\n  async initInDb(services: ServiceManager) {\n    const existingService = await services.findByName(this.name);\n    if (!existingService) {\n      const service = new CreateServiceDto();\n      service.name = this.name;\n      service.description = this.description;\n      service.front_data = this.front_data;\n      service.key_url = 'key_url';\n      service.need_token = this.need_token;\n      const newService = await services.create(service);\n      this.serviceId = newService.id;\n      return newService;\n    } else {\n      this.serviceId = existingService.id;\n      return existingService;\n    }\n  }\n\n  abstract storeNewToken(userId: number);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigsModule.html":{"url":"modules/ConfigsModule.html","title":"module - ConfigsModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport base_config from './base.config';\nimport database_config from './database.config';\nimport google_config from './google.config';\nimport ms_config from './ms_config';\nimport twitch_config from './twitch.config';\nimport githubConfig from './github.config';\nimport spotifyConfig from './spotify.config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        base_config,\n        database_config,\n        google_config,\n        ms_config,\n        twitch_config,\n        githubConfig,\n        spotifyConfig,\n      ],\n      isGlobal: true,\n    }),\n  ],\n})\nexport class ConfigsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigsService.html":{"url":"injectables/ConfigsService.html","title":"injectable - ConfigsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    test\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        test\n                    \n                \n\n                \n                    \n                        gettest()\n                    \n                \n                            \n                                \n                                    Defined in src/config/config.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ConfigsService {\n  constructor(private configService: ConfigService) {}\n\n  get test(): string {\n    return this.configService.get('app.test');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAreaDto.html":{"url":"classes/CreateAreaDto.html","title":"class - CreateAreaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAreaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actionId\n                            \n                            \n                                    \n                                active\n                            \n                            \n                                color\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                last_executed\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameter\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the linked action (element)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, description: 'active the area (true/false)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Change my profile picture when I post a picture', description: 'The description of the area'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_executed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Area1', description: 'The name of the area'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'The parameter of the action'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  last_executed: Date;\n  userId: number;\n  color: string;\n}\n\nexport class ReactionDto {\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class AreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the area_action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    example: 3,\n    description: 'The id of the linked action(element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [ReactionDto],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [ReactionDto];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\nexport class ActionDto {\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Action {\n  @ApiProperty({ example: 1, description: 'The id of the action' })\n  id: number;\n\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Reaction {\n  @ApiProperty({ example: 1, description: 'The id of the area_reaction' })\n  id: number;\n\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class Area {\n  @ApiProperty({ example: 1, description: 'The id of the area' })\n  id: number;\n\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    type: Number,\n    description: 'The linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [Reaction],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [Reaction];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAreaReactionDto.html":{"url":"classes/CreateAreaReactionDto.html","title":"class - CreateAreaReactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAreaReactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areasReactions/dto/create-areaReaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areaId\n                            \n                            \n                                elementId\n                            \n                            \n                                order\n                            \n                            \n                                parameter_reaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        areaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/dto/create-areaReaction.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/dto/create-areaReaction.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/dto/create-areaReaction.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parameter_reaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/areasReactions/dto/create-areaReaction.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAreaReactionDto {\n  parameter_reaction: any;\n  order: number;\n  elementId: number;\n  areaId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDictDataGithubDto.html":{"url":"classes/CreateDictDataGithubDto.html","title":"class - CreateDictDataGithubDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDictDataGithubDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictDataGithub/dto/create-dictDataGithub.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elementName\n                            \n                            \n                                lastDataId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elementName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/dto/create-dictDataGithub.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastDataId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/dto/create-dictDataGithub.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/dto/create-dictDataGithub.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDictDataGithubDto {\n  userId: number;\n  lastDataId: string;\n  elementName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDictEmailsGmailDto.html":{"url":"classes/CreateDictEmailsGmailDto.html","title":"class - CreateDictEmailsGmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDictEmailsGmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictEmailsGmail/dto/create-dictEmailsGmail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elementName\n                            \n                            \n                                lastEmailId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elementName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/dto/create-dictEmailsGmail.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/dto/create-dictEmailsGmail.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/dto/create-dictEmailsGmail.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDictEmailsGmailDto {\n  userId: number;\n  lastEmailId: string;\n  elementName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDictEmailsOutlookDto.html":{"url":"classes/CreateDictEmailsOutlookDto.html","title":"class - CreateDictEmailsOutlookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDictEmailsOutlookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictEmailsOutlook/dto/create-dictEmailsOutlook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elementName\n                            \n                            \n                                lastEmailId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elementName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/dto/create-dictEmailsOutlook.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/dto/create-dictEmailsOutlook.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/dto/create-dictEmailsOutlook.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDictEmailsOutlookDto {\n  userId: number;\n  lastEmailId: string;\n  elementName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateElementDto.html":{"url":"classes/CreateElementDto.html","title":"class - CreateElementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateElementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/dto/create-element.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                elementId\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                serviceId\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Send an Email with Gmail', description: 'The description of the element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/dto/create-element.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/dto/create-element.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Send an Email', description: 'The name of the element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/dto/create-element.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the linked service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/dto/create-element.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'reaction', description: 'The type of the element (action/reaction)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/dto/create-element.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://google/send_mail', description: 'The url needed to run the element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/dto/create-element.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateElementDto {\n  @ApiProperty({\n    example: 'Send an Email',\n    description: 'The name of the element',\n  })\n  name: string;\n\n  @ApiProperty({\n    example: 'Send an Email with Gmail',\n    description: 'The description of the element',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'reaction',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({ example: 1, description: 'The id of the linked service' })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://google/send_mail',\n    description: 'The url needed to run the element',\n  })\n  url: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the element',\n  })\n  elementId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto.html":{"url":"classes/CreateServiceDto.html","title":"class - CreateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                front_data\n                            \n                            \n                                    \n                                key_url\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                need_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Use Gmail and GoogleCalendar', description: 'The description of the service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/dto/create-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'A definir', description: 'A definir'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/dto/create-service.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Voir si on utilise', description: 'Voir si on utilise'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/dto/create-service.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Google', description: 'The name of the service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/dto/create-service.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'A definir', description: 'A definir'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/dto/create-service.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateServiceDto {\n  @ApiProperty({ example: 'Google', description: 'The name of the service' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Use Gmail and GoogleCalendar',\n    description: 'The description of the service',\n  })\n  description: string;\n\n  @ApiProperty({ example: 'A definir', description: 'A definir' })\n  front_data: string;\n\n  @ApiProperty({ example: 'A definir', description: 'A definir' })\n  need_token: boolean;\n\n  @ApiProperty({\n    example: 'Voir si on utilise',\n    description: 'Voir si on utilise',\n  })\n  key_url: string;\n}\n\nexport class Status {\n  @ApiProperty({ example: true, description: 'Object is actif' })\n  status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceTokenDto.html":{"url":"classes/CreateServiceTokenDto.html","title":"class - CreateServiceTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/servicesTokens/dto/create-serviceToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                refresh_key\n                            \n                            \n                                serviceId\n                            \n                            \n                                time_expire\n                            \n                            \n                                time_received\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/dto/create-serviceToken.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/dto/create-serviceToken.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/dto/create-serviceToken.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time_expire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/dto/create-serviceToken.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time_received\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/dto/create-serviceToken.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/dto/create-serviceToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateServiceTokenDto {\n  key: string;\n  refresh_key: string;\n  time_received: number;\n  time_expire: number;\n  userId: number;\n  serviceId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdWithService\n                            \n                            \n                                email\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdWithService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  surname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  createdWithService: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DictDataGithub.html":{"url":"entities/DictDataGithub.html","title":"entity - DictDataGithub","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DictDataGithub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictDataGithub/entities/dictDataGithub.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                elementName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastDataId\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/entities/dictDataGithub.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/entities/dictDataGithub.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastDataId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/entities/dictDataGithub.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictDataGithub/entities/dictDataGithub.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class DictDataGithub {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  userId: number;\n\n  @Column()\n  lastDataId: string;\n\n  @Column()\n  elementName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DictDataGithubService.html":{"url":"injectables/DictDataGithubService.html","title":"injectable - DictDataGithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DictDataGithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictDataGithub/dictDataGithub.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUserId\n                            \n                            \n                                    Async\n                                findByUserIdElementName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dictDataGithubRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/dictDataGithub/dictDataGithub.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictDataGithubRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDictIssuesGithubDto: CreateDictDataGithubDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDictIssuesGithubDto\n                                            \n                                                            CreateDictDataGithubDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserIdElementName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserIdElementName(userId: number, elementName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                elementName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: number, lastDataId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictDataGithub/dictDataGithub.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastDataId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateDictDataGithubDto } from './dto/create-dictDataGithub.dto';\nimport { DictDataGithub } from './entities/dictDataGithub.entity';\n\n@Injectable()\nexport class DictDataGithubService {\n  constructor(\n    @InjectRepository(DictDataGithub)\n    private dictDataGithubRepository: Repository,\n  ) {}\n\n  async create(\n    createDictIssuesGithubDto: CreateDictDataGithubDto,\n  ): Promise {\n    const dictIssuesGithub = new DictDataGithub();\n    dictIssuesGithub.userId = createDictIssuesGithubDto.userId;\n    dictIssuesGithub.lastDataId = createDictIssuesGithubDto.lastDataId;\n    dictIssuesGithub.elementName = createDictIssuesGithubDto.elementName;\n\n    return this.dictDataGithubRepository.save(dictIssuesGithub);\n  }\n\n  async findAll(): Promise {\n    return await this.dictDataGithubRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.dictDataGithubRepository.findOneBy({ id: id });\n  }\n\n  async findByUserId(userId: number): Promise {\n    return await this.dictDataGithubRepository.findOneBy({ userId: userId });\n  }\n\n  async findByUserIdElementName(\n    userId: number,\n    elementName: string,\n  ): Promise {\n    return await this.dictDataGithubRepository.findOneBy({\n      userId: userId,\n      elementName: elementName,\n    });\n  }\n\n  async remove(id: string): Promise {\n    await this.dictDataGithubRepository.delete(id);\n  }\n\n  async update(userId: number, lastDataId: string): Promise {\n    await this.dictDataGithubRepository.update({ userId }, { lastDataId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DictEmailsGmail.html":{"url":"entities/DictEmailsGmail.html","title":"entity - DictEmailsGmail","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DictEmailsGmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictEmailsGmail/entities/dictEmailsGmail.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                elementName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastEmailId\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/entities/dictEmailsGmail.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/entities/dictEmailsGmail.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/entities/dictEmailsGmail.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsGmail/entities/dictEmailsGmail.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class DictEmailsGmail {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  userId: number;\n\n  @Column()\n  lastEmailId: string;\n\n  @Column()\n  elementName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DictEmailsGmailService.html":{"url":"injectables/DictEmailsGmailService.html","title":"injectable - DictEmailsGmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DictEmailsGmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictEmailsGmail/dictEmailsGmail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUserId\n                            \n                            \n                                    Async\n                                findByUserIdElementName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dictEmailsGmailRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictEmailsGmailRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDictEmailsGmailDto: CreateDictEmailsGmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDictEmailsGmailDto\n                                            \n                                                            CreateDictEmailsGmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserIdElementName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserIdElementName(userId: number, elementName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                elementName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: number, lastEmailId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsGmail/dictEmailsGmail.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastEmailId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateDictEmailsGmailDto } from './dto/create-dictEmailsGmail.dto';\nimport { DictEmailsGmail } from './entities/dictEmailsGmail.entity';\n\n@Injectable()\nexport class DictEmailsGmailService {\n  constructor(\n    @InjectRepository(DictEmailsGmail)\n    private dictEmailsGmailRepository: Repository,\n  ) {}\n\n  async create(\n    createDictEmailsGmailDto: CreateDictEmailsGmailDto,\n  ): Promise {\n    const dictEmailsGmail = new DictEmailsGmail();\n    dictEmailsGmail.userId = createDictEmailsGmailDto.userId;\n    dictEmailsGmail.lastEmailId = createDictEmailsGmailDto.lastEmailId;\n    dictEmailsGmail.elementName = createDictEmailsGmailDto.elementName;\n\n    return this.dictEmailsGmailRepository.save(dictEmailsGmail);\n  }\n\n  async findAll(): Promise {\n    return await this.dictEmailsGmailRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.dictEmailsGmailRepository.findOneBy({ id: id });\n  }\n\n  async findByUserId(userId: number): Promise {\n    return await this.dictEmailsGmailRepository.findOneBy({ userId: userId });\n  }\n\n  async findByUserIdElementName(\n    userId: number,\n    elementName: string,\n  ): Promise {\n    return await this.dictEmailsGmailRepository.findOneBy({\n      userId: userId,\n      elementName: elementName,\n    });\n  }\n\n  async remove(id: string): Promise {\n    await this.dictEmailsGmailRepository.delete(id);\n  }\n\n  async update(userId: number, lastEmailId: string): Promise {\n    await this.dictEmailsGmailRepository.update({ userId }, { lastEmailId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DictEmailsOutlook.html":{"url":"entities/DictEmailsOutlook.html","title":"entity - DictEmailsOutlook","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DictEmailsOutlook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictEmailsOutlook/entities/dictEmailsOutlook.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                elementName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastEmailId\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/entities/dictEmailsOutlook.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/entities/dictEmailsOutlook.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastEmailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/entities/dictEmailsOutlook.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/dictEmailsOutlook/entities/dictEmailsOutlook.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class DictEmailsOutlook {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  userId: number;\n\n  @Column()\n  lastEmailId: string;\n\n  @Column()\n  elementName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DictEmailsOutlookService.html":{"url":"injectables/DictEmailsOutlookService.html","title":"injectable - DictEmailsOutlookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DictEmailsOutlookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUserId\n                            \n                            \n                                    Async\n                                findByUserIdElementName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dictEmailsOutlookRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictEmailsOutlookRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDictEmailsOutlookDto: CreateDictEmailsOutlookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDictEmailsOutlookDto\n                                            \n                                                            CreateDictEmailsOutlookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserIdElementName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserIdElementName(userId: number, elementName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                elementName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: number, lastEmailId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastEmailId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateDictEmailsOutlookDto } from './dto/create-dictEmailsOutlook.dto';\nimport { DictEmailsOutlook } from './entities/dictEmailsOutlook.entity';\n\n@Injectable()\nexport class DictEmailsOutlookService {\n  constructor(\n    @InjectRepository(DictEmailsOutlook)\n    private dictEmailsOutlookRepository: Repository,\n  ) {}\n\n  async create(\n    createDictEmailsOutlookDto: CreateDictEmailsOutlookDto,\n  ): Promise {\n    const dictEmailsOutlook = new DictEmailsOutlook();\n    dictEmailsOutlook.userId = createDictEmailsOutlookDto.userId;\n    dictEmailsOutlook.lastEmailId = createDictEmailsOutlookDto.lastEmailId;\n    dictEmailsOutlook.elementName = createDictEmailsOutlookDto.elementName;\n\n    return this.dictEmailsOutlookRepository.save(dictEmailsOutlook);\n  }\n\n  async findAll(): Promise {\n    return await this.dictEmailsOutlookRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.dictEmailsOutlookRepository.findOneBy({ id: id });\n  }\n\n  async findByUserId(userId: number): Promise {\n    return await this.dictEmailsOutlookRepository.findOneBy({ userId: userId });\n  }\n\n  async findByUserIdElementName(\n    userId: number,\n    elementName: string,\n  ): Promise {\n    return await this.dictEmailsOutlookRepository.findOneBy({\n      userId: userId,\n      elementName: elementName,\n    });\n  }\n\n  async remove(id: string): Promise {\n    await this.dictEmailsOutlookRepository.delete(id);\n  }\n\n  async update(userId: number, lastEmailId: string): Promise {\n    await this.dictEmailsOutlookRepository.update({ userId }, { lastEmailId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Element.html":{"url":"entities/Element.html","title":"entity - Element","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/entities/element.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                area_reaction\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                service\n                            \n                            \n                                    \n                                    \n                                serviceId\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, area => area.action)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area_reaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AreaReaction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, areaReaction => areaReaction.element)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Send an Email with Gmail', description: 'The description of the element'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the element'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Send an Email', description: 'The name of the element'})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Service\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, service => service.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the linked service'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'reaction', description: 'The type of the element (action/reaction)'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://google/send_mail', description: 'The url needed to run the element'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/elements/entities/element.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { Service } from '../../services/entities/service.entity';\nimport { AreaReaction } from '../../areasReactions/entities/areaReaction.entity';\nimport { Area } from '../../areas/entities/area.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Element {\n  @ApiProperty({ example: 1, description: 'The id of the element' })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({\n    example: 'Send an Email',\n    description: 'The name of the element',\n  })\n  @Column({ unique: true })\n  name: string;\n\n  @ApiProperty({\n    example: 'Send an Email with Gmail',\n    description: 'The description of the element',\n  })\n  @Column()\n  description: string;\n\n  @ManyToOne(() => Service, (service) => service.id)\n  service: Service;\n\n  @ApiProperty({ example: 1, description: 'The id of the linked service' })\n  @Column()\n  serviceId: number;\n\n  @OneToMany(() => AreaReaction, (areaReaction) => areaReaction.element)\n  area_reaction: AreaReaction[];\n\n  @OneToMany(() => Area, (area) => area.action)\n  area: Area[];\n\n  @ApiProperty({\n    example: 'reaction',\n    description: 'The type of the element (action/reaction)',\n  })\n  @Column()\n  type: string;\n\n  @ApiProperty({\n    example: 'https://google/send_mail',\n    description: 'The url needed to run the element',\n  })\n  @Column()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ElementController.html":{"url":"controllers/ElementController.html","title":"controller - ElementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ElementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/element.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllActions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllReactions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMyActions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMyReactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('elements/:id')@Public()@ApiOperation({summary: 'Get information about an element'})@ApiResponse({status: 200, description: 'Informations retrieved successfully.'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: Element})\n                \n            \n\n                    \n                        \n                            Defined in src/models/elements/element.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('elements')@Public()@ApiOperation({summary: 'Get all elements'})@ApiResponse({status: 200, description: 'List of elements retrieved successfully.'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/elements/element.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAllActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllActions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('actions')@Public()@ApiOperation({summary: 'Get all actions'})@ApiResponse({status: 200, description: 'List of actions retrieved successfully.'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/elements/element.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAllReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllReactions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('reactions')@Public()@ApiOperation({summary: 'Get all reactions'})@ApiResponse({status: 200, description: 'List of reactions retrieved successfully.'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/elements/element.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getMyActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyActions(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('actions/me')@ApiOperation({summary: 'Get all actions available for the user'})@ApiResponse({status: 200, description: 'List of actions retrieved successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/elements/element.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getMyReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyReactions(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('reactions/me')@ApiOperation({summary: 'Get all reactions available for the user'})@ApiResponse({status: 200, description: 'List of reactions retrieved successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/elements/element.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  UseGuards,\n  Req,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { Element } from './entities/element.entity';\nimport { ElementService } from './element.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt.guard';\nimport { Public } from 'src/common/constants/metadata';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@UseGuards(JwtAuthGuard)\n@ApiTags('elements')\n@Controller()\nexport class ElementController {\n  constructor(private readonly elementService: ElementService) {}\n\n  @Get('elements')\n  @Public()\n  @ApiOperation({ summary: 'Get all elements' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of elements retrieved successfully.',\n  })\n  @ApiResponse({ type: [Element] })\n  async getAll(): Promise {\n    return await this.elementService.findAll();\n  }\n\n  @Get('elements/:id')\n  @Public()\n  @ApiOperation({ summary: 'Get information about an element' })\n  @ApiResponse({\n    status: 200,\n    description: 'Informations retrieved successfully.',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: Element })\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    return await this.elementService.findOne(id);\n  }\n\n  @Get('actions')\n  @Public()\n  @ApiOperation({ summary: 'Get all actions' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of actions retrieved successfully.',\n  })\n  @ApiResponse({ type: [Element] })\n  async getAllActions() {\n    return await this.elementService.findActions();\n  }\n\n  @Get('actions/me')\n  @ApiOperation({ summary: 'Get all actions available for the user' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of actions retrieved successfully.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ type: [Element] })\n  async getMyActions(@Req() request) {\n    return await this.elementService.findUserActions(request.user.userId);\n  }\n\n  @Get('reactions')\n  @Public()\n  @ApiOperation({ summary: 'Get all reactions' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of reactions retrieved successfully.',\n  })\n  @ApiResponse({ type: [Element] })\n  async getAllReactions() {\n    return await this.elementService.findReactions();\n  }\n\n  @Get('reactions/me')\n  @ApiOperation({ summary: 'Get all reactions available for the user' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of reactions retrieved successfully.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ type: [Element] })\n  async getMyReactions(@Req() request) {\n    return await this.elementService.findUserReactions(request.user.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ElementModule.html":{"url":"modules/ElementModule.html","title":"module - ElementModule","body":"\n                   \n\n\n\n\n    Modules\n    ElementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ElementModule\n\n\n\ncluster_ElementModule_providers\n\n\n\ncluster_ElementModule_exports\n\n\n\n\nElementService \n\nElementService \n\n\n\nElementModule\n\nElementModule\n\nElementService  -->\n\nElementModule->ElementService \n\n\n\n\n\nElementService\n\nElementService\n\nElementModule -->\n\nElementService->ElementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/elements/element.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ElementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ElementController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ElementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // element.module.ts\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ElementService } from './element.service';\nimport { ElementController } from './element.controller';\nimport { Element } from './entities/element.entity';\nimport { Service } from '../services/entities/service.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Element, Service])],\n  providers: [ElementService],\n  controllers: [ElementController],\n  exports: [ElementService],\n})\nexport class ElementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementService.html":{"url":"injectables/ElementService.html","title":"injectable - ElementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/element.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findActions\n                            \n                            \n                                    Async\n                                findActionsInServiceById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findReactions\n                            \n                            \n                                    Async\n                                findReactionsInServiceById\n                            \n                            \n                                    Async\n                                findUserActions\n                            \n                            \n                                    Async\n                                findUserReactions\n                            \n                            \n                                    Async\n                                getServiceByName\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementsRepository: Repository, serviceRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/element.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createElementDto: CreateElementDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createElementDto\n                                            \n                                                            CreateElementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    findActions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findActionsInServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findActionsInServiceById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    findReactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findReactionsInServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findReactionsInServiceById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserActions(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserReactions(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getServiceByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServiceByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/element.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateElementDto } from './dto/create-element.dto';\nimport { Element } from './entities/element.entity';\nimport { Service } from '../services/entities/service.entity';\n\n@Injectable()\nexport class ElementService {\n  constructor(\n    @InjectRepository(Element)\n    private readonly elementsRepository: Repository,\n    @InjectRepository(Service)\n    private readonly serviceRepository: Repository,\n  ) {}\n\n  async create(createElementDto: CreateElementDto): Promise {\n    const service = await this.serviceRepository.findOne({\n      where: { id: createElementDto.serviceId },\n    });\n    if (!service) {\n      throw new Error('Service not found');\n    }\n\n    const element = new Element();\n    element.name = createElementDto.name;\n    element.description = createElementDto.description;\n    element.type = createElementDto.type;\n    element.service = service;\n    element.url = createElementDto.url;\n\n    return this.elementsRepository.save(element);\n  }\n\n  async findAll(): Promise {\n    return await this.elementsRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.elementsRepository.findOneBy({ id: id });\n  }\n\n  async findByName(name: string): Promise {\n    return await this.elementsRepository.findOneBy({ name: name });\n  }\n\n  async getServiceByName(name: string): Promise {\n    const service = await this.serviceRepository.findOne({\n      where: { name: name },\n    });\n    if (!service) {\n      throw new Error('Service not found');\n    }\n    return service.id;\n  }\n\n  async remove(id: string): Promise {\n    await this.elementsRepository.delete(id);\n  }\n\n  async findActionsInServiceById(id: number): Promise {\n    return await this.elementsRepository.findBy({\n      service: { id: id },\n      type: 'action',\n    });\n  }\n\n  async findReactionsInServiceById(id: number): Promise {\n    return await this.elementsRepository.findBy({\n      service: { id: id },\n      type: 'reaction',\n    });\n  }\n\n  async findActions() {\n    return await this.elementsRepository.findBy({ type: 'action' });\n  }\n\n  async findUserActions(userId: number) {\n    const monType = 'action';\n    return await this.elementsRepository\n      .createQueryBuilder('element')\n      .innerJoin('element.service', 'service')\n      .innerJoin('service.serviceToken', 'serviceToken')\n      .where('serviceToken.userId = :userId', { userId })\n      .andWhere('element.type = :monType', { monType })\n      .getMany();\n  }\n\n  async findReactions() {\n    return await this.elementsRepository.findBy({ type: 'reaction' });\n  }\n\n  async findUserReactions(userId: number) {\n    const monType = 'reaction';\n    return await this.elementsRepository\n      .createQueryBuilder('element')\n      .innerJoin('element.service', 'service')\n      .innerJoin('service.serviceToken', 'serviceToken')\n      .where('serviceToken.userId = :userId', { userId })\n      .andWhere('element.type = :monType', { monType })\n      .getMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubActionIssueAssigned.html":{"url":"injectables/GithubActionIssueAssigned.html","title":"injectable - GithubActionIssueAssigned","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubActionIssueAssigned\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/github-issue-assigned.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictDataGithubService: DictDataGithubService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/github-issue-assigned.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictDataGithubService\n                                                  \n                                                        \n                                                                        DictDataGithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:103\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictDataGithubService } from '../../dictDataGithub/dictDataGithub.service';\nimport { ActionRegistry } from './action-registry.service';\nimport { BaseAction } from './base-action.service';\n\n@Injectable()\nexport class GithubActionIssueAssigned extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictDataGithubService: DictDataGithubService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Github: issue assigned',\n      'A new issue is assigned to you',\n      'action',\n      serviceId,\n      'https://api.github.com/issues',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw new UnauthorizedException();\n    }\n\n    const headers = {\n      Authorization: `token ${access_token.key}`,\n      'Content-Type': 'application/vnd.github+json',\n      'X-GitHub-Api-Version': '2022-11-28',\n    };\n\n    const params = {\n      sort: 'created',\n      direction: 'asc',\n      per_page: 1,\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n    const issues = response.data;\n    const lastIssueId =\n      await this.dictDataGithubService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (issues && issues.length > 0) {\n      const issueAssignedId: string = issues[0].id.toString();\n      if (lastIssueId) {\n        if (issueAssignedId !== lastIssueId.lastDataId) {\n          await this.dictDataGithubService.update(userId, issueAssignedId);\n          return {\n            existing_issue_id: issueAssignedId,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictDataGithubService.create({\n          userId: userId,\n          lastDataId: issueAssignedId,\n          elementName: this.name,\n        });\n      }\n    } else {\n      if (!lastIssueId) {\n        await this.dictDataGithubService.create({\n          userId: userId,\n          lastDataId: 'No issue assigned yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubAuthGuard.html":{"url":"injectables/GithubAuthGuard.html","title":"injectable - GithubAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/github-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('github')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthenticateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticateOptions\n                        \n                    \n                \n            \n            \n                \ngetAuthenticateOptions(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/github-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { state: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class GithubAuthGuard extends AuthGuard('github') {\n  getAuthenticateOptions(context: ExecutionContext) {\n    const request = this.getRequest(context);\n    return { state: request.query.state };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubRepositoryStarred.html":{"url":"injectables/GithubRepositoryStarred.html","title":"injectable - GithubRepositoryStarred","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubRepositoryStarred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/github-repository-starred.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictDataGithubService: DictDataGithubService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/github-repository-starred.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictDataGithubService\n                                                  \n                                                        \n                                                                        DictDataGithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:103\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictDataGithubService } from '../../dictDataGithub/dictDataGithub.service';\nimport { ActionRegistry } from './action-registry.service';\nimport { BaseAction } from './base-action.service';\n\n@Injectable()\nexport class GithubRepositoryStarred extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictDataGithubService: DictDataGithubService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Github: repository starred',\n      'A new repository is starred',\n      'action',\n      serviceId,\n      'https://api.github.com/user/starred',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw new UnauthorizedException();\n    }\n\n    const headers = {\n      Authorization: `token ${access_token.key}`,\n      'Content-Type': 'application/vnd.github+json',\n      'X-GitHub-Api-Version': '2022-11-28',\n    };\n\n    const params = {\n      sort: 'created',\n      direction: 'desc',\n      per_page: 1,\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n    const starredRepository = response.data;\n    const lastStarredRepositoryId =\n      await this.dictDataGithubService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (starredRepository && starredRepository.length > 0) {\n      const StarredRepositoryId: string = starredRepository[0].id.toString();\n      if (lastStarredRepositoryId) {\n        if (StarredRepositoryId !== lastStarredRepositoryId.lastDataId) {\n          await this.dictDataGithubService.update(userId, StarredRepositoryId);\n          return {\n            starred_repository_id: StarredRepositoryId,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictDataGithubService.create({\n          userId: userId,\n          lastDataId: StarredRepositoryId,\n          elementName: this.name,\n        });\n      }\n    } else {\n      if (!lastStarredRepositoryId) {\n        await this.dictDataGithubService.create({\n          userId: userId,\n          lastDataId: 'No starred repository received yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/github-service.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                front_data\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                need_token\n                            \n                            \n                                    Protected\n                                serviceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                storeNewToken\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceTokenService: ServiceTokenService, httpService: HttpService, configService: ConfigService, serviceRegistry: ServiceRegistry, dictDataGithubService: DictDataGithubService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/github-service.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictDataGithubService\n                                                  \n                                                        \n                                                                        DictDataGithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/github-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(services: ServiceManager)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                            ServiceManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { BaseService } from './base-service.service';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { ConfigService } from '@nestjs/config';\nimport { ServiceRegistry } from './service-registry.service';\nimport { GithubActionIssueAssigned } from '../../elements/action-classes/github-issue-assigned';\nimport { GithubRepositoryStarred } from '../../elements/action-classes/github-repository-starred';\nimport { DictDataGithubService } from '../../dictDataGithub/dictDataGithub.service';\nimport { ActionRegistry } from '../../elements/action-classes/action-registry.service';\n\n@Injectable()\nexport class GithubService extends BaseService implements OnModuleInit {\n  constructor(\n    private serviceTokenService: ServiceTokenService,\n    private httpService: HttpService,\n    private configService: ConfigService,\n    private serviceRegistry: ServiceRegistry,\n    private dictDataGithubService: DictDataGithubService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'github',\n      'Allow access to your GitHub account',\n      '{\"icon\": \"./assets/services/github.png\", \"color\": \"#24292e\"}',\n      true,\n      [],\n      [],\n    );\n  }\n\n  async onModuleInit() {\n    await this.serviceRegistry.registerService(this);\n    const action1 = new GithubActionIssueAssigned(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictDataGithubService,\n      this.actionRegistry,\n    );\n    const action2 = new GithubRepositoryStarred(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictDataGithubService,\n      this.actionRegistry,\n    );\n    await action1.registerElement();\n    await action2.registerElement();\n    this.actions.push(action1);\n    this.actions.push(action2);\n  }\n\n  async storeNewToken(userId: number) {\n    const refresh_token =\n      await this.serviceTokenService.getRefreshTokenServiceUser(\n        userId,\n        this.serviceId,\n      );\n    const url = `https://github.com/login/oauth/access_token?client_id=${this.configService.get('github.client_id')}&client_secret=${this.configService.get('github.client_secret')}&grant_type=refresh_token&refresh_token=${refresh_token}`;\n\n    const response = await firstValueFrom(\n      this.httpService.post(url, {\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      }),\n    );\n    const params = new URLSearchParams(response.data);\n    await this.serviceTokenService.replaceAccessToken(\n      userId,\n      this.serviceId,\n      params.get('access_token'),\n    );\n    await this.serviceTokenService.replaceRefreshToken(\n      userId,\n      this.serviceId,\n      params.get('refresh_token'),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubStrategy.html":{"url":"injectables/GithubStrategy.html","title":"injectable - GithubStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/github.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'github')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/github.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_accessToken: string, _refreshToken: string, profile: any, done: VerifyCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/github.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifyCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, VerifyCallback } from 'passport-github';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class GithubStrategy extends PassportStrategy(Strategy, 'github') {\n  constructor(configService: ConfigService) {\n    super({\n      clientID: configService.get('github.client_id'),\n      clientSecret: configService.get('github.client_secret'),\n      callbackURL:\n        configService.get('app.back_url') +\n        configService.get('github.redirect_uri'),\n      scope: ['repo', 'user:email', 'read:org', 'read:user', 'user:follow'],\n      prompt: 'select_account',\n    });\n  }\n\n  async validate(\n    _accessToken: string,\n    _refreshToken: string,\n    profile: any,\n    done: VerifyCallback,\n  ): Promise {\n    const { id, displayName } = profile;\n\n    const user = {\n      provider: 'github',\n      providerId: id,\n      surname: displayName.split(' ')[0],\n      lastname: displayName.split(' ')[1],\n      accessToken: _accessToken,\n      refreshToken: _refreshToken,\n    };\n\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailActionEmailDeleted.html":{"url":"injectables/GmailActionEmailDeleted.html","title":"injectable - GmailActionEmailDeleted","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GmailActionEmailDeleted\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/gmail-email-deleted.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictEmailsGmailService: DictEmailsGmailService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/gmail-email-deleted.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsGmailService\n                                                  \n                                                        \n                                                                        DictEmailsGmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:101\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictEmailsGmailService } from 'src/models/dictEmailsGmail/dictEmailsGmail.service';\nimport { ActionRegistry } from './action-registry.service';\nimport { BaseAction } from './base-action.service';\n\n@Injectable()\nexport class GmailActionEmailDeleted extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictEmailsGmailService: DictEmailsGmailService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Gmail: Email deleted',\n      'A new email is deleted on your Gmail inbox',\n      'action',\n      serviceId,\n      'https://gmail.googleapis.com/gmail/v1/users/me/messages',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw new UnauthorizedException();\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      maxResults: 1,\n      q: 'in:trash',\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n\n    const emails = response.data.messages;\n    const lastEmailId =\n      await this.dictEmailsGmailService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (emails && emails.length > 0) {\n      if (lastEmailId) {\n        if (emails[0].id !== lastEmailId.lastEmailId) {\n          await this.dictEmailsGmailService.update(userId, emails[0].id);\n          return {\n            trash_email_id: emails[0].id,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictEmailsGmailService.create({\n          userId: userId,\n          lastEmailId: emails[0].id,\n          elementName: this.name,\n        });\n      }\n    } else {\n      if (!lastEmailId) {\n        await this.dictEmailsGmailService.create({\n          userId: userId,\n          lastEmailId: 'No deleted email yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailActionEmailReceived.html":{"url":"injectables/GmailActionEmailReceived.html","title":"injectable - GmailActionEmailReceived","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GmailActionEmailReceived\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/gmail-email-received.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictEmailsGmailService: DictEmailsGmailService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/gmail-email-received.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsGmailService\n                                                  \n                                                        \n                                                                        DictEmailsGmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:105\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictEmailsGmailService } from 'src/models/dictEmailsGmail/dictEmailsGmail.service';\nimport { BaseAction } from './base-action.service';\nimport { ActionRegistry } from './action-registry.service';\n\n@Injectable()\nexport class GmailActionEmailReceived extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictEmailsGmailService: DictEmailsGmailService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Gmail: Email received',\n      'A new email is received on your Gmail inbox',\n      'action',\n      serviceId,\n      'https://gmail.googleapis.com/gmail/v1/users/me/messages',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      maxResults: 1,\n      q: 'is:unread',\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n\n    const emails = response.data.messages;\n    const lastEmailId =\n      await this.dictEmailsGmailService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (emails && emails.length > 0) {\n      if (lastEmailId) {\n        if (emails[0].id !== lastEmailId.lastEmailId) {\n          await this.dictEmailsGmailService.update(userId, emails[0].id);\n          return {\n            inbox_subject: emails[0].subject,\n            inbox_content: emails[0].bodyPreview,\n            inbox_correspondent: emails[0].sender.emailAddress.address,\n            inbox_email_id: emails[0].id,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictEmailsGmailService.create({\n          userId: userId,\n          lastEmailId: emails[0].id,\n          elementName: this.name,\n        });\n        return false;\n      }\n    } else {\n      if (!lastEmailId) {\n        await this.dictEmailsGmailService.create({\n          userId: userId,\n          lastEmailId: 'No received email yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailActionEmailSent.html":{"url":"injectables/GmailActionEmailSent.html","title":"injectable - GmailActionEmailSent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GmailActionEmailSent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/gmail-email-sent.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictEmailsGmailService: DictEmailsGmailService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/gmail-email-sent.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsGmailService\n                                                  \n                                                        \n                                                                        DictEmailsGmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:104\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictEmailsGmailService } from 'src/models/dictEmailsGmail/dictEmailsGmail.service';\nimport { BaseAction } from './base-action.service';\nimport { ActionRegistry } from './action-registry.service';\n\n@Injectable()\nexport class GmailActionEmailSent extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictEmailsGmailService: DictEmailsGmailService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Gmail: Email sent',\n      'A new email is sent from your Gmail inbox',\n      'action',\n      serviceId,\n      'https://gmail.googleapis.com/gmail/v1/users/me/messages',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw new UnauthorizedException();\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      maxResults: 1,\n      q: 'in:sent',\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n\n    const emails = response.data.messages;\n    const lastEmailId =\n      await this.dictEmailsGmailService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (emails && emails.length > 0) {\n      if (lastEmailId) {\n        if (emails[0].id !== lastEmailId.lastEmailId) {\n          await this.dictEmailsGmailService.update(userId, emails[0].id);\n          return {\n            sent_subject: emails[0].subject,\n            sent_content: emails[0].bodyPreview,\n            sent_correspondent: emails[0].sender.emailAddress.address,\n            sent_email_id: emails[0].id,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        if (!lastEmailId) {\n          await this.dictEmailsGmailService.create({\n            userId: userId,\n            lastEmailId: emails[0].id,\n            elementName: this.name,\n          });\n        }\n      }\n    } else {\n      await this.dictEmailsGmailService.create({\n        userId: userId,\n        lastEmailId: 'No sent email yet.',\n        elementName: this.name,\n      });\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailReactionDeleteEmail.html":{"url":"injectables/GmailReactionDeleteEmail.html","title":"injectable - GmailReactionDeleteEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GmailReactionDeleteEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/gmail-delete-email.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseReaction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execReaction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/gmail-delete-email.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { ReactionRegistry } from './reaction-registry.service';\nimport { BaseReaction } from './base-reaction.service';\n\n@Injectable()\nexport class GmailReactionDeleteEmail extends BaseReaction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'Gmail: Delete last Email',\n      'Delete the last email from your inbox folder in your Gmail account',\n      'reaction',\n      serviceId,\n      'https://gmail.googleapis.com/gmail/v1/users/me/messages/',\n    );\n  }\n\n  async registerElement() {\n    await this.reactionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execReaction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw new UnauthorizedException();\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      maxResults: 1,\n      q: 'in:inbox',\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n\n    const emails = response.data.messages;\n\n    if (emails && emails.length > 0) {\n      const lastEmailId = parameters['inbox_email_id']\n        ? parameters['inbox_email_id']\n        : emails[0].id;\n\n      const deleteUrl = this.url + lastEmailId;\n\n      try {\n        await firstValueFrom(\n          this.httpService.delete(deleteUrl, {\n            headers,\n          }),\n        );\n      } catch (error) {\n        console.error('Google error deleting email:', error);\n        throw error;\n      }\n      return {\n        trash_email_id: lastEmailId,\n      };\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailReactionFlagEmail.html":{"url":"injectables/GmailReactionFlagEmail.html","title":"injectable - GmailReactionFlagEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GmailReactionFlagEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/gmail-flag-email.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseReaction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execReaction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/gmail-flag-email.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { BaseReaction } from './base-reaction.service';\nimport { ReactionRegistry } from './reaction-registry.service';\n\n@Injectable()\nexport class GmailReactionFlagEmail extends BaseReaction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'Gmail: Flag an Email',\n      'Flag an email as important from your inbox folder using your Gmail account',\n      'reaction',\n      serviceId,\n      'https://gmail.googleapis.com/gmail/v1/users/me/messages/',\n    );\n  }\n\n  async registerElement() {\n    await this.reactionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execReaction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw new UnauthorizedException();\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      maxResults: 1,\n      q: 'in:inbox',\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n\n    const emails = response.data.messages;\n\n    if (emails && emails.length > 0) {\n      const lastEmailId = parameters['inbox_email_id']\n        ? parameters['inbox_email_id']\n        : emails[0].id;\n\n      const modifyUrl = this.url + lastEmailId + '/modify';\n\n      const requestBody = {\n        addLabelIds: ['IMPORTANT'],\n        removeLabelIds: [],\n      };\n\n      try {\n        await firstValueFrom(\n          this.httpService.post(modifyUrl, requestBody, {\n            headers,\n          }),\n        );\n      } catch (error) {\n        console.log('Google error flagging email:', error);\n        throw error;\n      }\n      return {\n        inbox_email_id: lastEmailId,\n      };\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GmailReactionSendEmail.html":{"url":"injectables/GmailReactionSendEmail.html","title":"injectable - GmailReactionSendEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GmailReactionSendEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/gmail-send-email.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseReaction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRawEmail\n                            \n                            \n                                    Async\n                                execReaction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, userService: UserService, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/gmail-send-email.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createRawEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRawEmail(to: string, subject: string, body: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/gmail-send-email.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:31\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { UserService } from '../../users/user.service';\nimport { BaseReaction } from './base-reaction.service';\nimport { ReactionRegistry } from './reaction-registry.service';\n\n@Injectable()\nexport class GmailReactionSendEmail extends BaseReaction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private userService: UserService,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'Gmail: Send an Email',\n      'Send an email using your Gmail account',\n      'reaction',\n      serviceId,\n      'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',\n    );\n  }\n\n  async registerElement() {\n    await this.reactionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execReaction(userId: number, parameters: any) {\n    const emailParams = {};\n    Object.keys(parameters).forEach((key) => {\n      if (key.includes('subject')) {\n        emailParams['subject'] = parameters[key];\n      } else if (key.includes('content')) {\n        emailParams['content'] = parameters[key];\n      } else if (key.includes('correspondent')) {\n        emailParams['correspondent'] = parameters[key];\n      } else if (key.includes('email_id')) {\n        emailParams['email_id'] = parameters[key];\n      }\n    });\n    const user = await this.userService.findOneId(userId);\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const rawEmail = this.createRawEmail(\n      emailParams['correspondent'] ? emailParams['correspondent'] : user.email,\n      emailParams['subject']\n        ? 'Received :' + emailParams['subject']\n        : 'Hello from AREA / Default',\n      emailParams['content']\n        ? 'Received :' + emailParams['content']\n        : 'Hi again from AREA / Default',\n    );\n    const emailData = {\n      raw: rawEmail,\n    };\n    try {\n      await firstValueFrom(\n        this.httpService.post(this.url, emailData, { headers }),\n      );\n      return {\n        sent_subject: emailParams['subject'],\n        sent_content: emailParams['content'],\n        sent_correspondent: emailParams['correspondent'],\n      };\n    } catch (error) {\n      console.log('Google error sending email:', error);\n    }\n    return false;\n  }\n\n  private createRawEmail(to: string, subject: string, body: string): string {\n    const email = [\n      `To: ${to}`,\n      `Subject: ${subject}`,\n      `Content-Type: text/html; charset=\"UTF-8\"`,\n      '',\n      body,\n    ].join('\\n');\n\n    const base64EncodedEmail = Buffer.from(email)\n      .toString('base64')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '');\n\n    return base64EncodedEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthGuard.html":{"url":"injectables/GoogleAuthGuard.html","title":"injectable - GoogleAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/google-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('google')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthenticateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticateOptions\n                        \n                    \n                \n            \n            \n                \ngetAuthenticateOptions(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/google-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { state: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class GoogleAuthGuard extends AuthGuard('google') {\n  getAuthenticateOptions(context: ExecutionContext) {\n    const request = this.getRequest(context);\n    return { state: request.query.state };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/google.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                front_data\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                need_token\n                            \n                            \n                                    Protected\n                                serviceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                storeNewToken\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, serviceTokenService: ServiceTokenService, httpService: HttpService, configService: ConfigService, dictEmailsGmailService: DictEmailsGmailService, serviceRegistry: ServiceRegistry, actionRegistry: ActionRegistry, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/google.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsGmailService\n                                                  \n                                                        \n                                                                        DictEmailsGmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/google.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:97\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(services: ServiceManager)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                            ServiceManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { BaseService } from './base-service.service';\nimport { ServiceTokenService } from 'src/models/servicesTokens/serviceToken.service';\nimport { HttpService } from '@nestjs/axios';\nimport { ConfigService } from '@nestjs/config';\nimport { DictEmailsGmailService } from 'src/models/dictEmailsGmail/dictEmailsGmail.service';\nimport { ServiceRegistry } from './service-registry.service';\nimport { ActionRegistry } from 'src/models/elements/action-classes/action-registry.service';\nimport { firstValueFrom } from 'rxjs';\nimport { GmailActionEmailReceived } from 'src/models/elements/action-classes/gmail-email-received';\nimport { GmailReactionSendEmail } from 'src/models/elements/reaction-classes/gmail-send-email';\nimport { UserService } from 'src/models/users/user.service';\nimport { ReactionRegistry } from 'src/models/elements/reaction-classes/reaction-registry.service';\nimport { GmailActionEmailDeleted } from 'src/models/elements/action-classes/gmail-email-deleted';\nimport { GmailActionEmailSent } from 'src/models/elements/action-classes/gmail-email-sent';\nimport { GmailReactionDeleteEmail } from 'src/models/elements/reaction-classes/gmail-delete-email';\nimport { GmailReactionFlagEmail } from 'src/models/elements/reaction-classes/gmail-flag-email';\n\n@Injectable()\nexport class GoogleService extends BaseService implements OnModuleInit {\n  constructor(\n    private userService: UserService,\n    private serviceTokenService: ServiceTokenService,\n    private httpService: HttpService,\n    private configService: ConfigService,\n    private dictEmailsGmailService: DictEmailsGmailService,\n    private serviceRegistry: ServiceRegistry,\n    private actionRegistry: ActionRegistry,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'google',\n      'Allow access to your Gmail account',\n      '{\"icon\": \"./assets/services/google.png\", \"color\": \"#FBBC04\"}',\n      true,\n      [],\n      [],\n    );\n  }\n\n  async onModuleInit() {\n    await this.serviceRegistry.registerService(this);\n    const action1 = new GmailActionEmailReceived(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictEmailsGmailService,\n      this.actionRegistry,\n    );\n    const action2 = new GmailActionEmailDeleted(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictEmailsGmailService,\n      this.actionRegistry,\n    );\n    const action3 = new GmailActionEmailSent(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictEmailsGmailService,\n      this.actionRegistry,\n    );\n    const reaction1 = new GmailReactionSendEmail(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.userService,\n      this.reactionRegistry,\n    );\n    const reaction2 = new GmailReactionDeleteEmail(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.reactionRegistry,\n    );\n    const reaction3 = new GmailReactionFlagEmail(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.reactionRegistry,\n    ); //\n    await action1.registerElement();\n    await action2.registerElement();\n    await action3.registerElement();\n    await reaction1.registerElement();\n    await reaction2.registerElement();\n    await reaction3.registerElement();\n    this.actions.push(action1);\n    this.actions.push(action2);\n    this.actions.push(action3);\n    this.reactions.push(reaction1);\n    this.reactions.push(reaction2);\n    this.reactions.push(reaction3);\n  }\n\n  async storeNewToken(userId: number) {\n    const refresh_token =\n      await this.serviceTokenService.getRefreshTokenServiceUser(\n        userId,\n        this.serviceId,\n      );\n    const url = 'https://oauth2.googleapis.com/token';\n    const scopes = [\n      'profile',\n      'email',\n      'https://www.googleapis.com/auth/gmail.readonly',\n      'https://www.googleapis.com/auth/gmail.modify',\n      'https://www.googleapis.com/auth/gmail.send',\n    ].join(' ');\n    const formData = new URLSearchParams();\n    formData.append(\n      'client_id',\n      this.configService.get('google.clientID'),\n    );\n    formData.append(\n      'client_secret',\n      this.configService.get('google.clientSecret'),\n    );\n    formData.append('grant_type', 'refresh_token');\n    formData.append('refresh_token', refresh_token);\n    formData.append('scope', scopes);\n\n    const response = await firstValueFrom(\n      this.httpService.post(url, formData.toString(), {\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      }),\n    );\n    await this.serviceTokenService.replaceAccessToken(\n      userId,\n      this.serviceId,\n      response.data.access_token,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleStrategy.html":{"url":"injectables/GoogleStrategy.html","title":"injectable - GoogleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/google.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'google')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorizationParams\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/google.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authorizationParams\n                        \n                    \n                \n            \n            \n                \nauthorizationParams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/google.strategy.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { access_type: string; prompt: string; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_accessToken: string, _refreshToken: string, profile: any, done: VerifyCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/google.strategy.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifyCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, VerifyCallback } from 'passport-google-oauth2';\n\n@Injectable()\nexport class GoogleStrategy extends PassportStrategy(Strategy, 'google') {\n  constructor(configService: ConfigService) {\n    super({\n      clientID: configService.get('google.clientID'),\n      clientSecret: configService.get('google.clientSecret'),\n      callbackURL:\n        configService.get('app.back_url') +\n        configService.get('google.callbackURL'),\n      scope: [\n        'profile',\n        'email',\n        'https://mail.google.com/',\n        'https://www.googleapis.com/auth/gmail.readonly',\n        'https://www.googleapis.com/auth/gmail.modify',\n        'https://www.googleapis.com/auth/gmail.send',\n      ],\n      access_type: 'offline',\n      prompt: 'consent',\n      includeGrantedScopes: true,\n    });\n  }\n\n  authorizationParams() {\n    return {\n      access_type: 'offline',\n      prompt: 'consent',\n    };\n  }\n\n  async validate(\n    _accessToken: string,\n    _refreshToken: string,\n    profile: any,\n    done: VerifyCallback,\n  ): Promise {\n    const { id, name, emails, photos } = profile;\n    const user = {\n      provider: 'google',\n      providerId: id,\n      email: emails[0].value,\n      surname: `${name.givenName}`,\n      lastname: `${name.familyName}`,\n      picture: photos[0].value,\n      accessToken: _accessToken,\n      refreshToken: _refreshToken,\n    };\n\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from '../../common/constants/metadata';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UserService } from '../../models/users/user.service';\n\nexport type JwtPayload = {\n  email: string;\n  userId: number;\n};\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    configService: ConfigService,\n    private userService: UserService,\n  ) {\n    const extractJwtFromCookie = (req) => {\n      let token = null;\n      if (req && req.cookies) {\n        token = req.cookies['access_token'];\n      }\n      return token || ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n    };\n\n    super({\n      jwtFromRequest: extractJwtFromCookie,\n      ignoreExpiration: false,\n      secretOrKey: configService.get('app.secret'),\n    });\n  }\n\n  async validate(payload: JwtPayload) {\n    const user = await this.userService.findOneId(payload.userId);\n    if (!user) {\n      throw new UnauthorizedException('Please log to continue');\n    }\n    return { email: payload.email, userId: payload.userId };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'nathan@test.com', description: 'The email of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password', description: 'The password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginDto {\n  @ApiProperty({ example: 'nathan@test.com', description: 'The email of the user' })\n  email: string;\n\n  @ApiProperty({ example: 'password', description: 'The password of the user' })\n  password: string;\n}\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'nathan@test.com', description: 'The email of the user' })\n  email: string;\n\n  @ApiProperty({ example: 'password', description: 'The password of the user' })\n  password: string;\n\n  @ApiProperty({ example: 'Nathan', description: 'The surname of the user' })\n  surname: string;\n\n  @ApiProperty({ example: 'Baudelin', description: 'The lastname of the user' })\n  lastname: string;\n}\n\nexport class Token {\n  @ApiProperty({description: 'The connexion token' })\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MicrosoftService.html":{"url":"injectables/MicrosoftService.html","title":"injectable - MicrosoftService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MicrosoftService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/microsoft.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                front_data\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                need_token\n                            \n                            \n                                    Protected\n                                serviceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                storeNewToken\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceTokenService: ServiceTokenService, userService: UserService, httpService: HttpService, configService: ConfigService, dictEmailsOutlookService: DictEmailsOutlookService, serviceRegistry: ServiceRegistry, actionRegistry: ActionRegistry, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/microsoft.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsOutlookService\n                                                  \n                                                        \n                                                                        DictEmailsOutlookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/microsoft.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:97\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(services: ServiceManager)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                            ServiceManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { BaseService } from './base-service.service';\nimport { ServiceTokenService } from 'src/models/servicesTokens/serviceToken.service';\nimport { HttpService } from '@nestjs/axios';\nimport { ConfigService } from '@nestjs/config';\nimport { ServiceRegistry } from './service-registry.service';\nimport { ActionRegistry } from 'src/models/elements/action-classes/action-registry.service';\nimport { firstValueFrom } from 'rxjs';\nimport { ReactionRegistry } from 'src/models/elements/reaction-classes/reaction-registry.service';\nimport { OutlookActionEmailReceived } from 'src/models/elements/action-classes/outlook-email-received';\nimport { DictEmailsOutlookService } from 'src/models/dictEmailsOutlook/dictEmailsOutlook.service';\nimport { OutlookReactionSendEmail } from 'src/models/elements/reaction-classes/outlook-send-email';\nimport { UserService } from 'src/models/users/user.service';\nimport { OutlookActionEmailDeleted } from 'src/models/elements/action-classes/outlook-email-deleted';\nimport { OutlookActionEmailSent } from 'src/models/elements/action-classes/outlook-email-sent';\nimport { OutlookReactionDeleteEmail } from 'src/models/elements/reaction-classes/outlook-delete-email';\nimport { OutlookReactionFlagEmail } from 'src/models/elements/reaction-classes/outlook-flag-email';\n\n@Injectable()\nexport class MicrosoftService extends BaseService implements OnModuleInit {\n  constructor(\n    private serviceTokenService: ServiceTokenService,\n    private userService: UserService,\n    private httpService: HttpService,\n    private configService: ConfigService,\n    private dictEmailsOutlookService: DictEmailsOutlookService,\n    private serviceRegistry: ServiceRegistry,\n    private actionRegistry: ActionRegistry,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'microsoft',\n      'microsoft description',\n      '{\"icon\": \"./assets/services/microsoft.png\", \"color\": \"#7FBA00\"}',\n      true,\n      [],\n      [],\n    );\n  }\n\n  async onModuleInit() {\n    await this.serviceRegistry.registerService(this);\n    const action1 = new OutlookActionEmailReceived(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictEmailsOutlookService,\n      this.actionRegistry,\n    );\n    const action2 = new OutlookActionEmailDeleted(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictEmailsOutlookService,\n      this.actionRegistry,\n    );\n    const action3 = new OutlookActionEmailSent(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.dictEmailsOutlookService,\n      this.actionRegistry,\n    ); //\n    const reaction1 = new OutlookReactionSendEmail(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.userService,\n      this.reactionRegistry,\n    ); //\n    const reaction2 = new OutlookReactionDeleteEmail(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.reactionRegistry,\n    );\n    const reaction3 = new OutlookReactionFlagEmail(\n      this.serviceId,\n      this.httpService,\n      this.serviceTokenService,\n      this.reactionRegistry,\n    );\n    await action1.registerElement();\n    await action2.registerElement();\n    await action3.registerElement();\n    await reaction1.registerElement();\n    await reaction2.registerElement();\n    await reaction3.registerElement();\n    this.actions.push(action1);\n    this.actions.push(action2);\n    this.actions.push(action3);\n    this.reactions.push(reaction1);\n    this.reactions.push(reaction2);\n    this.reactions.push(reaction3);\n  }\n\n  async storeNewToken(userId: number) {\n    const refresh_token =\n      await this.serviceTokenService.getRefreshTokenServiceUser(\n        userId,\n        this.serviceId,\n      );\n    const url = 'https://login.microsoftonline.com/common/oauth2/v2.0/token';\n    const scopes = [\n      'offline_access',\n      'Mail.ReadWrite',\n      'Mail.Send',\n      'User.Read',\n    ].join(' ');\n    const formData = new URLSearchParams();\n    formData.append(\n      'client_id',\n      this.configService.get('ms.client_id'),\n    );\n    formData.append(\n      'client_secret',\n      this.configService.get('ms.client_secret'),\n    );\n    formData.append('grant_type', 'refresh_token');\n    formData.append('refresh_token', refresh_token);\n    formData.append('scope', scopes);\n\n    const response = await firstValueFrom(\n      this.httpService.post(url, formData.toString(), {\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      }),\n    );\n\n    await this.serviceTokenService.replaceAccessToken(\n      userId,\n      this.serviceId,\n      response.data.access_token,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MsAuthGuard.html":{"url":"injectables/MsAuthGuard.html","title":"injectable - MsAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MsAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/ms-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('microsoft')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthenticateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticateOptions\n                        \n                    \n                \n            \n            \n                \ngetAuthenticateOptions(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/ms-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { state: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class MsAuthGuard extends AuthGuard('microsoft') {\n  getAuthenticateOptions(context: ExecutionContext) {\n    const request = this.getRequest(context);\n    return { state: request.query.state };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MsStrategy.html":{"url":"injectables/MsStrategy.html","title":"injectable - MsStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MsStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/ms.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'microsoft')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/ms.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_accessToken: string, _refreshToken: string, profile: any, done: VerifyCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/ms.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifyCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, VerifyCallback } from 'passport-microsoft';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class MsStrategy extends PassportStrategy(Strategy, 'microsoft') {\n  constructor(configService: ConfigService) {\n    super({\n      clientID: configService.get('ms.client_id'),\n      clientSecret: configService.get('ms.client_secret'),\n      callbackURL:\n        configService.get('app.back_url') +\n        configService.get('ms.redirect_uri'),\n      scope: ['offline_access', 'Mail.ReadWrite', 'Mail.Send', 'User.Read'],\n      authority: 'https://login.microsoftonline.com/common',\n    });\n  }\n\n  async validate(\n    _accessToken: string,\n    _refreshToken: string,\n    profile: any,\n    done: VerifyCallback,\n  ): Promise {\n    const { id, displayName, userPrincipalName } = profile;\n\n    const user = {\n      provider: 'microsoft',\n      providerId: id,\n      email: userPrincipalName,\n      surname: displayName.split(' ')[0],\n      lastname: displayName.split(' ')[1],\n      accessToken: _accessToken,\n      refreshToken: _refreshToken,\n    };\n\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrmModule.html":{"url":"modules/OrmModule.html","title":"module - OrmModule","body":"\n                   \n\n\n\n\n    Modules\n    OrmModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/orm.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Area } from '../models/areas/entities/area.entity';\nimport { AreaReaction } from '../models/areasReactions/entities/areaReaction.entity';\nimport { Element } from '../models/elements/entities/element.entity';\nimport { Service } from '../models/services/entities/service.entity';\nimport { ServiceToken } from '../models/servicesTokens/entities/serviceToken.entity';\nimport { User } from '../models/users/entities/user.entity';\nimport { DictEmailsOutlook } from '../models/dictEmailsOutlook/entities/dictEmailsOutlook.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\nimport { DictEmailsGmail } from 'src/models/dictEmailsGmail/entities/dictEmailsGmail.entity';\nimport { DictDataGithub } from '../models/dictDataGithub/entities/dictDataGithub.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('db.host'),\n        port: configService.get('db.port'),\n        username: configService.get('db.username'),\n        password: configService.get('db.password'),\n        database: configService.get('db.database'),\n        entities: [\n          Area,\n          AreaReaction,\n          Element,\n          Service,\n          ServiceToken,\n          User,\n          DictEmailsOutlook,\n          DictEmailsGmail,\n          DictDataGithub,\n        ],\n        synchronize: true,\n      }),\n    }),\n  ],\n})\nexport class OrmModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutlookActionEmailDeleted.html":{"url":"injectables/OutlookActionEmailDeleted.html","title":"injectable - OutlookActionEmailDeleted","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OutlookActionEmailDeleted\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/outlook-email-deleted.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictEmailsOutlookService: DictEmailsOutlookService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/outlook-email-deleted.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsOutlookService\n                                                  \n                                                        \n                                                                        DictEmailsOutlookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:100\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictEmailsOutlookService } from '../../dictEmailsOutlook/dictEmailsOutlook.service';\nimport { BaseAction } from './base-action.service';\nimport { ActionRegistry } from './action-registry.service';\n\n@Injectable()\nexport class OutlookActionEmailDeleted extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictEmailsOutlookService: DictEmailsOutlookService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Outlook: Email deleted',\n      'A new email is delete on your Outlook inbox',\n      'action',\n      serviceId,\n      'https://graph.microsoft.com/v1.0/me/mailFolders/deleteditems/messages',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      $filter: 'isRead eq false',\n      $orderby: 'receivedDateTime desc',\n      $top: 1,\n    };\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n    const emails = response.data.value;\n    const lastEmailId =\n      await this.dictEmailsOutlookService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (emails && emails.length > 0) {\n      if (lastEmailId) {\n        if (emails[0].id !== lastEmailId.lastEmailId) {\n          await this.dictEmailsOutlookService.update(userId, emails[0].id);\n          return {\n            trash_email_id: emails[0].id,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictEmailsOutlookService.create({\n          userId: userId,\n          lastEmailId: emails[0].id,\n          elementName: this.name,\n        });\n      }\n    } else {\n      if (!lastEmailId) {\n        await this.dictEmailsOutlookService.create({\n          userId: userId,\n          lastEmailId: 'No deleted email yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutlookActionEmailReceived.html":{"url":"injectables/OutlookActionEmailReceived.html","title":"injectable - OutlookActionEmailReceived","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OutlookActionEmailReceived\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/outlook-email-received.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictEmailsOutlookService: DictEmailsOutlookService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/outlook-email-received.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsOutlookService\n                                                  \n                                                        \n                                                                        DictEmailsOutlookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:103\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { BaseAction } from './base-action.service';\nimport { ActionRegistry } from './action-registry.service';\nimport { DictEmailsOutlookService } from 'src/models/dictEmailsOutlook/dictEmailsOutlook.service';\n\n@Injectable()\nexport class OutlookActionEmailReceived extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictEmailsOutlookService: DictEmailsOutlookService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Outlook: Email received',\n      'A new email is received on your Outlook inbox',\n      'action',\n      serviceId,\n      'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      $filter: 'isRead eq false',\n      $orderby: 'receivedDateTime desc',\n      $top: 1,\n    };\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n    const emails = response.data.value;\n    const lastEmailId =\n      await this.dictEmailsOutlookService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (emails && emails.length > 0) {\n      if (lastEmailId) {\n        if (emails[0].id !== lastEmailId.lastEmailId) {\n          await this.dictEmailsOutlookService.update(userId, emails[0].id);\n          return {\n            inbox_subject: emails[0].subject,\n            inbox_content: emails[0].bodyPreview,\n            inbox_correspondent: emails[0].sender.emailAddress.address,\n            inbox_email_id: emails[0].id,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictEmailsOutlookService.create({\n          userId: userId,\n          lastEmailId: emails[0].id,\n          elementName: this.name,\n        });\n      }\n    } else {\n      if (!lastEmailId) {\n        await this.dictEmailsOutlookService.create({\n          userId: userId,\n          lastEmailId: 'No received email yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutlookActionEmailSent.html":{"url":"injectables/OutlookActionEmailSent.html","title":"injectable - OutlookActionEmailSent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OutlookActionEmailSent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/action-classes/outlook-email-sent.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAction\n                            \n                            \n                                    Async\n                                execAction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                            \n                                needCronjob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, dictEmailsOutlookService: DictEmailsOutlookService, actionRegistry: ActionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/action-classes/outlook-email-sent.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictEmailsOutlookService\n                                                  \n                                                        \n                                                                        DictEmailsOutlookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:103\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execAction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needCronjob\n                        \n                    \n                \n            \n            \n                \nneedCronjob()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAction:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { DictEmailsOutlookService } from '../../dictEmailsOutlook/dictEmailsOutlook.service';\nimport { BaseAction } from './base-action.service';\nimport { ActionRegistry } from './action-registry.service';\n\n@Injectable()\nexport class OutlookActionEmailSent extends BaseAction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private dictEmailsOutlookService: DictEmailsOutlookService,\n    private actionRegistry: ActionRegistry,\n  ) {\n    super(\n      'Outlook: Email sent',\n      'A new email is sent from your Outlook inbox',\n      'action',\n      serviceId,\n      'https://graph.microsoft.com/v1.0/me/mailFolders/sentitems/messages',\n      true,\n    );\n  }\n\n  async registerElement() {\n    await this.actionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execAction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      $orderby: 'sentDateTime desc',\n      $top: 1,\n    };\n    const response = await firstValueFrom(\n      this.httpService.get(this.url, {\n        headers,\n        params,\n      }),\n    );\n\n    const emails = response.data.value;\n    const lastEmailId =\n      await this.dictEmailsOutlookService.findByUserIdElementName(\n        userId,\n        this.name,\n      );\n\n    if (emails && emails.length > 0) {\n      if (lastEmailId) {\n        if (emails[0].id !== lastEmailId.lastEmailId) {\n          await this.dictEmailsOutlookService.update(userId, emails[0].id);\n          return {\n            sent_subject: emails[0].subject,\n            sent_content: emails[0].bodyPreview,\n            sent_correspondent: emails[0].sender.emailAddress.address,\n            sent_email_id: emails[0].id,\n          };\n        } else {\n          return false;\n        }\n      } else {\n        await this.dictEmailsOutlookService.create({\n          userId: userId,\n          lastEmailId: emails[0].id,\n          elementName: this.name,\n        });\n      }\n    } else {\n      if (!lastEmailId) {\n        await this.dictEmailsOutlookService.create({\n          userId: userId,\n          lastEmailId: 'No sent email yet.',\n          elementName: this.name,\n        });\n      }\n    }\n    return false;\n  }\n\n  deleteAction(userId: number) {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutlookReactionDeleteEmail.html":{"url":"injectables/OutlookReactionDeleteEmail.html","title":"injectable - OutlookReactionDeleteEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OutlookReactionDeleteEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/outlook-delete-email.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseReaction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execReaction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/outlook-delete-email.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { BaseReaction } from './base-reaction.service';\nimport { ReactionRegistry } from './reaction-registry.service';\n\n@Injectable()\nexport class OutlookReactionDeleteEmail extends BaseReaction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'Outlook: Delete an Email',\n      'Delete your last received email using your Outlook account',\n      'reaction',\n      serviceId,\n      'https://graph.microsoft.com/v1.0/me/messages/',\n    );\n  }\n\n  async registerElement() {\n    await this.reactionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execReaction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      $orderby: 'receivedDateTime desc',\n      $top: 1,\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(\n        'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n        {\n          headers,\n          params,\n        },\n      ),\n    );\n\n    const emails = response.data.value;\n\n    if (emails && emails.length > 0) {\n      const lastEmailId = parameters['inbox_email_id']\n        ? parameters['inbox_email_id']\n        : emails[0].id;\n\n      const deleteUrl = this.url + lastEmailId;\n\n      try {\n        await firstValueFrom(this.httpService.delete(deleteUrl, { headers }));\n      } catch (error) {\n        console.error('Microsoft error deleting email:', error);\n        throw error;\n      }\n      return {\n        trash_email_id: lastEmailId,\n      };\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutlookReactionFlagEmail.html":{"url":"injectables/OutlookReactionFlagEmail.html","title":"injectable - OutlookReactionFlagEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OutlookReactionFlagEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/outlook-flag-email.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseReaction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execReaction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/outlook-flag-email.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { BaseReaction } from './base-reaction.service';\nimport { ReactionRegistry } from './reaction-registry.service';\n\n@Injectable()\nexport class OutlookReactionFlagEmail extends BaseReaction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'Outlook: Flag an Email',\n      'Flag your last received email in your inbox folder using your Outlook account',\n      'reaction',\n      serviceId,\n      'https://graph.microsoft.com/v1.0/me/messages/',\n    );\n  }\n\n  async registerElement() {\n    await this.reactionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execReaction(userId: number, parameters: any) {\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      $orderby: 'receivedDateTime desc',\n      $top: 1,\n    };\n\n    const response = await firstValueFrom(\n      this.httpService.get(\n        'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n        {\n          headers,\n          params,\n        },\n      ),\n    );\n\n    const emails = response.data.value;\n\n    if (emails && emails.length > 0) {\n      const lastEmailId = parameters['inbox_email_id']\n        ? parameters['inbox_email_id']\n        : emails[0].id;\n\n      const pinUrl = this.url + lastEmailId;\n\n      const data = {\n        flag: {\n          flagStatus: 'flagged',\n        },\n      };\n\n      try {\n        await firstValueFrom(this.httpService.patch(pinUrl, data, { headers }));\n      } catch (error) {\n        console.error('Microsoft error flagging email:', error);\n        throw error;\n      }\n      return {\n        inbox_email_id: lastEmailId,\n      };\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutlookReactionSendEmail.html":{"url":"injectables/OutlookReactionSendEmail.html","title":"injectable - OutlookReactionSendEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OutlookReactionSendEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/outlook-send-email.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseReaction\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execReaction\n                            \n                            \n                                getServiceId\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceId: number, httpService: HttpService, serviceTokenService: ServiceTokenService, userService: UserService, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/outlook-send-email.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    execReaction(userId: number, parameters: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceId\n                        \n                    \n                \n            \n            \n                \ngetServiceId()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:31\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(elementService: ElementService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseReaction\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseReaction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elementService\n                                            \n                                                            ElementService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\nimport { ServiceTokenService } from '../../servicesTokens/serviceToken.service';\nimport { UserService } from '../../users/user.service';\nimport { BaseReaction } from './base-reaction.service';\nimport { ReactionRegistry } from './reaction-registry.service';\n\n@Injectable()\nexport class OutlookReactionSendEmail extends BaseReaction {\n  constructor(\n    serviceId: number,\n    private httpService: HttpService,\n    private serviceTokenService: ServiceTokenService,\n    private userService: UserService,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'Outlook: Send an Email',\n      'Send an email using your Outlook account',\n      'reaction',\n      serviceId,\n      'https://graph.microsoft.com/v1.0/me/sendMail',\n    );\n  }\n\n  async registerElement() {\n    await this.reactionRegistry.registerElement(this);\n  }\n\n  getServiceId() {\n    return this.serviceId;\n  }\n\n  async execReaction(userId: number, parameters: any) {\n    const emailParams = {};\n    Object.keys(parameters).forEach((key) => {\n      if (key.includes('subject')) {\n        emailParams['subject'] = parameters[key];\n      } else if (key.includes('content')) {\n        emailParams['content'] = parameters[key];\n      } else if (key.includes('correspondent')) {\n        emailParams['correspondent'] = parameters[key];\n      } else if (key.includes('email_id')) {\n        emailParams['email_id'] = parameters[key];\n      }\n    });\n    const user = await this.userService.findOneId(userId);\n    const access_token = await this.serviceTokenService.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: this.serviceId },\n      },\n    });\n\n    if (!access_token) {\n      throw UnauthorizedException;\n    }\n\n    const headers = {\n      Authorization: `Bearer ${access_token.key}`,\n      'Content-Type': 'application/json',\n    };\n    const emailData = {\n      message: {\n        subject: emailParams['subject']\n          ? 'Received :' + emailParams['subject']\n          : 'Hello from AREA / Default',\n        body: {\n          contentType: 'HTML',\n          content: emailParams['content']\n            ? 'Received :' + emailParams['content']\n            : 'Hi again from AREA / Default',\n        },\n        toRecipients: [\n          {\n            emailAddress: {\n              address: emailParams['correspondent']\n                ? emailParams['correspondent']\n                : user.email,\n            },\n          },\n        ],\n      },\n      saveToSentItems: 'true',\n    };\n    try {\n      await firstValueFrom(\n        this.httpService.post(this.url, emailData, { headers }),\n      );\n      return {\n        sent_subject: emailData['message']['subject'],\n        sent_content: emailData['message']['body']['content'],\n        sent_correspondent:\n          emailData['message']['toRecipients'][0]['emailAddress']['address'],\n      };\n    } catch (error) {\n      console.log('Microsoft error sending email:', error);\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reaction.html":{"url":"classes/Reaction.html","title":"class - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                elementId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                order\n                            \n                            \n                                    \n                                parameter_reaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2, description: 'The id of the linked reaction(element)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the area_reaction'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:142\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The order of execution'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameter_reaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'The parameter of the area_reaction'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:148\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  last_executed: Date;\n  userId: number;\n  color: string;\n}\n\nexport class ReactionDto {\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class AreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the area_action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    example: 3,\n    description: 'The id of the linked action(element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [ReactionDto],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [ReactionDto];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\nexport class ActionDto {\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Action {\n  @ApiProperty({ example: 1, description: 'The id of the action' })\n  id: number;\n\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Reaction {\n  @ApiProperty({ example: 1, description: 'The id of the area_reaction' })\n  id: number;\n\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class Area {\n  @ApiProperty({ example: 1, description: 'The id of the area' })\n  id: number;\n\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    type: Number,\n    description: 'The linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [Reaction],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [Reaction];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReactionDto.html":{"url":"classes/ReactionDto.html","title":"class - ReactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                elementId\n                            \n                            \n                                    \n                                order\n                            \n                            \n                                    \n                                parameter_reaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2, description: 'The id of the linked reaction(element)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The order of execution'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameter_reaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'The parameter of the area_reaction'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/areas/dto/create-area.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  last_executed: Date;\n  userId: number;\n  color: string;\n}\n\nexport class ReactionDto {\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class AreaDto {\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the area_action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    example: 3,\n    description: 'The id of the linked action(element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [ReactionDto],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [ReactionDto];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\nexport class ActionDto {\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Action {\n  @ApiProperty({ example: 1, description: 'The id of the action' })\n  id: number;\n\n  @ApiProperty({ example: 'Action1', description: 'The name of the action' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the action',\n  })\n  description: string;\n\n  @ApiProperty({\n    example: 'action',\n    description: 'The type of the element (action/reaction)',\n  })\n  type: string;\n\n  @ApiProperty({\n    example: 1,\n    description: 'The id of the linked service',\n  })\n  serviceId: number;\n\n  @ApiProperty({\n    example: 'https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages',\n    description: 'The url of the element',\n  })\n  url: string;\n}\n\nexport class Reaction {\n  @ApiProperty({ example: 1, description: 'The id of the area_reaction' })\n  id: number;\n\n  @ApiProperty({\n    example: {},\n    description: 'The parameter of the area_reaction',\n  })\n  parameter_reaction: any;\n\n  @ApiProperty({ example: 1, description: 'The order of execution' })\n  order: number;\n\n  @ApiProperty({\n    example: 2,\n    description: 'The id of the linked reaction(element)',\n  })\n  elementId: number;\n}\n\nexport class Area {\n  @ApiProperty({ example: 1, description: 'The id of the area' })\n  id: number;\n\n  @ApiProperty({ example: 'Area1', description: 'The name of the area' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Change my profile picture when I post a picture',\n    description: 'The description of the area',\n  })\n  description: string;\n\n  @ApiProperty({ example: {}, description: 'The parameter of the action' })\n  parameter: any;\n\n  @ApiProperty({ example: true, description: 'active the area (true/false)' })\n  active: boolean;\n\n  @ApiProperty({\n    type: Number,\n    description: 'The linked action (element)',\n  })\n  actionId: number;\n\n  @ApiProperty({\n    type: [Reaction],\n    description: 'The reactions linked to this action',\n  })\n  reactions: [Reaction];\n\n  @ApiProperty({ example: '#FFFFFF', description: 'color of the card (front)' })\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReactionRegistry.html":{"url":"injectables/ReactionRegistry.html","title":"injectable - ReactionRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReactionRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/elements/reaction-classes/reaction-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getElement\n                            \n                            \n                                    Async\n                                registerElement\n                            \n                            \n                                unregisterElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementService: ElementService)\n                    \n                \n                        \n                            \n                                Defined in src/models/elements/reaction-classes/reaction-registry.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementService\n                                                  \n                                                        \n                                                                        ElementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/reaction-registry.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseReaction | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerElement(element: BaseReaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/reaction-registry.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            BaseReaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregisterElement\n                        \n                    \n                \n            \n            \n                \nunregisterElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/elements/reaction-classes/reaction-registry.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/models/elements/reaction-classes/reaction-registry.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ElementService } from '../element.service';\nimport { BaseReaction } from './base-reaction.service';\n\n@Injectable()\nexport class ReactionRegistry {\n  constructor(private elementService: ElementService) {}\n  private actions = new Map();\n\n  async registerElement(element: BaseReaction) {\n    const tmp = await element.initInDb(this.elementService);\n    if (!tmp) {\n      return false;\n    }\n    this.actions.set(tmp.id, element);\n    return true;\n  }\n\n  getElement(id: number): BaseReaction | undefined {\n    return this.actions.get(id);\n  }\n\n  unregisterElement(id: number) {\n    this.actions.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReactionRegistryModule.html":{"url":"modules/ReactionRegistryModule.html","title":"module - ReactionRegistryModule","body":"\n                   \n\n\n\n\n    Modules\n    ReactionRegistryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReactionRegistryModule\n\n\n\ncluster_ReactionRegistryModule_imports\n\n\n\ncluster_ReactionRegistryModule_exports\n\n\n\ncluster_ReactionRegistryModule_providers\n\n\n\n\nElementModule\n\nElementModule\n\n\n\nReactionRegistryModule\n\nReactionRegistryModule\n\nReactionRegistryModule -->\n\nElementModule->ReactionRegistryModule\n\n\n\n\n\nReactionRegistry \n\nReactionRegistry \n\nReactionRegistry  -->\n\nReactionRegistryModule->ReactionRegistry \n\n\n\n\n\nReactionRegistry\n\nReactionRegistry\n\nReactionRegistryModule -->\n\nReactionRegistry->ReactionRegistryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/elements/reaction-classes/reaction-registry.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReactionRegistry\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ElementModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReactionRegistry\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ElementModule } from '../element.module';\nimport { ReactionRegistry } from './reaction-registry.service';\n\n@Module({\n  imports: [ElementModule],\n  providers: [ReactionRegistry],\n  exports: [ReactionRegistry],\n})\nexport class ReactionRegistryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                lastname\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'nathan@test.com', description: 'The email of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Baudelin', description: 'The lastname of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password', description: 'The password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Nathan', description: 'The surname of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginDto {\n  @ApiProperty({ example: 'nathan@test.com', description: 'The email of the user' })\n  email: string;\n\n  @ApiProperty({ example: 'password', description: 'The password of the user' })\n  password: string;\n}\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'nathan@test.com', description: 'The email of the user' })\n  email: string;\n\n  @ApiProperty({ example: 'password', description: 'The password of the user' })\n  password: string;\n\n  @ApiProperty({ example: 'Nathan', description: 'The surname of the user' })\n  surname: string;\n\n  @ApiProperty({ example: 'Baudelin', description: 'The lastname of the user' })\n  lastname: string;\n}\n\nexport class Token {\n  @ApiProperty({description: 'The connexion token' })\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Service.html":{"url":"entities/Service.html","title":"entity - Service","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/entities/service.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                elements\n                            \n                            \n                                    \n                                    \n                                front_data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                key_url\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                need_token\n                            \n                            \n                                    \n                                serviceToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Use Gmail and GoogleCalendar', description: 'The description of the service'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Element[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, element => element.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'A definir', description: 'A definir'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ApiProperty({example: 1, description: 'The id of the service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Voir si on utilise', description: 'Voir si on utilise'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Google', description: 'The name of the service'})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, description: 'The service need an authenticate token'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceToken[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, serviceToken => serviceToken.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/entities/service.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany } from 'typeorm';\nimport { Element } from '../../elements/entities/element.entity';\nimport { ServiceToken } from '../../servicesTokens/entities/serviceToken.entity';\n\n@Entity()\nexport class Service {\n  @PrimaryGeneratedColumn()\n  @ApiProperty({ example: 1, description: 'The id of the service' })\n  id: number;\n\n  @ApiProperty({ example: 'Google', description: 'The name of the service' })\n  @Column({ unique: true })\n  name: string;\n\n  @ApiProperty({\n    example: 'Use Gmail and GoogleCalendar',\n    description: 'The description of the service',\n  })\n  @Column()\n  description: string;\n\n  @ApiProperty({ example: 'A definir', description: 'A definir' })\n  @Column()\n  front_data: string;\n\n  @ApiProperty({ example: true, description: 'The service need an authenticate token' })\n  @Column()\n  need_token: boolean;\n\n  @ApiProperty({\n    example: 'Voir si on utilise',\n    description: 'Voir si on utilise',\n  })\n  @Column({ nullable: true })\n  key_url: string;\n\n  @OneToMany(() => Element, (element) => element.service)\n  elements: Element[];\n\n  @OneToMany(() => ServiceToken, (serviceToken) => serviceToken.service)\n  serviceToken: ServiceToken[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServiceController.html":{"url":"controllers/ServiceController.html","title":"controller - ServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                disconnectToService\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getActionsInServiceById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllServices\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getConnectedServices\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getElementInServiceById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getReactionsInServiceById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getServiceById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getStatusServiceById\n                            \n                            \n                                    \n                                    \n                                updateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServiceDto: CreateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        disconnectToService\n                        \n                    \n                \n            \n            \n                \n                        \n                    disconnectToService(id: number, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Disconnect user from service'})@ApiResponse({status: 200, description: 'Resource deleted successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({status: 404, description: 'Resource not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getActionsInServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionsInServiceById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/actions')@Public()@ApiOperation({summary: 'Get actions associated with the service'})@ApiResponse({status: 200, description: 'List of actions retrieved successfully.'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAllServices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllServices()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiOperation({summary: 'Get all services'})@ApiResponse({status: 200, description: 'List of services retrieved successfully.'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getConnectedServices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getConnectedServices(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('connected')@ApiOperation({summary: 'Get all services connected to the user'})@ApiResponse({status: 200, description: 'List of services retrieved successfully.'})@ApiResponse({status: 401, description: 'Unauthorized: authentication required'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getElementInServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getElementInServiceById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/elements')@Public()@ApiOperation({summary: 'Get elements associated with the service'})@ApiResponse({status: 200, description: 'List of elements retrieved successfully.'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getReactionsInServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReactionsInServiceById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/reactions')@Public()@ApiOperation({summary: 'Get reactions associated with the service'})@ApiResponse({status: 200, description: 'List of reactions retrieved successfully.'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServiceById(param: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':param')@Public()@ApiOperation({summary: 'Get information about a service by id or by name'})@ApiResponse({status: 200, description: 'Information retrieved successfully.'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: Service})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getStatusServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatusServiceById(id: number, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/status')@ApiOperation({summary: 'Know if the user is connected to the service'})@ApiResponse({status: 200, description: 'Response retrieved successfully.'})@ApiResponse({status: 404, description: 'Resource not found'})@ApiResponse({type: Status})\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateToken(token: string, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/models/services/service.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Put,\n  Post,\n  Body,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateServiceDto, Status } from './dto/create-service.dto';\nimport { Service } from './entities/service.entity';\nimport { ServiceManager } from './service-manager.service';\nimport { UpdateResult } from 'typeorm';\nimport {\n  ApiBearerAuth,\n  ApiExcludeEndpoint,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt.guard';\nimport { Public } from 'src/common/constants/metadata';\nimport { ElementService } from '../elements/element.service';\nimport { ServiceTokenService } from '../servicesTokens/serviceToken.service';\nimport { Element } from '../elements/entities/element.entity';\n\n@UseGuards(JwtAuthGuard)\n@ApiTags('Services')\n@ApiBearerAuth('access-token')\n@Controller('services')\nexport class ServiceController {\n  constructor(\n    private readonly servicesManager: ServiceManager,\n    private readonly serviceTokenService: ServiceTokenService,\n    private readonly elementService: ElementService,\n  ) {}\n\n  @Post()\n  @ApiExcludeEndpoint()\n  create(@Body() createServiceDto: CreateServiceDto): Promise {\n    return this.servicesManager.create(createServiceDto);\n  }\n\n  @Put()\n  @ApiExcludeEndpoint()\n  updateToken(\n    @Param('token') token: string,\n    @Param('id', ParseIntPipe) id: number,\n  ): Promise {\n    return this.servicesManager.updateToken(token, id);\n  }\n\n  @Get()\n  @Public()\n  @ApiOperation({ summary: 'Get all services' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of services retrieved successfully.',\n  })\n  @ApiResponse({ type: [Service] })\n  async getAllServices() {\n    return await this.servicesManager.findAll();\n  }\n\n  @Get('connected')\n  @ApiOperation({ summary: 'Get all services connected to the user' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of services retrieved successfully.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ type: [Service] })\n  getConnectedServices(@Req() request) {\n    const userId = request.user.userId;\n    return this.serviceTokenService.getAllConnectedServices(parseInt(userId));\n  }\n\n  @Get(':param')\n  @Public()\n  @ApiOperation({ summary: 'Get information about a service by id or by name' })\n  @ApiResponse({\n    status: 200,\n    description: 'Information retrieved successfully.',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: Service })\n  async getServiceById(@Param('param') param: string) {\n    if (!isNaN(Number(param))) {\n      const id = Number(param);\n      return await this.servicesManager.findOne(id);\n    } else {\n      return await this.servicesManager.findByName(param);\n    }\n  }\n\n  @Get(':id/elements')\n  @Public()\n  @ApiOperation({ summary: 'Get elements associated with the service' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of elements retrieved successfully.',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: [Element] })\n  async getElementInServiceById(@Param('id', ParseIntPipe) id: number) {\n    const actionsP = this.elementService.findActionsInServiceById(id);\n    const reactionsP = this.elementService.findReactionsInServiceById(id);\n\n    const [actions, reactions] = await Promise.all([actionsP, reactionsP]);\n    return { actions: actions, reactions: reactions };\n  }\n\n  @Get(':id/actions')\n  @Public()\n  @ApiOperation({ summary: 'Get actions associated with the service' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of actions retrieved successfully.',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: [Element] })\n  async getActionsInServiceById(@Param('id', ParseIntPipe) id: number) {\n    return await this.elementService.findActionsInServiceById(id);\n  }\n\n  @Get(':id/reactions')\n  @Public()\n  @ApiOperation({ summary: 'Get reactions associated with the service' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of reactions retrieved successfully.',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: [Element] })\n  async getReactionsInServiceById(@Param('id', ParseIntPipe) id: number) {\n    return await this.elementService.findReactionsInServiceById(id);\n  }\n\n  @Get(':id/status')\n  @ApiOperation({ summary: 'Know if the user is connected to the service' })\n  @ApiResponse({ status: 200, description: 'Response retrieved successfully.' })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  @ApiResponse({ type: Status })\n  async getStatusServiceById(\n    @Param('id', ParseIntPipe) id: number,\n    @Req() request,\n  ) {\n    const userId = request.user.userId;\n    const status = await this.serviceTokenService.isConnected(userId, id);\n    return { status: status };\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Disconnect user from service' })\n  @ApiResponse({ status: 200, description: 'Resource deleted successfully.' })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized: authentication required',\n  })\n  @ApiResponse({ status: 404, description: 'Resource not found' })\n  disconnectToService(@Param('id', ParseIntPipe) id: number, @Req() request) {\n    return this.serviceTokenService.disconnectServiceById(request.user.id, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceManager.html":{"url":"injectables/ServiceManager.html","title":"injectable - ServiceManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(servicesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-manager.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        servicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServiceDto: CreateServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-manager.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-manager.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-manager.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-manager.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-manager.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateToken(token: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-manager.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { Service } from './entities/service.entity';\n\n@Injectable()\nexport class ServiceManager {\n  constructor(\n    @InjectRepository(Service)\n    private readonly servicesRepository: Repository,\n  ) {}\n\n  async create(createServiceDto: CreateServiceDto): Promise {\n    const service = new Service();\n    service.name = createServiceDto.name;\n    service.description = createServiceDto.description;\n    service.front_data = createServiceDto.front_data;\n    service.key_url = createServiceDto.key_url;\n    service.need_token = createServiceDto.need_token;\n\n    return await this.servicesRepository.save(service);\n  }\n\n  async updateToken(token: string, id: number): Promise {\n    return await this.servicesRepository.update(id, { key_url: token });\n  }\n\n  async findAll(): Promise {\n    return await this.servicesRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.servicesRepository.findOneBy({ id: id });\n  }\n\n  async findByName(name: string): Promise {\n    return await this.servicesRepository.findOneBy({ name: name });\n  }\n\n  async remove(id: string): Promise {\n    await this.servicesRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServiceModule.html":{"url":"modules/ServiceModule.html","title":"module - ServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_exports\n\n\n\ncluster_ServiceModule_providers\n\n\n\ncluster_ServiceModule_imports\n\n\n\n\nActionRegistryModule\n\nActionRegistryModule\n\n\n\nServiceModule\n\nServiceModule\n\nServiceModule -->\n\nActionRegistryModule->ServiceModule\n\n\n\n\n\nElementModule\n\nElementModule\n\nServiceModule -->\n\nElementModule->ServiceModule\n\n\n\nServiceModule -->\n\nElementModule->ServiceModule\n\n\n\n\n\nReactionRegistryModule\n\nReactionRegistryModule\n\nServiceModule -->\n\nReactionRegistryModule->ServiceModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServiceModule -->\n\nUserModule->ServiceModule\n\n\n\n\n\nServiceManager \n\nServiceManager \n\nServiceManager  -->\n\nServiceModule->ServiceManager \n\n\n\n\n\nServiceRegistry \n\nServiceRegistry \n\nServiceRegistry  -->\n\nServiceModule->ServiceRegistry \n\n\n\n\n\nServiceTokenService \n\nServiceTokenService \n\nServiceTokenService  -->\n\nServiceModule->ServiceTokenService \n\n\n\n\n\nDictDataGithubService\n\nDictDataGithubService\n\nServiceModule -->\n\nDictDataGithubService->ServiceModule\n\n\n\n\n\nDictEmailsGmailService\n\nDictEmailsGmailService\n\nServiceModule -->\n\nDictEmailsGmailService->ServiceModule\n\n\n\n\n\nDictEmailsOutlookService\n\nDictEmailsOutlookService\n\nServiceModule -->\n\nDictEmailsOutlookService->ServiceModule\n\n\n\n\n\nGithubService\n\nGithubService\n\nServiceModule -->\n\nGithubService->ServiceModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nServiceModule -->\n\nGoogleService->ServiceModule\n\n\n\n\n\nMicrosoftService\n\nMicrosoftService\n\nServiceModule -->\n\nMicrosoftService->ServiceModule\n\n\n\n\n\nServiceManager\n\nServiceManager\n\nServiceModule -->\n\nServiceManager->ServiceModule\n\n\n\n\n\nServiceRegistry\n\nServiceRegistry\n\nServiceModule -->\n\nServiceRegistry->ServiceModule\n\n\n\n\n\nServiceTokenService\n\nServiceTokenService\n\nServiceModule -->\n\nServiceTokenService->ServiceModule\n\n\n\n\n\nSpotifyService\n\nSpotifyService\n\nServiceModule -->\n\nSpotifyService->ServiceModule\n\n\n\n\n\nTwitchService\n\nTwitchService\n\nServiceModule -->\n\nTwitchService->ServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/services/service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DictDataGithubService\n                        \n                        \n                            DictEmailsGmailService\n                        \n                        \n                            DictEmailsOutlookService\n                        \n                        \n                            GithubService\n                        \n                        \n                            GoogleService\n                        \n                        \n                            MicrosoftService\n                        \n                        \n                            ServiceManager\n                        \n                        \n                            ServiceRegistry\n                        \n                        \n                            ServiceTokenService\n                        \n                        \n                            SpotifyService\n                        \n                        \n                            TwitchService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionRegistryModule\n                        \n                        \n                            ElementModule\n                        \n                        \n                            ElementModule\n                        \n                        \n                            ReactionRegistryModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ServiceManager\n                        \n                        \n                            ServiceRegistry\n                        \n                        \n                            ServiceTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ServiceManager } from './service-manager.service';\nimport { ServiceController } from './service.controller';\nimport { Service } from './entities/service.entity';\nimport { ElementModule } from '../elements/element.module';\nimport { ServiceTokenService } from '../servicesTokens/serviceToken.service';\nimport { ServiceToken } from '../servicesTokens/entities/serviceToken.entity';\nimport { Element } from '../elements/entities/element.entity';\nimport { User } from '../users/entities/user.entity';\nimport { HttpModule } from '@nestjs/axios';\nimport { ServiceRegistry } from './service-classes/service-registry.service';\nimport { GoogleService } from './service-classes/google.service';\nimport { DictEmailsGmail } from '../dictEmailsGmail/entities/dictEmailsGmail.entity';\nimport { DictEmailsGmailService } from '../dictEmailsGmail/dictEmailsGmail.service';\nimport { MicrosoftService } from './service-classes/microsoft.service';\nimport { TwitchService } from './service-classes/twitch.service';\nimport { DictEmailsOutlookService } from '../dictEmailsOutlook/dictEmailsOutlook.service';\nimport { DictEmailsOutlook } from '../dictEmailsOutlook/entities/dictEmailsOutlook.entity';\nimport { ActionRegistryModule } from '../elements/action-classes/action-registry.module';\nimport { ReactionRegistryModule } from '../elements/reaction-classes/reaction-registry.module';\nimport { UserModule } from '../users/user.module';\nimport { GithubService } from './service-classes/github-service.service';\nimport { SpotifyService } from './service-classes/spotify-service.service';\nimport { DictDataGithub } from '../dictDataGithub/entities/dictDataGithub.entity';\nimport { DictDataGithubService } from '../dictDataGithub/dictDataGithub.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Service,\n      ServiceToken,\n      Element,\n      User,\n      DictEmailsGmail,\n      DictEmailsOutlook,\n      DictDataGithub,\n    ]),\n    ElementModule,\n    HttpModule,\n    ActionRegistryModule,\n    ReactionRegistryModule,\n    ElementModule,\n    UserModule,\n  ],\n  providers: [\n    ServiceManager,\n    ServiceTokenService,\n    ServiceRegistry,\n    DictEmailsGmailService,\n    DictEmailsOutlookService,\n    DictDataGithubService,\n    GoogleService,\n    MicrosoftService,\n    TwitchService,\n    GithubService,\n    SpotifyService,\n  ],\n  controllers: [ServiceController],\n  exports: [ServiceManager, ServiceTokenService, ServiceRegistry],\n})\nexport class ServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceRegistry.html":{"url":"injectables/ServiceRegistry.html","title":"injectable - ServiceRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/service-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getElement\n                            \n                            \n                                    Async\n                                registerService\n                            \n                            \n                                unregisterElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceManager: ServiceManager)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/service-registry.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceManager\n                                                  \n                                                        \n                                                                        ServiceManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/service-registry.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseService | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerService\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerService(service: BaseService)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/service-registry.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            BaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregisterElement\n                        \n                    \n                \n            \n            \n                \nunregisterElement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/service-registry.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/models/services/service-classes/service-registry.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ServiceManager } from '../service-manager.service';\nimport { BaseService } from './base-service.service';\n\n@Injectable()\nexport class ServiceRegistry {\n  constructor(private serviceManager: ServiceManager) {}\n  private services = new Map();\n\n  async registerService(service: BaseService) {\n    const tmp = await service.initInDb(this.serviceManager);\n    if (!tmp) {\n      return false;\n    }\n    this.services.set(tmp.id, service);\n    return true;\n  }\n\n  getElement(id: number): BaseService | undefined {\n    return this.services.get(id);\n  }\n\n  unregisterElement(id: number) {\n    this.services.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ServiceToken.html":{"url":"entities/ServiceToken.html","title":"entity - ServiceToken","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ServiceToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/servicesTokens/entities/serviceToken.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                refresh_key\n                            \n                            \n                                    \n                                service\n                            \n                            \n                                    \n                                time_expire\n                            \n                            \n                                    \n                                time_received\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refresh_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Service\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, service => service.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        time_expire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        time_received\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicesTokens/entities/serviceToken.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';\nimport { User } from '../../users/entities/user.entity';\nimport { Service } from '../../services/entities/service.entity';\n\n@Entity()\nexport class ServiceToken {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  key: string;\n\n  @Column()\n  refresh_key: string;\n\n  @Column({ type: 'bigint' })\n  time_received: number;\n\n  @Column({ type: 'bigint' })\n  time_expire: number;\n\n  @ManyToOne(() => User, (user) => user.id)\n  user: User;\n\n  @ManyToOne(() => Service, (service) => service.id)\n  service: Service;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceTokenService.html":{"url":"injectables/ServiceTokenService.html","title":"injectable - ServiceTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/servicesTokens/serviceToken.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                disconnectServiceById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAllConnectedServices\n                            \n                            \n                                    Async\n                                getRefreshTokenServiceUser\n                            \n                            \n                                    Async\n                                isConnected\n                            \n                            \n                                    Async\n                                replaceAccessToken\n                            \n                            \n                                    Async\n                                replaceRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ServicesTokensRepository: Repository, ServicesRepository: Repository, UsersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/servicesTokens/serviceToken.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ServicesTokensRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ServicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UsersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServiceTokenDto: CreateServiceTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceTokenDto\n                                            \n                                                            CreateServiceTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disconnectServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    disconnectServiceById(userId: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllConnectedServices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllConnectedServices(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRefreshTokenServiceUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshTokenServiceUser(userId: number, serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isConnected\n                        \n                    \n                \n            \n            \n                \n                        \n                    isConnected(userId: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        replaceAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceAccessToken(userId: number, serviceId: number, accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        replaceRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceRefreshToken(userId: number, serviceId: number, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, token: CreateServiceTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/servicesTokens/serviceToken.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            CreateServiceTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateServiceTokenDto } from './dto/create-serviceToken.dto';\nimport { ServiceToken } from './entities/serviceToken.entity';\nimport { Service } from '../services/entities/service.entity';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class ServiceTokenService {\n  constructor(\n    @InjectRepository(ServiceToken)\n    private readonly ServicesTokensRepository: Repository,\n    @InjectRepository(Service)\n    private readonly ServicesRepository: Repository,\n    @InjectRepository(User)\n    private readonly UsersRepository: Repository,\n  ) {}\n\n  async create(\n    createServiceTokenDto: CreateServiceTokenDto,\n  ): Promise {\n    const service = await this.ServicesRepository.findOne({\n      where: { id: createServiceTokenDto.serviceId },\n    });\n    const user = await this.UsersRepository.findOne({\n      where: { id: createServiceTokenDto.userId },\n    });\n    if (!user) {\n      throw new Error('Element not found');\n    }\n\n    const serviceToken = new ServiceToken();\n\n    serviceToken.key = createServiceTokenDto.key;\n    serviceToken.refresh_key = createServiceTokenDto.refresh_key;\n    serviceToken.time_received = createServiceTokenDto.time_received;\n    serviceToken.time_expire = createServiceTokenDto.time_expire;\n    serviceToken.user = user;\n    serviceToken.service = service;\n    return this.ServicesTokensRepository.save(serviceToken);\n  }\n\n  async getAllConnectedServices(userId: number) {\n    const userServices = await this.ServicesTokensRepository.find({\n      where: { user: { id: userId } },\n      relations: ['service'],\n    });\n\n    return userServices.map((token) => token.service);\n  }\n\n  async isConnected(userId: number, id: number) {\n    return await this.ServicesTokensRepository.existsBy({\n      user: { id: userId },\n      service: { id: id },\n    });\n  }\n\n  async disconnectServiceById(userId: number, id: number) {\n    const serviceToken = await this.ServicesTokensRepository.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: id },\n      },\n    });\n\n    if (serviceToken) {\n      await this.ServicesTokensRepository.remove(serviceToken);\n    }\n  }\n\n  async replaceAccessToken(\n    userId: number,\n    serviceId: number,\n    accessToken: string,\n  ) {\n    const serviceToken = await this.ServicesTokensRepository.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: serviceId },\n      },\n    });\n    serviceToken.key = accessToken;\n    await this.ServicesTokensRepository.save(serviceToken);\n  }\n\n  async replaceRefreshToken(\n    userId: number,\n    serviceId: number,\n    refreshToken: string,\n  ) {\n    const serviceToken = await this.ServicesTokensRepository.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: serviceId },\n      },\n    });\n    serviceToken.refresh_key = refreshToken;\n    await this.ServicesTokensRepository.save(serviceToken);\n  }\n\n  async getRefreshTokenServiceUser(userId: number, serviceId: number) {\n    const serviceToken = await this.ServicesTokensRepository.findOne({\n      where: {\n        user: { id: userId },\n        service: { id: serviceId },\n      },\n    });\n\n    return serviceToken.refresh_key;\n  }\n\n  async findOne(options: any): Promise {\n    return await this.ServicesTokensRepository.findOne(options);\n  }\n\n  async update(id: number, token: CreateServiceTokenDto) {\n    return await this.ServicesTokensRepository.update(id, {\n      key: token.key,\n      refresh_key: token.refresh_key,\n      time_expire: token.time_expire,\n      time_received: token.time_received,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyAuthGuard.html":{"url":"injectables/SpotifyAuthGuard.html","title":"injectable - SpotifyAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/spotify-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('spotify')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthenticateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticateOptions\n                        \n                    \n                \n            \n            \n                \ngetAuthenticateOptions(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/spotify-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { state: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class SpotifyAuthGuard extends AuthGuard('spotify') {\n  getAuthenticateOptions(context: ExecutionContext) {\n    const request = this.getRequest(context);\n    return { state: request.query.state };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyService.html":{"url":"injectables/SpotifyService.html","title":"injectable - SpotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/spotify-service.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                front_data\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                need_token\n                            \n                            \n                                    Protected\n                                serviceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                storeNewToken\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceTokenService: ServiceTokenService, httpService: HttpService, configService: ConfigService, serviceRegistry: ServiceRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/spotify-service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/spotify-service.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(services: ServiceManager)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                            ServiceManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { BaseService } from './base-service.service';\nimport { ConfigService } from '@nestjs/config';\nimport { ServiceRegistry } from './service-registry.service';\nimport { ServiceTokenService } from 'src/models/servicesTokens/serviceToken.service';\n\n@Injectable()\nexport class SpotifyService extends BaseService implements OnModuleInit {\n  constructor(\n    private serviceTokenService: ServiceTokenService,\n    private httpService: HttpService,\n    private configService: ConfigService,\n    private serviceRegistry: ServiceRegistry,\n  ) {\n    super(\n      'spotify',\n      'Access to your Spotify account',\n      '{\"icon\": \"./assets/services/spotify.png\", \"color\": \"#1DB954\"}',\n      true,\n      [],\n      [],\n    );\n  }\n\n  async onModuleInit() {\n    await this.serviceRegistry.registerService(this);\n  }\n\n  async storeNewToken(userId: number) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyStrategy.html":{"url":"injectables/SpotifyStrategy.html","title":"injectable - SpotifyStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpotifyStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/spotify.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'spotify')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/spotify.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_accessToken: string, _refreshToken: string, profile: Profile, done: VerifyCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/spotify.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                        Profile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifyCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ConfigService } from '@nestjs/config';\nimport { Profile, Strategy, VerifyCallback } from 'passport-spotify';\n\n@Injectable()\nexport class SpotifyStrategy extends PassportStrategy(Strategy, 'spotify') {\n  constructor(configService: ConfigService) {\n    super({\n      clientID: configService.get('spotify.client_id'),\n      clientSecret: configService.get('spotify.client_secret'),\n      callbackURL:\n        configService.get('app.back_url') +\n        configService.get('spotify.redirect_uri'),\n      scope: ['user-read-private', 'user-read-email'],\n    });\n  }\n\n  async validate(\n    _accessToken: string,\n    _refreshToken: string,\n    profile: Profile,\n    done: VerifyCallback,\n  ): Promise {\n    const { id, provider } = profile;\n    const user = {\n      provider: provider,\n      spotifyId: id,\n      accessToken: _accessToken,\n      refreshToken: _refreshToken,\n    };\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Status.html":{"url":"classes/Status.html","title":"class - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, description: 'Object is actif'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/services/dto/create-service.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateServiceDto {\n  @ApiProperty({ example: 'Google', description: 'The name of the service' })\n  name: string;\n\n  @ApiProperty({\n    example: 'Use Gmail and GoogleCalendar',\n    description: 'The description of the service',\n  })\n  description: string;\n\n  @ApiProperty({ example: 'A definir', description: 'A definir' })\n  front_data: string;\n\n  @ApiProperty({ example: 'A definir', description: 'A definir' })\n  need_token: boolean;\n\n  @ApiProperty({\n    example: 'Voir si on utilise',\n    description: 'Voir si on utilise',\n  })\n  key_url: string;\n}\n\nexport class Status {\n  @ApiProperty({ example: true, description: 'Object is actif' })\n  status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The connexion token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginDto {\n  @ApiProperty({ example: 'nathan@test.com', description: 'The email of the user' })\n  email: string;\n\n  @ApiProperty({ example: 'password', description: 'The password of the user' })\n  password: string;\n}\n\nexport class RegisterDto {\n  @ApiProperty({ example: 'nathan@test.com', description: 'The email of the user' })\n  email: string;\n\n  @ApiProperty({ example: 'password', description: 'The password of the user' })\n  password: string;\n\n  @ApiProperty({ example: 'Nathan', description: 'The surname of the user' })\n  surname: string;\n\n  @ApiProperty({ example: 'Baudelin', description: 'The lastname of the user' })\n  lastname: string;\n}\n\nexport class Token {\n  @ApiProperty({description: 'The connexion token' })\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitchAuthGuard.html":{"url":"injectables/TwitchAuthGuard.html","title":"injectable - TwitchAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitchAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/twitch-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('twitch')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthenticateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticateOptions\n                        \n                    \n                \n            \n            \n                \ngetAuthenticateOptions(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/twitch-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { state: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class TwitchAuthGuard extends AuthGuard('twitch') {\n  getAuthenticateOptions(context: ExecutionContext) {\n    const request = this.getRequest(context);\n    return { state: request.query.state };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitchService.html":{"url":"injectables/TwitchService.html","title":"injectable - TwitchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/services/service-classes/twitch.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                front_data\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                need_token\n                            \n                            \n                                    Protected\n                                serviceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                storeNewToken\n                            \n                            \n                                    Async\n                                initInDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceTokenService: ServiceTokenService, httpService: HttpService, configService: ConfigService, serviceRegistry: ServiceRegistry, actionRegistry: ActionRegistry, reactionRegistry: ReactionRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/models/services/service-classes/twitch.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceTokenService\n                                                  \n                                                        \n                                                                        ServiceTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceRegistry\n                                                  \n                                                        \n                                                                        ServiceRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionRegistry\n                                                  \n                                                        \n                                                                        ActionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionRegistry\n                                                  \n                                                        \n                                                                        ReactionRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/services/service-classes/twitch.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        storeNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeNewToken(userId: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initInDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInDb(services: ServiceManager)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                            ServiceManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        front_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        need_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { BaseService } from './base-service.service';\nimport { ServiceTokenService } from 'src/models/servicesTokens/serviceToken.service';\nimport { HttpService } from '@nestjs/axios';\nimport { ConfigService } from '@nestjs/config';\nimport { ServiceRegistry } from './service-registry.service';\nimport { ActionRegistry } from 'src/models/elements/action-classes/action-registry.service';\nimport { firstValueFrom } from 'rxjs';\nimport { ReactionRegistry } from 'src/models/elements/reaction-classes/reaction-registry.service';\n\n@Injectable()\nexport class TwitchService extends BaseService implements OnModuleInit {\n  constructor(\n    private serviceTokenService: ServiceTokenService,\n    private httpService: HttpService,\n    private configService: ConfigService,\n    private serviceRegistry: ServiceRegistry,\n    private actionRegistry: ActionRegistry,\n    private reactionRegistry: ReactionRegistry,\n  ) {\n    super(\n      'twitch',\n      'twitch description',\n      '{\"icon\": \"./assets/services/twitch.png\", \"color\": \"#6441a5\"}',\n      true,\n      [],\n      [],\n    );\n  }\n\n  async onModuleInit() {\n    await this.serviceRegistry.registerService(this);\n  }\n\n  async storeNewToken(userId: number) {\n    const refresh_token =\n      await this.serviceTokenService.getRefreshTokenServiceUser(\n        userId,\n        this.serviceId,\n      );\n    const url = 'https://id.twitch.tv/oauth2/token';\n    const formData = new URLSearchParams();\n    formData.append(\n      'client_id',\n      this.configService.get('twitch.clientID'),\n    );\n    formData.append(\n      'client_secret',\n      this.configService.get('twitch.clientSecret'),\n    );\n    formData.append('grant_type', 'refresh_token');\n    formData.append('refresh_token', refresh_token);\n\n    const response = await firstValueFrom(\n      this.httpService.post(url, formData.toString(), {\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      }),\n    );\n    await this.serviceTokenService.replaceAccessToken(\n      userId,\n      this.serviceId,\n      response.data.access_token,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitchStrategy.html":{"url":"injectables/TwitchStrategy.html","title":"injectable - TwitchStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitchStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/twitch.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'twitch')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/twitch.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_accessToken: string, _refreshToken: string, profile: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/twitch.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-twitch-new';\n\n@Injectable()\nexport class TwitchStrategy extends PassportStrategy(Strategy, 'twitch') {\n  constructor(configService: ConfigService) {\n    super({\n      clientID: configService.get('twitch.clientID'),\n      clientSecret: configService.get('twitch.clientSecret'),\n      callbackURL: configService.get('twitch.callbackURL'),\n      scope: ['user:read:email'],\n    });\n  }\n\n  async validate(\n    _accessToken: string,\n    _refreshToken: string,\n    profile: any,\n  ): Promise {\n    const { id, display_name, email, profile_image_url } = profile;\n    return {\n      provider: 'twitch',\n      id: id,\n      email: email,\n      surname: `${display_name}`,\n      lastname: `${display_name}`,\n      picture: profile_image_url,\n      accessToken: _accessToken,\n      refreshToken: _refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                    \n                                createdWithService\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                serviceTokens\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, area => area.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdWithService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Was the account created using a service'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'nathan@test.com', description: 'The email of the user'})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'The id of the user'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Baudelin', description: 'The lastname of the user'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The hashed password of the user'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceTokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceToken[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, serviceToken => serviceToken.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Nathan', description: 'The surname of the user'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, OneToMany } from 'typeorm';\nimport { ServiceToken } from '../../servicesTokens/entities/serviceToken.entity';\nimport { Area } from '../../areas/entities/area.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class User {\n  @ApiProperty({ example: 1, description: 'The id of the user' })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Nathan', description: 'The surname of the user' })\n  @Column()\n  surname: string;\n\n  @ApiProperty({ example: 'Baudelin', description: 'The lastname of the user' })\n  @Column()\n  lastname: string;\n\n  @ApiProperty({\n    example: 'nathan@test.com',\n    description: 'The email of the user',\n  })\n  @Column({ unique: true })\n  email: string;\n\n  @ApiProperty({ description: 'The hashed password of the user' })\n  @Column({ nullable: true })\n  password: string;\n\n  @ApiProperty({ description: 'Was the account created using a service' })\n  @Column()\n  createdWithService: boolean;\n\n  @OneToMany(() => ServiceToken, (serviceToken) => serviceToken.user)\n  serviceTokens: ServiceToken[];\n\n  @OneToMany(() => Area, (area) => area.user)\n  area: Area[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/users/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserService } from './user.service';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneEmail\n                            \n                            \n                                findOneId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/users/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneId\n                        \n                    \n                \n            \n            \n                \nfindOneId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, user: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const user = new User();\n    user.surname = createUserDto.surname;\n    user.lastname = createUserDto.lastname;\n    user.email = createUserDto.email;\n    user.password = createUserDto.password;\n    user.createdWithService = createUserDto.createdWithService;\n\n    return await this.usersRepository.save(user);\n  }\n\n  async findAll(): Promise {\n    return this.usersRepository.find();\n  }\n\n  findOneId(id: number): Promise {\n    return this.usersRepository.findOneBy({ id: id });\n  }\n\n  async findOneEmail(email: string): Promise {\n    return await this.usersRepository.findOneBy({ email: email });\n  }\n\n  async remove(id: string): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  async update(id: number, user: CreateUserDto) {\n    await this.usersRepository.update(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-dto.ts\n            \n            class\n            Token\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/github-auth.guard.ts\n            \n            injectable\n            GithubAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/google-auth.guard.ts\n            \n            injectable\n            GoogleAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/ms-auth.guard.ts\n            \n            injectable\n            MsAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/spotify-auth.guard.ts\n            \n            injectable\n            SpotifyAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/twitch-auth.guard.ts\n            \n            injectable\n            TwitchAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategies/github.strategy.ts\n            \n            injectable\n            GithubStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/google.strategy.ts\n            \n            injectable\n            GoogleStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/ms.strategy.ts\n            \n            injectable\n            MsStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/spotify.strategy.ts\n            \n            injectable\n            SpotifyStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/twitch.strategy.ts\n            \n            injectable\n            TwitchStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/constants/metadata.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/metadata.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            injectable\n            ConfigsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/areas/area-classes/area-registry.service.ts\n            \n            injectable\n            AreaRegistry\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/areas/area-classes/base-area.service.ts\n            \n            injectable\n            BaseArea\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/areas/area.controller.ts\n            \n            controller\n            AreaController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/areas/area.service.ts\n            \n            injectable\n            AreaService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            ActionDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            AreaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            CreateAreaDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            Reaction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/areas/dto/create-area.dto.ts\n            \n            class\n            ReactionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/areas/entities/area.entity.ts\n            \n            entity\n            Area\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/areasReactions/areaReaction.service.ts\n            \n            injectable\n            AreaReactionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/areasReactions/dto/create-areaReaction.dto.ts\n            \n            class\n            CreateAreaReactionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/areasReactions/entities/areaReaction.entity.ts\n            \n            entity\n            AreaReaction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/dictDataGithub/dictDataGithub.service.ts\n            \n            injectable\n            DictDataGithubService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/dictDataGithub/dto/create-dictDataGithub.dto.ts\n            \n            class\n            CreateDictDataGithubDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/dictDataGithub/entities/dictDataGithub.entity.ts\n            \n            entity\n            DictDataGithub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/dictEmailsGmail/dictEmailsGmail.service.ts\n            \n            injectable\n            DictEmailsGmailService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/dictEmailsGmail/dto/create-dictEmailsGmail.dto.ts\n            \n            class\n            CreateDictEmailsGmailDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/dictEmailsGmail/entities/dictEmailsGmail.entity.ts\n            \n            entity\n            DictEmailsGmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/dictEmailsOutlook/dictEmailsOutlook.service.ts\n            \n            injectable\n            DictEmailsOutlookService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/dictEmailsOutlook/dto/create-dictEmailsOutlook.dto.ts\n            \n            class\n            CreateDictEmailsOutlookDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/dictEmailsOutlook/entities/dictEmailsOutlook.entity.ts\n            \n            entity\n            DictEmailsOutlook\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/action-registry.service.ts\n            \n            injectable\n            ActionRegistry\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/base-action.service.ts\n            \n            injectable\n            BaseAction\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/github-issue-assigned.ts\n            \n            injectable\n            GithubActionIssueAssigned\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/github-repository-starred.ts\n            \n            injectable\n            GithubRepositoryStarred\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/gmail-email-deleted.ts\n            \n            injectable\n            GmailActionEmailDeleted\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/gmail-email-received.ts\n            \n            injectable\n            GmailActionEmailReceived\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/gmail-email-sent.ts\n            \n            injectable\n            GmailActionEmailSent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/outlook-email-deleted.ts\n            \n            injectable\n            OutlookActionEmailDeleted\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/outlook-email-received.ts\n            \n            injectable\n            OutlookActionEmailReceived\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/action-classes/outlook-email-sent.ts\n            \n            injectable\n            OutlookActionEmailSent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/elements/dto/create-element.dto.ts\n            \n            class\n            CreateElementDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/elements/element.controller.ts\n            \n            controller\n            ElementController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/elements/element.service.ts\n            \n            injectable\n            ElementService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/elements/entities/element.entity.ts\n            \n            entity\n            Element\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/base-reaction.service.ts\n            \n            injectable\n            BaseReaction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/gmail-delete-email.ts\n            \n            injectable\n            GmailReactionDeleteEmail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/gmail-flag-email.ts\n            \n            injectable\n            GmailReactionFlagEmail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/gmail-send-email.ts\n            \n            injectable\n            GmailReactionSendEmail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/outlook-delete-email.ts\n            \n            injectable\n            OutlookReactionDeleteEmail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/outlook-flag-email.ts\n            \n            injectable\n            OutlookReactionFlagEmail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/outlook-send-email.ts\n            \n            injectable\n            OutlookReactionSendEmail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/elements/reaction-classes/reaction-registry.service.ts\n            \n            injectable\n            ReactionRegistry\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/services/dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/services/dto/create-service.dto.ts\n            \n            class\n            Status\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/services/entities/service.entity.ts\n            \n            entity\n            Service\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/base-service.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/github-service.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/google.service.ts\n            \n            injectable\n            GoogleService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/microsoft.service.ts\n            \n            injectable\n            MicrosoftService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/service-registry.service.ts\n            \n            injectable\n            ServiceRegistry\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/spotify-service.service.ts\n            \n            injectable\n            SpotifyService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/services/service-classes/twitch.service.ts\n            \n            injectable\n            TwitchService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/services/service-manager.service.ts\n            \n            injectable\n            ServiceManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/services/service.controller.ts\n            \n            controller\n            ServiceController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/servicesTokens/dto/create-serviceToken.dto.ts\n            \n            class\n            CreateServiceTokenDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/servicesTokens/entities/serviceToken.entity.ts\n            \n            entity\n            ServiceToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/servicesTokens/serviceToken.service.ts\n            \n            injectable\n            ServiceTokenService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.3\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^4.1.1\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            argon2 : ^0.41.1\n        \n            cookie-parser : ^1.4.7\n        \n            jsonwebtoken : ^9.0.2\n        \n            passport : ^0.7.0\n        \n            passport-github : ^1.1.0\n        \n            passport-github2 : ^0.1.12\n        \n            passport-google-oauth2 : ^0.2.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            passport-microsoft : ^2.1.0\n        \n            passport-spotify : ^2.0.0\n        \n            passport-twitch-new : ^0.0.3\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionRegistryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AreaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ElementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrmModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReactionRegistryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionRegistryModule\n\n\n\ncluster_ActionRegistryModule_imports\n\n\n\ncluster_ActionRegistryModule_exports\n\n\n\ncluster_ActionRegistryModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AreaModule\n\n\n\ncluster_AreaModule_imports\n\n\n\ncluster_AreaModule_exports\n\n\n\ncluster_AreaModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ElementModule\n\n\n\ncluster_ElementModule_exports\n\n\n\ncluster_ReactionRegistryModule\n\n\n\ncluster_ReactionRegistryModule_exports\n\n\n\ncluster_ReactionRegistryModule_providers\n\n\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_exports\n\n\n\ncluster_ServiceModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nElementModule\n\nElementModule\n\n\n\nActionRegistryModule\n\nActionRegistryModule\n\nActionRegistryModule -->\n\nElementModule->ActionRegistryModule\n\n\n\n\n\nAreaModule\n\nAreaModule\n\nAreaModule -->\n\nElementModule->AreaModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nServiceModule -->\n\nElementModule->ServiceModule\n\n\n\nServiceModule -->\n\nElementModule->ServiceModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nElementModule->AppModule\n\n\n\n\n\nReactionRegistryModule\n\nReactionRegistryModule\n\nReactionRegistryModule -->\n\nElementModule->ReactionRegistryModule\n\n\n\n\n\nElementService \n\nElementService \n\nElementService  -->\n\nElementModule->ElementService \n\n\n\n\n\nActionRegistry \n\nActionRegistry \n\nActionRegistry  -->\n\nActionRegistryModule->ActionRegistry \n\n\n\nAreaModule -->\n\nActionRegistryModule->AreaModule\n\n\n\nServiceModule -->\n\nActionRegistryModule->ServiceModule\n\n\n\n\n\nActionRegistry\n\nActionRegistry\n\nActionRegistryModule -->\n\nActionRegistry->ActionRegistryModule\n\n\n\nAppModule -->\n\nAreaModule->AppModule\n\n\n\n\n\nAreaReactionService \n\nAreaReactionService \n\nAreaReactionService  -->\n\nAreaModule->AreaReactionService \n\n\n\n\n\nAreaRegistry \n\nAreaRegistry \n\nAreaRegistry  -->\n\nAreaModule->AreaRegistry \n\n\n\n\n\nAreaService \n\nAreaService \n\nAreaService  -->\n\nAreaModule->AreaService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nConfigsModule\n\nConfigsModule\n\nAppModule -->\n\nConfigsModule->AppModule\n\n\n\n\n\nOrmModule\n\nOrmModule\n\nAppModule -->\n\nOrmModule->AppModule\n\n\n\nAreaModule -->\n\nServiceModule->AreaModule\n\n\n\nAuthModule -->\n\nServiceModule->AuthModule\n\n\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nServiceManager \n\nServiceManager \n\nServiceManager  -->\n\nServiceModule->ServiceManager \n\n\n\n\n\nServiceRegistry \n\nServiceRegistry \n\nServiceRegistry  -->\n\nServiceModule->ServiceRegistry \n\n\n\n\n\nServiceTokenService \n\nServiceTokenService \n\nServiceTokenService  -->\n\nServiceModule->ServiceTokenService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAreaModule -->\n\nReactionRegistryModule->AreaModule\n\n\n\nServiceModule -->\n\nReactionRegistryModule->ServiceModule\n\n\n\n\n\nReactionRegistry \n\nReactionRegistry \n\nReactionRegistry  -->\n\nReactionRegistryModule->ReactionRegistry \n\n\n\n\n\nAreaReactionService\n\nAreaReactionService\n\nAreaModule -->\n\nAreaReactionService->AreaModule\n\n\n\n\n\nAreaRegistry\n\nAreaRegistry\n\nAreaModule -->\n\nAreaRegistry->AreaModule\n\n\n\n\n\nAreaService\n\nAreaService\n\nAreaModule -->\n\nAreaService->AreaModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nServiceModule -->\n\nUserModule->ServiceModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nElementService\n\nElementService\n\nElementModule -->\n\nElementService->ElementModule\n\n\n\nAuthModule -->\n\nElementService->AuthModule\n\n\n\n\n\nGithubStrategy\n\nGithubStrategy\n\nAuthModule -->\n\nGithubStrategy->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMsStrategy\n\nMsStrategy\n\nAuthModule -->\n\nMsStrategy->AuthModule\n\n\n\n\n\nServiceTokenService\n\nServiceTokenService\n\nAuthModule -->\n\nServiceTokenService->AuthModule\n\n\n\nServiceModule -->\n\nServiceTokenService->ServiceModule\n\n\n\n\n\nSpotifyStrategy\n\nSpotifyStrategy\n\nAuthModule -->\n\nSpotifyStrategy->AuthModule\n\n\n\n\n\nTwitchStrategy\n\nTwitchStrategy\n\nAuthModule -->\n\nTwitchStrategy->AuthModule\n\n\n\n\n\nReactionRegistry\n\nReactionRegistry\n\nReactionRegistryModule -->\n\nReactionRegistry->ReactionRegistryModule\n\n\n\n\n\nDictDataGithubService\n\nDictDataGithubService\n\nServiceModule -->\n\nDictDataGithubService->ServiceModule\n\n\n\n\n\nDictEmailsGmailService\n\nDictEmailsGmailService\n\nServiceModule -->\n\nDictEmailsGmailService->ServiceModule\n\n\n\n\n\nDictEmailsOutlookService\n\nDictEmailsOutlookService\n\nServiceModule -->\n\nDictEmailsOutlookService->ServiceModule\n\n\n\n\n\nGithubService\n\nGithubService\n\nServiceModule -->\n\nGithubService->ServiceModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nServiceModule -->\n\nGoogleService->ServiceModule\n\n\n\n\n\nMicrosoftService\n\nMicrosoftService\n\nServiceModule -->\n\nMicrosoftService->ServiceModule\n\n\n\n\n\nServiceManager\n\nServiceManager\n\nServiceModule -->\n\nServiceManager->ServiceModule\n\n\n\n\n\nServiceRegistry\n\nServiceRegistry\n\nServiceModule -->\n\nServiceRegistry->ServiceModule\n\n\n\n\n\nSpotifyService\n\nSpotifyService\n\nServiceModule -->\n\nSpotifyService->ServiceModule\n\n\n\n\n\nTwitchService\n\nTwitchService\n\nServiceModule -->\n\nTwitchService->ServiceModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    53 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtPayload   (src/.../jwt.strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/strategies/jwt.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../metadata.ts)\n                        \n                        \n                            Public   (src/.../metadata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
